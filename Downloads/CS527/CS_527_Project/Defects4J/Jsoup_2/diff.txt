diff --git a/CHANGES b/CHANGES
index 9b58958..b10b96a 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,7 +1,11 @@
 jsoup changelog
 
 *** Release 1.1.2 (pending)
- * Fix an issue where text order was incorrect when parsing pre-document
+ * Fixes an issue where text content after a script (or other data-node) was
+     incorrectly added to the data node.
+       <http://github.com/jhy/jsoup/issues/issue/22>
+
+ * Fixes an issue where text order was incorrect when parsing pre-document
     HTML.
       <http://github.com/jhy/jsoup/issues/issue/23>
 
diff --git a/src/main/java/org/jsoup/parser/Parser.java b/src/main/java/org/jsoup/parser/Parser.java
index 81bb0ab..e7284d5 100644
--- a/src/main/java/org/jsoup/parser/Parser.java
+++ b/src/main/java/org/jsoup/parser/Parser.java
@@ -139,11 +139,13 @@ public class Parser {
         } else {
             tq.matchChomp(">");
         }
+        addChildToParent(child, isEmptyElement);
 
         // pc data only tags (textarea, script): chomp to end tag, add content as text node
         if (tag.isData()) {
             String data = tq.chompTo("</" + tagName);
             tq.chompTo(">");
+            popStackToClose(tag);
             
             Node dataNode;
             if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
@@ -161,8 +163,6 @@ public class Parser {
                 doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
             }
         }
-
-        addChildToParent(child, isEmptyElement);
     }
 
     private Attribute parseAttribute() {
diff --git a/src/test/java/org/jsoup/parser/ParserTest.java b/src/test/java/org/jsoup/parser/ParserTest.java
index 293f692..c6a6235 100644
--- a/src/test/java/org/jsoup/parser/ParserTest.java
+++ b/src/test/java/org/jsoup/parser/ParserTest.java
@@ -131,6 +131,12 @@ public class ParserTest {
         assertEquals("Hello There", doc.text());
         assertEquals("Nope", doc.data());
     }
+
+    @Test public void handlesTextAfterData() {
+        String h = "<html><body>pre <script>inner</script> aft</body></html>";
+        Document doc = Jsoup.parse(h);
+        assertEquals("<html><head></head><body>pre <script>inner</script> aft</body></html>", TextUtil.stripNewlines(doc.html()));
+    }
     
     @Test public void handlesTextArea() {
         Document doc = Jsoup.parse("<textarea>Hello</textarea>");
