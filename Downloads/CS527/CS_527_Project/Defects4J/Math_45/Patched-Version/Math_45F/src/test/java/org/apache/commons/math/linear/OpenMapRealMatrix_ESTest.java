/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 04:20:18 GMT 2024
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealMatrixPreservingVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OpenMapRealMatrix_ESTest extends OpenMapRealMatrix_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 218;
      int int1 = 20;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(218, 20);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      // Undeclared exception!
      try { 
        openMapRealMatrix1.multiply(openMapRealMatrix0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 20 != 218
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(115, 115);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.multiply((OpenMapRealMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(216, 216);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.subtract((RealMatrix) array2DRowRealMatrix0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // got 216x216 but expected 1x1
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 68;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(68, 68);
      int int1 = (-2535);
      DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor0 = new DefaultRealMatrixPreservingVisitor();
      openMapRealMatrix0.walkInRowOrder((RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor0);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.addToEntry(0, (-2535), 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // column index (-2,535)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 970;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(970, 970);
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(970, 970);
      openMapRealMatrix0.multiply((RealMatrix) blockRealMatrix0);
      OpenMapRealMatrix openMapRealMatrix1 = openMapRealMatrix0.createMatrix(970, 970);
      int int1 = (-1641);
      // Undeclared exception!
      try { 
        openMapRealMatrix1.getEntry((-1641), (-4822));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (-1,641)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 41;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(41, 41);
      DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor0 = new DefaultRealMatrixPreservingVisitor();
      openMapRealMatrix0.walkInOptimizedOrder((RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor0);
      openMapRealMatrix0.getColumnDimension();
      openMapRealMatrix0.getColumnDimension();
      OpenMapRealMatrix openMapRealMatrix1 = openMapRealMatrix0.copy();
      OpenMapRealMatrix openMapRealMatrix2 = openMapRealMatrix0.copy();
      openMapRealMatrix2.getColumnDimension();
      int int1 = (-456);
      double double0 = 25.97;
      // Undeclared exception!
      try { 
        openMapRealMatrix1.addToEntry((-1391), (-456), 25.97);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (-1,391)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(3536, 960);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.addToEntry(3536, 3536, 960);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (3,536)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 286;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(286, 286);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.add((OpenMapRealMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1826, 1826);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      openMapRealMatrix1.multiply(openMapRealMatrix0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = Integer.MAX_VALUE;
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix(Integer.MAX_VALUE, Integer.MAX_VALUE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4,611,686,014,132,420,609 is larger than, or equal to, the maximum (2,147,483,647)
         //
         verifyException("org.apache.commons.math.linear.OpenMapRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(291, 291);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(291, 291);
      openMapRealMatrix0.add(openMapRealMatrix1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix(Integer.MAX_VALUE, Integer.MAX_VALUE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4,611,686,014,132,420,609 is larger than, or equal to, the maximum (2,147,483,647)
         //
         verifyException("org.apache.commons.math.linear.OpenMapRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 162;
      int int1 = 1384;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(162, 1384);
      openMapRealMatrix0.copy();
      openMapRealMatrix0.copy();
      openMapRealMatrix0.createMatrix(1384, 162);
      double[] doubleArray0 = new double[0];
      ArrayRealVector arrayRealVector0 = null;
      try {
        arrayRealVector0 = new ArrayRealVector(doubleArray0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.ArrayRealVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(585, 585);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      OpenMapRealMatrix openMapRealMatrix2 = openMapRealMatrix1.createMatrix(585, 3278);
      openMapRealMatrix2.getColumnDimension();
      openMapRealMatrix0.getEntry(0, 0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(144, 144);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.createMatrix(144, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 71;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(71, 71);
      openMapRealMatrix0.getNorm();
      OpenMapRealMatrix openMapRealMatrix1 = openMapRealMatrix0.copy();
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        openMapRealMatrix1.setColumn(71, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // column index (71)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 970;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(970, 970);
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(970, 970);
      openMapRealMatrix0.multiply((RealMatrix) blockRealMatrix0);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.getEntry(52, (-4822));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // column index (-4,822)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 27;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(27, 27);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      openMapRealMatrix0.getTrace();
      openMapRealMatrix1.scalarAdd(27);
      openMapRealMatrix1.getRowDimension();
      int int1 = Integer.MAX_VALUE;
      int int2 = (-4447);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.setEntry(Integer.MAX_VALUE, (-4447), (-730.245500048));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (2,147,483,647)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1528, 1528);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.multiplyEntry(1528, 1528, 1.0E-12);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (1,528)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = null;
      OpenMapRealMatrix openMapRealMatrix1 = null;
      try {
        openMapRealMatrix1 = new OpenMapRealMatrix((OpenMapRealMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.OpenMapRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(289, 289);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      openMapRealMatrix1.multiply((RealMatrix) openMapRealMatrix0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 1888;
      int int1 = (-280);
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix(1888, (-280));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -280 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 1937;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1937, 1937);
      double double0 = 988.610217053;
      // Undeclared exception!
      openMapRealMatrix0.transpose();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = (-1425);
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix((-1425), (-1425));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1,425 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = Integer.MAX_VALUE;
      int int1 = (-1633);
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix(Integer.MAX_VALUE, (-1633));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1,633 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(3560, 3560);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      openMapRealMatrix0.subtract((RealMatrix) openMapRealMatrix1);
      openMapRealMatrix1.multiplyEntry(0, 242, 0);
      OpenMapRealMatrix openMapRealMatrix2 = openMapRealMatrix1.subtract(openMapRealMatrix0);
      // Undeclared exception!
      try { 
        openMapRealMatrix2.multiplyEntry(242, 3560, 242);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // column index (3,560)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = (-4278);
      int int1 = (-1);
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix((-4278), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -4,278 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }
}
