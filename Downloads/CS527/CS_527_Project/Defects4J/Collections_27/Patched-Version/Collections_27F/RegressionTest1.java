import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test501");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj10 = serializableMap7.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection11 = serializableMap7.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int20 = serializableMap12.size((java.lang.Object) (short) -1);
        int int22 = serializableMap12.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean42 = serializableMap34.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int48 = serializableMap44.totalSize();
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj52 = serializableMap44.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj53 = serializableMap34.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor54 = serializableMap25.iterator((java.lang.Object) serializableMap34);
        java.lang.Object obj55 = serializableMap12.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean63 = serializableMap57.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int64 = serializableMap57.size();
        boolean boolean65 = serializableMap7.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap57);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int74 = serializableMap66.size((java.lang.Object) (short) -1);
        int int76 = serializableMap66.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor77 = serializableMap66.iterator();
        boolean boolean78 = serializableMap7.containsKey((java.lang.Object) serializableMap66);
        boolean boolean79 = serializableMap0.equals((java.lang.Object) serializableMap7);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor80 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(serializableEntryItor80);
    }

    @Test
    public void test502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test502");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.util.Set<java.io.Serializable> serializableSet6 = serializableMap0.keySet();
        java.util.Set<java.io.Serializable> serializableSet7 = serializableMap0.keySet();
        int int9 = serializableMap0.size((java.lang.Object) 0);
        boolean boolean10 = serializableMap0.isEmpty();
        java.lang.Object obj11 = null;
        int int12 = serializableMap0.size(obj11);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test503");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int26 = serializableMap22.totalSize();
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj30 = serializableMap22.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap10.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj32 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor33 = serializableMap10.iterator(obj32);
        java.util.Set<java.io.Serializable> serializableSet34 = serializableMap10.keySet();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.util.Collection<java.lang.Object> objCollection36 = serializableMap10.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.IterableGet<java.io.Serializable, java.lang.Object>> serializableMap37 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.String str38 = serializableMap37.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(serializableMap37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{1=[100]}" + "'", str38, "{1=[100]}");
    }

    @Test
    public void test504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test504");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        boolean boolean10 = serializableMap1.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap11 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int20 = serializableMap12.size((java.lang.Object) (short) -1);
        int int22 = serializableMap12.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor23 = serializableMap12.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor24 = serializableMap12.mapIterator();
        serializableMap12.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet26 = serializableMap12.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean33 = serializableMap27.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int34 = serializableMap27.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor35 = serializableMap27.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int43 = serializableMap36.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor44 = serializableMap36.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean51 = serializableMap45.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int52 = serializableMap45.size();
        java.util.Collection<java.lang.Object> objCollection53 = serializableMap45.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap54.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection59 = serializableMap54.values();
        java.io.Serializable serializable60 = null;
        java.lang.Object obj62 = serializableMap54.putIfAbsent(serializable60, (java.lang.Object) 0);
        serializableMap54.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean67 = serializableMap64.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean70 = serializableMap64.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int72 = serializableMap64.size((java.lang.Object) (short) -1);
        boolean boolean74 = serializableMap64.equals((java.lang.Object) (short) 1);
        serializableMap64.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap77 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean81 = serializableMap78.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int82 = serializableMap78.totalSize();
        serializableMap77.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap78);
        java.lang.Object obj86 = serializableMap78.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj87 = serializableMap64.replace((java.io.Serializable) serializableMap76, (java.lang.Object) 1);
        java.lang.Object obj88 = serializableMap54.remove((java.lang.Object) serializableMap64);
        java.util.Iterator<java.lang.String> strItor89 = serializableMap45.iterator(obj88);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet90 = serializableMap45.entrySet();
        boolean boolean91 = serializableMap27.removeMapping((java.lang.Object) serializableItor44, (java.lang.Object) serializableMap45);
        boolean boolean92 = serializableMap12.containsKey((java.lang.Object) serializableMap45);
        int int93 = serializableMap1.size((java.lang.Object) serializableMap45);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serializableMap11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor23);
        org.junit.Assert.assertNotNull(serializableItor24);
        org.junit.Assert.assertNotNull(serializableEntrySet26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(serializableItor35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(serializableItor44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertNotNull(serializableEntrySet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test505");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj19 = serializableMap0.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        int int30 = serializableMap20.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        serializableMap31.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj40 = serializableMap32.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj42 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor43 = serializableMap20.iterator(obj42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj50 = serializableMap44.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj52 = serializableMap44.get((java.lang.Object) 100.0d);
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj54 = null;
        java.util.Iterator<java.lang.String> strItor55 = serializableMap20.iterator(obj54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean74 = serializableMap66.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int80 = serializableMap76.totalSize();
        serializableMap75.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap76);
        java.lang.Object obj84 = serializableMap76.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj85 = serializableMap66.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor86 = serializableMap57.iterator((java.lang.Object) serializableMap66);
        serializableMap57.clear();
        boolean boolean88 = serializableMap0.removeMapping((java.lang.Object) strItor55, (java.lang.Object) serializableMap57);
        int int89 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap90 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean92 = serializableMap90.equals((java.lang.Object) (short) 10);
        java.util.Set<java.io.Serializable> serializableSet93 = serializableMap90.keySet();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor94 = serializableMap90.mapIterator();
        java.util.Collection<java.lang.String> strCollection95 = serializableMap0.getCollection((java.lang.Object) serializableItor94);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(serializableSet93);
        org.junit.Assert.assertNotNull(serializableItor94);
        org.junit.Assert.assertNull(strCollection95);
    }

    @Test
    public void test506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test506");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj8 = serializableMap5.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap5.values();
        java.util.Iterator<java.lang.String> strItor10 = serializableMap0.iterator((java.lang.Object) serializableMap5);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor35 = serializableMap23.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        boolean boolean46 = serializableMap36.equals((java.lang.Object) (short) 1);
        serializableMap36.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int53 = serializableMap49.totalSize();
        serializableMap48.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap49);
        java.lang.Object obj57 = serializableMap49.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean66 = serializableMap58.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int72 = serializableMap68.totalSize();
        serializableMap67.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap68);
        java.lang.Object obj76 = serializableMap68.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj77 = serializableMap58.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor78 = serializableMap49.iterator((java.lang.Object) serializableMap58);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor79 = serializableMap49.iterator();
        java.lang.Object obj80 = serializableMap23.putIfAbsent((java.io.Serializable) serializableMap36, (java.lang.Object) serializableEntryItor79);
        int int81 = serializableMap36.size();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap36);
        int int83 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.reflect.AnnotatedElement> serializableMap84 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(serializableItor35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNotNull(serializableEntryItor79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(serializableMap84);
    }

    @Test
    public void test507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test507");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.util.Set<java.io.Serializable> serializableSet6 = serializableMap0.keySet();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor7 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableEntryItor7);
    }

    @Test
    public void test508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test508");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor5 = serializableMap0.mapIterator();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor18 = serializableMap7.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor19 = serializableMap7.mapIterator();
        serializableMap7.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet21 = serializableMap7.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap22.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor30 = serializableMap22.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int38 = serializableMap31.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor39 = serializableMap31.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap40 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean43 = serializableMap40.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean46 = serializableMap40.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int47 = serializableMap40.size();
        java.util.Collection<java.lang.Object> objCollection48 = serializableMap40.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap49.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection54 = serializableMap49.values();
        java.io.Serializable serializable55 = null;
        java.lang.Object obj57 = serializableMap49.putIfAbsent(serializable55, (java.lang.Object) 0);
        serializableMap49.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean65 = serializableMap59.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int67 = serializableMap59.size((java.lang.Object) (short) -1);
        boolean boolean69 = serializableMap59.equals((java.lang.Object) (short) 1);
        serializableMap59.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean76 = serializableMap73.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int77 = serializableMap73.totalSize();
        serializableMap72.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap73);
        java.lang.Object obj81 = serializableMap73.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj82 = serializableMap59.replace((java.io.Serializable) serializableMap71, (java.lang.Object) 1);
        java.lang.Object obj83 = serializableMap49.remove((java.lang.Object) serializableMap59);
        java.util.Iterator<java.lang.String> strItor84 = serializableMap40.iterator(obj83);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet85 = serializableMap40.entrySet();
        boolean boolean86 = serializableMap22.removeMapping((java.lang.Object) serializableItor39, (java.lang.Object) serializableMap40);
        boolean boolean87 = serializableMap7.containsKey((java.lang.Object) serializableMap40);
        int int88 = serializableMap7.size();
        boolean boolean89 = serializableMap0.containsKey((java.lang.Object) int88);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serializableItor5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor18);
        org.junit.Assert.assertNotNull(serializableItor19);
        org.junit.Assert.assertNotNull(serializableEntrySet21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableItor30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(serializableItor39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0 + "'", obj57, 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 100L + "'", obj81, 100L);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(strItor84);
        org.junit.Assert.assertNotNull(serializableEntrySet85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test509");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj8 = serializableMap5.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap5.values();
        java.util.Iterator<java.lang.String> strItor10 = serializableMap0.iterator((java.lang.Object) serializableMap5);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor35 = serializableMap23.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        boolean boolean46 = serializableMap36.equals((java.lang.Object) (short) 1);
        serializableMap36.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int53 = serializableMap49.totalSize();
        serializableMap48.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap49);
        java.lang.Object obj57 = serializableMap49.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean66 = serializableMap58.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int72 = serializableMap68.totalSize();
        serializableMap67.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap68);
        java.lang.Object obj76 = serializableMap68.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj77 = serializableMap58.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor78 = serializableMap49.iterator((java.lang.Object) serializableMap58);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor79 = serializableMap49.iterator();
        java.lang.Object obj80 = serializableMap23.putIfAbsent((java.io.Serializable) serializableMap36, (java.lang.Object) serializableEntryItor79);
        int int81 = serializableMap36.size();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap36);
        java.util.Collection<java.lang.Object> objCollection83 = serializableMap36.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap84 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap36);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(serializableItor35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNotNull(serializableEntryItor79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(objCollection83);
        org.junit.Assert.assertNotNull(serializableMap84);
    }

    @Test
    public void test510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test510");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean7 = serializableMap1.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int9 = serializableMap1.size((java.lang.Object) (short) -1);
        int int11 = serializableMap1.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int17 = serializableMap13.totalSize();
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj21 = serializableMap13.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj23 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor24 = serializableMap1.iterator(obj23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj31 = serializableMap25.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj33 = serializableMap25.get((java.lang.Object) 100.0d);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        int int35 = serializableMap0.size((java.lang.Object) serializableMap25);
        boolean boolean37 = serializableMap25.containsValue((java.lang.Object) (byte) 1);
        serializableMap25.clear();
        boolean boolean39 = serializableMap25.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test511");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean7 = serializableMap1.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int9 = serializableMap1.size((java.lang.Object) (short) -1);
        int int11 = serializableMap1.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int17 = serializableMap13.totalSize();
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj21 = serializableMap13.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj23 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor24 = serializableMap1.iterator(obj23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj31 = serializableMap25.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj33 = serializableMap25.get((java.lang.Object) 100.0d);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        int int35 = serializableMap0.size((java.lang.Object) serializableMap25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        int int46 = serializableMap36.size((java.lang.Object) (byte) 1);
        boolean boolean49 = serializableMap36.remove((java.lang.Object) (short) 100, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj56 = serializableMap50.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj58 = serializableMap50.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection59 = serializableMap50.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap60.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean66 = serializableMap60.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int68 = serializableMap60.size((java.lang.Object) (short) -1);
        int int70 = serializableMap60.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap72.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int76 = serializableMap72.totalSize();
        serializableMap71.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap72);
        java.lang.Object obj80 = serializableMap72.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap60.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap72);
        java.lang.Object obj82 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor83 = serializableMap60.iterator(obj82);
        java.util.Set<java.io.Serializable> serializableSet84 = serializableMap60.keySet();
        serializableMap50.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap60);
        java.lang.Object obj86 = serializableMap0.put((java.io.Serializable) serializableMap36, (java.lang.Object) serializableMap60);
        java.util.Set<java.io.Serializable> serializableSet87 = serializableMap0.keySet();
        java.lang.Class<?> wildcardClass88 = serializableSet87.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertNotNull(strItor83);
        org.junit.Assert.assertNotNull(serializableSet84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{1=[100]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{1=[100]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{1=[100]}");
        org.junit.Assert.assertNotNull(serializableSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test512");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int26 = serializableMap22.totalSize();
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj30 = serializableMap22.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap10.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj32 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor33 = serializableMap10.iterator(obj32);
        java.util.Set<java.io.Serializable> serializableSet34 = serializableMap10.keySet();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap36.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection41 = serializableMap36.values();
        java.util.Set<java.io.Serializable> serializableSet42 = serializableMap36.keySet();
        boolean boolean43 = serializableMap10.containsValue((java.lang.Object) serializableSet42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int49 = serializableMap45.totalSize();
        serializableMap44.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap45);
        boolean boolean51 = serializableMap10.equals((java.lang.Object) serializableMap44);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNotNull(serializableSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test513");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean10 = serializableMap2.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj21 = serializableMap2.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        boolean boolean32 = serializableMap22.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int41 = serializableMap33.size((java.lang.Object) (short) -1);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = serializableMap22.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj53 = serializableMap50.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        boolean boolean58 = serializableMap22.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap60.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int66 = serializableMap60.size((java.lang.Object) 10);
        java.lang.Object obj67 = serializableMap50.putIfAbsent((java.io.Serializable) (short) -1, (java.lang.Object) serializableMap60);
        java.lang.Object obj68 = serializableMap0.replace((java.io.Serializable) serializableMap2, (java.lang.Object) serializableMap50);
        java.lang.Class<?> wildcardClass69 = serializableMap2.getClass();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test514");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) 100.0d);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor9 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap19.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection24 = serializableMap19.values();
        java.io.Serializable serializable25 = null;
        java.lang.Object obj27 = serializableMap19.putIfAbsent(serializable25, (java.lang.Object) 0);
        java.lang.Object obj28 = null;
        boolean boolean29 = serializableMap10.remove((java.lang.Object) 0, obj28);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean33 = serializableMap30.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean36 = serializableMap30.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int38 = serializableMap30.size((java.lang.Object) (short) -1);
        int int40 = serializableMap30.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int47 = serializableMap43.totalSize();
        serializableMap42.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap43);
        java.lang.Object obj51 = serializableMap43.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean58 = serializableMap52.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean60 = serializableMap52.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int66 = serializableMap62.totalSize();
        serializableMap61.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj70 = serializableMap62.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj71 = serializableMap52.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor72 = serializableMap43.iterator((java.lang.Object) serializableMap52);
        java.lang.Object obj73 = serializableMap30.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor72);
        int int74 = serializableMap10.size((java.lang.Object) 1);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.util.Collection<java.lang.Object> objCollection76 = serializableMap0.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(serializableItor9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0 + "'", obj27, 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 100L + "'", obj51, 100L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(objCollection76);
    }

    @Test
    public void test515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test515");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int26 = serializableMap22.totalSize();
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj30 = serializableMap22.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap10.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj32 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor33 = serializableMap10.iterator(obj32);
        java.util.Set<java.io.Serializable> serializableSet34 = serializableMap10.keySet();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.util.Collection<java.lang.Object> objCollection36 = serializableMap10.values();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor37 = serializableMap10.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.Get<java.io.Serializable, java.lang.Object>> serializableMap38 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(serializableEntryItor37);
        org.junit.Assert.assertNotNull(serializableMap38);
    }

    @Test
    public void test516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test516");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor12 = serializableMap0.mapIterator();
        serializableMap0.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet14 = serializableMap0.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean18 = serializableMap15.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean21 = serializableMap15.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int22 = serializableMap15.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor23 = serializableMap15.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean30 = serializableMap24.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int31 = serializableMap24.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor32 = serializableMap24.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int40 = serializableMap33.size();
        java.util.Collection<java.lang.Object> objCollection41 = serializableMap33.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap42.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection47 = serializableMap42.values();
        java.io.Serializable serializable48 = null;
        java.lang.Object obj50 = serializableMap42.putIfAbsent(serializable48, (java.lang.Object) 0);
        serializableMap42.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean58 = serializableMap52.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int60 = serializableMap52.size((java.lang.Object) (short) -1);
        boolean boolean62 = serializableMap52.equals((java.lang.Object) (short) 1);
        serializableMap52.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int70 = serializableMap66.totalSize();
        serializableMap65.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap66);
        java.lang.Object obj74 = serializableMap66.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj75 = serializableMap52.replace((java.io.Serializable) serializableMap64, (java.lang.Object) 1);
        java.lang.Object obj76 = serializableMap42.remove((java.lang.Object) serializableMap52);
        java.util.Iterator<java.lang.String> strItor77 = serializableMap33.iterator(obj76);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet78 = serializableMap33.entrySet();
        boolean boolean79 = serializableMap15.removeMapping((java.lang.Object) serializableItor32, (java.lang.Object) serializableMap33);
        boolean boolean80 = serializableMap0.containsKey((java.lang.Object) serializableMap33);
        boolean boolean81 = serializableMap33.isEmpty();
        boolean boolean82 = serializableMap33.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
        org.junit.Assert.assertNotNull(serializableItor12);
        org.junit.Assert.assertNotNull(serializableEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(serializableItor32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(strItor77);
        org.junit.Assert.assertNotNull(serializableEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test517");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int17 = serializableMap13.totalSize();
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj21 = serializableMap13.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean30 = serializableMap22.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        serializableMap31.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj40 = serializableMap32.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj41 = serializableMap22.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor42 = serializableMap13.iterator((java.lang.Object) serializableMap22);
        java.lang.Object obj43 = serializableMap0.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap45.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int51 = serializableMap45.size((java.lang.Object) 10);
        boolean boolean52 = serializableMap0.removeMapping((java.lang.Object) (short) 0, (java.lang.Object) 10);
        serializableMap0.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet54 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strItor42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet54);
    }

    @Test
    public void test518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test518");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.String str4 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor6 = serializableMap5.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean24 = serializableMap18.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int26 = serializableMap18.size((java.lang.Object) (short) -1);
        boolean boolean28 = serializableMap18.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        boolean boolean34 = serializableMap7.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList32);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj38 = serializableMap35.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        boolean boolean43 = serializableMap7.putAll((java.io.Serializable) serializableMap35, (java.util.Collection<java.lang.String>) strList41);
        java.lang.Object obj44 = serializableMap5.get((java.lang.Object) serializableMap35);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean51 = serializableMap45.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int53 = serializableMap45.size((java.lang.Object) (short) -1);
        int int55 = serializableMap45.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj67 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor68 = serializableMap45.iterator(obj67);
        java.lang.Object obj69 = serializableMap5.remove(obj67);
        int int70 = serializableMap5.size();
        boolean boolean71 = serializableMap0.containsValue((java.lang.Object) serializableMap5);
        java.util.Collection<java.lang.Object> objCollection72 = serializableMap5.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(serializableItor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objCollection72);
    }

    @Test
    public void test519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test519");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        boolean boolean46 = serializableMap36.equals((java.lang.Object) (short) 1);
        serializableMap36.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int54 = serializableMap50.totalSize();
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        java.lang.Object obj58 = serializableMap50.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj59 = serializableMap36.replace((java.io.Serializable) serializableMap48, (java.lang.Object) 1);
        boolean boolean60 = serializableMap25.equals((java.lang.Object) serializableMap48);
        java.lang.Object obj62 = serializableMap25.remove((java.lang.Object) (-1.0d));
        java.lang.Object obj63 = serializableMap0.replace((java.io.Serializable) (-1.0d), (java.lang.Object) serializableMap25);
        java.lang.String str64 = serializableMap25.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{}" + "'", str64, "{}");
    }

    @Test
    public void test520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test520");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet2 = serializableMap0.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap3 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean6 = serializableMap3.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int7 = serializableMap3.totalSize();
        java.lang.Object obj9 = serializableMap3.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = serializableMap3.remove((java.lang.Object) serializableMap10, obj21);
        java.lang.Object obj24 = serializableMap0.remove((java.lang.Object) serializableMap3);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        int int35 = serializableMap25.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor36 = serializableMap25.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap37.equals((java.lang.Object) (short) 10);
        int int40 = serializableMap37.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean45 = serializableMap42.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int46 = serializableMap42.totalSize();
        serializableMap41.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap42);
        java.lang.Object obj50 = serializableMap42.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean54 = serializableMap51.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean57 = serializableMap51.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean59 = serializableMap51.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int65 = serializableMap61.totalSize();
        serializableMap60.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap61);
        java.lang.Object obj69 = serializableMap61.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj70 = serializableMap51.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor71 = serializableMap42.iterator((java.lang.Object) serializableMap51);
        java.lang.Object obj72 = serializableMap25.putIfAbsent((java.io.Serializable) int40, (java.lang.Object) strItor71);
        java.lang.Object obj73 = null;
        boolean boolean74 = serializableMap25.containsKey(obj73);
        int int75 = serializableMap0.size((java.lang.Object) boolean74);
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertNotNull(serializableEntrySet2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 100L + "'", obj69, 100L);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test521");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        java.lang.String str36 = serializableMap23.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj43 = serializableMap37.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        boolean boolean44 = serializableMap23.containsValue((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.RandomAccess> objMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.RandomAccess>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean52 = serializableMap46.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int54 = serializableMap46.size((java.lang.Object) (short) -1);
        boolean boolean56 = serializableMap46.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean63 = serializableMap57.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int65 = serializableMap57.size((java.lang.Object) (short) -1);
        boolean boolean67 = serializableMap57.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray70 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        boolean boolean73 = serializableMap46.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList71);
        boolean boolean74 = serializableMap37.putAll((java.io.Serializable) objMap45, (java.util.Collection<java.lang.String>) strList71);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean78 = serializableMap75.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean81 = serializableMap75.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean83 = serializableMap75.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap84 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj87 = serializableMap84.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap88 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean92 = serializableMap88.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection93 = serializableMap88.values();
        boolean boolean94 = serializableMap75.remove(obj87, (java.lang.Object) serializableMap88);
        serializableMap88.clear();
        java.util.Iterator<java.lang.String> strItor96 = serializableMap37.iterator((java.lang.Object) serializableMap88);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor97 = serializableMap37.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objCollection93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strItor96);
        org.junit.Assert.assertNotNull(serializableEntryItor97);
    }

    @Test
    public void test522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test522");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap24 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet25 = serializableMap12.entrySet();
        boolean boolean26 = serializableMap12.isEmpty();
        serializableMap12.clear();
        serializableMap12.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableMap24);
        org.junit.Assert.assertNotNull(serializableEntrySet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test523");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        int int46 = serializableMap36.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int52 = serializableMap48.totalSize();
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj56 = serializableMap48.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean66 = serializableMap58.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj70 = serializableMap67.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap71.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection76 = serializableMap71.values();
        boolean boolean77 = serializableMap58.remove(obj70, (java.lang.Object) serializableMap71);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor78 = serializableMap58.iterator();
        int int79 = serializableMap58.size();
        java.lang.Object obj80 = serializableMap23.putIfAbsent((java.io.Serializable) serializableMap48, (java.lang.Object) int79);
        java.lang.Object obj83 = serializableMap48.putIfAbsent((java.io.Serializable) (-1.0f), (java.lang.Object) 10);
        java.util.Collection<java.lang.Object> objCollection84 = serializableMap48.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0 + "'", obj80, 0);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10 + "'", obj83, 10);
        org.junit.Assert.assertNotNull(objCollection84);
    }

    @Test
    public void test524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test524");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) (short) 10);
        java.lang.Object obj9 = null;
        java.util.Iterator<java.lang.String> strItor10 = serializableMap0.iterator(obj9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strItor10);
    }

    @Test
    public void test525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test525");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj19 = serializableMap0.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> serializableMap20 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        java.lang.String str21 = serializableMap0.toString();
        int int22 = serializableMap0.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(serializableMap20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test526");
        org.apache.commons.collections4.map.MultiValueMap<java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>>, java.lang.Cloneable> serializableEntrySetMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>>, java.lang.Cloneable>();
    }

    @Test
    public void test527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test527");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj27 = serializableMap24.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection28 = serializableMap24.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap29 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap29.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean35 = serializableMap29.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int37 = serializableMap29.size((java.lang.Object) (short) -1);
        int int39 = serializableMap29.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean45 = serializableMap42.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int46 = serializableMap42.totalSize();
        serializableMap41.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap42);
        java.lang.Object obj50 = serializableMap42.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean54 = serializableMap51.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean57 = serializableMap51.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean59 = serializableMap51.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int65 = serializableMap61.totalSize();
        serializableMap60.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap61);
        java.lang.Object obj69 = serializableMap61.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj70 = serializableMap51.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor71 = serializableMap42.iterator((java.lang.Object) serializableMap51);
        java.lang.Object obj72 = serializableMap29.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor71);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap74 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean77 = serializableMap74.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean80 = serializableMap74.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int81 = serializableMap74.size();
        boolean boolean82 = serializableMap24.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap74);
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet84 = serializableMap24.entrySet();
        java.util.Set<java.io.Serializable> serializableSet85 = serializableMap24.keySet();
        int int86 = serializableMap24.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 100L + "'", obj69, 100L);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet84);
        org.junit.Assert.assertNotNull(serializableSet85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test528");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int10 = serializableMap2.size((java.lang.Object) (short) -1);
        boolean boolean12 = serializableMap2.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        boolean boolean23 = serializableMap13.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = serializableMap2.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList27);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj33 = serializableMap30.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = serializableMap2.putAll((java.io.Serializable) serializableMap30, (java.util.Collection<java.lang.String>) strList36);
        java.lang.Object obj39 = serializableMap0.get((java.lang.Object) serializableMap30);
        java.lang.Object obj40 = null;
        java.util.Iterator<java.lang.String> strItor41 = serializableMap0.iterator(obj40);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.Iterator<java.io.Serializable>> objMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.Iterator<java.io.Serializable>>();
        boolean boolean43 = serializableMap0.equals((java.lang.Object) objMap42);
        java.util.Set<java.io.Serializable> serializableSet44 = serializableMap0.keySet();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(serializableSet44);
    }

    @Test
    public void test529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test529");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        boolean boolean18 = serializableMap8.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = serializableMap8.putAll((java.io.Serializable) serializableMap36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj52 = serializableMap0.replace((java.io.Serializable) serializableMap8, (java.lang.Object) serializableMap45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int58 = serializableMap54.totalSize();
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        boolean boolean63 = serializableMap54.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet65 = serializableMap0.entrySet();
        java.lang.String str66 = serializableMap0.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
    }

    @Test
    public void test530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test530");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.io.Serializable serializable34 = null;
        java.lang.Object obj36 = serializableMap0.put(serializable34, (java.lang.Object) (short) 100);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean45 = serializableMap37.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int51 = serializableMap47.totalSize();
        serializableMap46.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        java.lang.Object obj55 = serializableMap47.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj56 = serializableMap37.get((java.lang.Object) 1);
        int int57 = serializableMap0.size((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int66 = serializableMap58.size((java.lang.Object) (short) -1);
        boolean boolean68 = serializableMap58.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap69 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean72 = serializableMap69.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean75 = serializableMap69.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int77 = serializableMap69.size((java.lang.Object) (short) -1);
        boolean boolean79 = serializableMap69.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray82 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        boolean boolean85 = serializableMap58.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList83);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap58);
        int int87 = serializableMap58.size();
        boolean boolean88 = serializableMap58.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 100 + "'", obj36, (short) 100);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test531");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        java.lang.String str24 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int30 = serializableMap26.totalSize();
        serializableMap25.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        boolean boolean35 = serializableMap26.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap36 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>> wildcardClassMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>>();
        java.lang.Object obj38 = serializableMap0.getOrDefault((java.lang.Object) serializableMap26, (java.lang.Object) wildcardClassMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap40 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean43 = serializableMap40.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int44 = serializableMap40.totalSize();
        serializableMap39.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap40);
        java.lang.Object obj48 = serializableMap40.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean57 = serializableMap49.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj67 = serializableMap59.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj68 = serializableMap49.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor69 = serializableMap40.iterator((java.lang.Object) serializableMap49);
        java.lang.Object obj70 = serializableMap26.get((java.lang.Object) serializableMap49);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor71 = serializableMap26.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap72.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj78 = serializableMap72.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj80 = serializableMap72.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap81 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap72);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean85 = serializableMap82.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean88 = serializableMap82.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int90 = serializableMap82.size((java.lang.Object) (short) -1);
        boolean boolean92 = serializableMap82.equals((java.lang.Object) (short) 1);
        serializableMap82.clear();
        java.util.Set<java.io.Serializable> serializableSet94 = serializableMap82.keySet();
        serializableMap82.clear();
        java.util.Collection<java.lang.String> strCollection96 = serializableMap72.getCollection((java.lang.Object) serializableMap82);
        java.util.Set<java.io.Serializable> serializableSet97 = serializableMap82.keySet();
        java.lang.Object obj98 = serializableMap26.remove((java.lang.Object) serializableMap82);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(serializableMap36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(serializableEntryItor71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(serializableMap81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(serializableSet94);
        org.junit.Assert.assertNull(strCollection96);
        org.junit.Assert.assertNotNull(serializableSet97);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test532");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj8 = serializableMap2.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.String str9 = serializableMap2.toString();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor10 = serializableMap2.mapIterator();
        java.lang.String str11 = serializableMap2.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Cloneable, org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object>> cloneableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Cloneable, org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object>>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor14 = serializableMap13.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean18 = serializableMap15.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean21 = serializableMap15.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int23 = serializableMap15.size((java.lang.Object) (short) -1);
        boolean boolean25 = serializableMap15.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean32 = serializableMap26.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int34 = serializableMap26.size((java.lang.Object) (short) -1);
        boolean boolean36 = serializableMap26.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = serializableMap15.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList40);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj46 = serializableMap43.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        boolean boolean51 = serializableMap15.putAll((java.io.Serializable) serializableMap43, (java.util.Collection<java.lang.String>) strList49);
        java.lang.Object obj52 = serializableMap13.get((java.lang.Object) serializableMap43);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj56 = serializableMap53.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection57 = serializableMap53.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap58 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap53);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor59 = serializableMap58.mapIterator();
        java.lang.Object obj60 = serializableMap13.get((java.lang.Object) serializableItor59);
        java.lang.Class<?> wildcardClass61 = serializableItor59.getClass();
        boolean boolean62 = serializableMap2.containsValue((java.lang.Object) cloneableMap12, (java.lang.Object) serializableItor59);
        java.util.Collection<java.lang.String> strCollection63 = serializableMap0.getCollection((java.lang.Object) serializableMap2);
        java.lang.String str64 = serializableMap0.toString();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertNotNull(serializableItor10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertNotNull(serializableItor14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertNotNull(serializableItor59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(strCollection63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{}" + "'", str64, "{}");
    }

    @Test
    public void test533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test533");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        boolean boolean19 = serializableMap10.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap20.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean48 = serializableMap0.putAll((java.io.Serializable) serializableMap10, (java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int57 = serializableMap49.size((java.lang.Object) (short) -1);
        boolean boolean59 = serializableMap49.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap60.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean66 = serializableMap60.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int68 = serializableMap60.size((java.lang.Object) (short) -1);
        boolean boolean70 = serializableMap60.equals((java.lang.Object) (short) 1);
        serializableMap60.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap74 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean77 = serializableMap74.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int78 = serializableMap74.totalSize();
        serializableMap73.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap74);
        java.lang.Object obj82 = serializableMap74.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj83 = serializableMap60.replace((java.io.Serializable) serializableMap72, (java.lang.Object) 1);
        boolean boolean84 = serializableMap49.equals((java.lang.Object) serializableMap72);
        java.lang.String str85 = serializableMap72.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap86 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean89 = serializableMap86.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj92 = serializableMap86.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        boolean boolean93 = serializableMap72.containsValue((java.lang.Object) serializableMap86);
        int int95 = serializableMap86.size((java.lang.Object) (-1));
        boolean boolean96 = serializableMap10.containsValue((java.lang.Object) int95);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet97 = serializableMap10.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap98 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.util.Set<java.io.Serializable> serializableSet99 = serializableMap98.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{}" + "'", str85, "{}");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet97);
        org.junit.Assert.assertNotNull(serializableMap98);
        org.junit.Assert.assertNotNull(serializableSet99);
    }

    @Test
    public void test534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test534");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj12 = serializableMap9.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap13.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection18 = serializableMap13.values();
        boolean boolean19 = serializableMap0.remove(obj12, (java.lang.Object) serializableMap13);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor20 = serializableMap0.iterator();
        int int21 = serializableMap0.size();
        int int22 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int28 = serializableMap24.totalSize();
        serializableMap23.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj32 = serializableMap24.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean41 = serializableMap33.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int47 = serializableMap43.totalSize();
        serializableMap42.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap43);
        java.lang.Object obj51 = serializableMap43.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj52 = serializableMap33.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor53 = serializableMap24.iterator((java.lang.Object) serializableMap33);
        serializableMap24.clear();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor55 = serializableMap24.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap56.equals((java.lang.Object) (short) 10);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet59 = serializableMap56.entrySet();
        boolean boolean60 = serializableMap0.containsValue((java.lang.Object) serializableMap24, (java.lang.Object) serializableEntrySet59);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap61.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Set<java.io.Serializable> serializableSet66 = serializableMap61.keySet();
        boolean boolean67 = serializableMap0.containsKey((java.lang.Object) serializableSet66);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 100L + "'", obj51, 100L);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(serializableItor55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(serializableSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test535");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        boolean boolean34 = serializableMap0.isEmpty();
        java.lang.String str35 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Cloneable> serializableMap36 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{1=[100]}" + "'", str35, "{1=[100]}");
        org.junit.Assert.assertNotNull(serializableMap36);
    }

    @Test
    public void test536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test536");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        serializableMap19.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj28 = serializableMap20.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj29 = serializableMap10.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor30 = serializableMap1.iterator((java.lang.Object) serializableMap10);
        serializableMap1.clear();
        java.util.Set<java.io.Serializable> serializableSet32 = serializableMap1.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int41 = serializableMap33.size((java.lang.Object) (short) -1);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (short) 1);
        serializableMap33.clear();
        java.util.Set<java.io.Serializable> serializableSet45 = serializableMap33.keySet();
        int int46 = serializableMap33.totalSize();
        int int47 = serializableMap33.size();
        boolean boolean48 = serializableMap1.equals((java.lang.Object) serializableMap33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj52 = serializableMap49.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection53 = serializableMap49.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap54 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int59 = serializableMap55.totalSize();
        java.lang.Object obj61 = serializableMap55.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean68 = serializableMap62.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int70 = serializableMap62.size((java.lang.Object) (short) -1);
        boolean boolean72 = serializableMap62.equals((java.lang.Object) (short) 1);
        int int73 = serializableMap55.size((java.lang.Object) boolean72);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap74 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean78 = serializableMap75.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int79 = serializableMap75.totalSize();
        serializableMap74.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap75);
        java.lang.Object obj83 = serializableMap75.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        boolean boolean85 = serializableMap55.containsValue((java.lang.Object) 1, (java.lang.Object) true);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor86 = serializableMap55.iterator();
        boolean boolean87 = serializableMap49.containsKey((java.lang.Object) serializableMap55);
        java.lang.String str88 = serializableMap49.toString();
        java.util.Iterator<java.lang.String> strItor89 = serializableMap33.iterator((java.lang.Object) str88);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertNotNull(serializableSet32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(serializableSet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(serializableMap54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 100L + "'", obj83, 100L);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "{}" + "'", str88, "{}");
        org.junit.Assert.assertNotNull(strItor89);
    }

    @Test
    public void test537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test537");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor8 = serializableMap7.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean15 = serializableMap9.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int17 = serializableMap9.size((java.lang.Object) (short) -1);
        boolean boolean19 = serializableMap9.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap9.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj40 = serializableMap37.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        boolean boolean45 = serializableMap9.putAll((java.io.Serializable) serializableMap37, (java.util.Collection<java.lang.String>) strList43);
        java.lang.Object obj46 = serializableMap7.get((java.lang.Object) serializableMap37);
        serializableMap37.clear();
        boolean boolean48 = serializableMap0.equals((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int54 = serializableMap50.totalSize();
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        boolean boolean59 = serializableMap50.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Iterator<java.io.Serializable>> serializableMap60 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int65 = serializableMap61.totalSize();
        java.lang.Object obj67 = serializableMap61.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int76 = serializableMap68.size((java.lang.Object) (short) -1);
        boolean boolean78 = serializableMap68.equals((java.lang.Object) (short) 1);
        int int79 = serializableMap61.size((java.lang.Object) boolean78);
        java.lang.String str80 = serializableMap61.toString();
        java.lang.String[] strArray85 = new java.lang.String[] { "{}", "", "" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        boolean boolean88 = serializableMap61.putAll((java.io.Serializable) 1.0d, (java.util.Collection<java.lang.String>) strList86);
        boolean boolean89 = serializableMap0.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList86);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Comparable<java.lang.String>> serializableMap90 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor91 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(serializableMap60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "{}" + "'", str80, "{}");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(serializableMap90);
        org.junit.Assert.assertNotNull(serializableEntryItor91);
    }

    @Test
    public void test538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test538");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        int int46 = serializableMap36.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int52 = serializableMap48.totalSize();
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj56 = serializableMap48.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean66 = serializableMap58.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj70 = serializableMap67.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap71.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection76 = serializableMap71.values();
        boolean boolean77 = serializableMap58.remove(obj70, (java.lang.Object) serializableMap71);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor78 = serializableMap58.iterator();
        int int79 = serializableMap58.size();
        java.lang.Object obj80 = serializableMap23.putIfAbsent((java.io.Serializable) serializableMap48, (java.lang.Object) int79);
        int int81 = serializableMap23.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0 + "'", obj80, 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
    }

    @Test
    public void test539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test539");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap0.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        java.util.Set<java.io.Serializable> serializableSet10 = serializableMap0.keySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10.0d + "'", obj9, 10.0d);
        org.junit.Assert.assertNotNull(serializableSet10);
    }

    @Test
    public void test540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test540");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj8 = serializableMap5.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap5.values();
        java.util.Iterator<java.lang.String> strItor10 = serializableMap0.iterator((java.lang.Object) serializableMap5);
        java.util.Set<java.io.Serializable> serializableSet11 = serializableMap5.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertNotNull(serializableSet11);
    }

    @Test
    public void test541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test541");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        boolean boolean27 = serializableMap0.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj31 = serializableMap28.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap0.putAll((java.io.Serializable) serializableMap28, (java.util.Collection<java.lang.String>) strList34);
        int int37 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean44 = serializableMap38.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int46 = serializableMap38.size((java.lang.Object) (short) -1);
        int int48 = serializableMap38.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int54 = serializableMap50.totalSize();
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        java.lang.Object obj58 = serializableMap50.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap38.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj67 = serializableMap61.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj68 = serializableMap38.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        boolean boolean69 = serializableMap0.containsKey((java.lang.Object) (byte) 1);
        java.util.Set<java.io.Serializable> serializableSet70 = serializableMap0.keySet();
        java.util.Collection<java.lang.Object> objCollection71 = serializableMap0.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (byte) 1 + "'", obj68, (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(serializableSet70);
        org.junit.Assert.assertNotNull(objCollection71);
    }

    @Test
    public void test542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test542");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj29 = serializableMap23.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj30 = serializableMap0.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int31 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean38 = serializableMap32.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int40 = serializableMap32.size((java.lang.Object) (short) -1);
        boolean boolean42 = serializableMap32.equals((java.lang.Object) (short) 1);
        serializableMap32.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj54 = serializableMap46.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj55 = serializableMap32.replace((java.io.Serializable) serializableMap44, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap56 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Cloneable> serializableMap57 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap56);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor58 = serializableMap57.mapIterator();
        int int59 = serializableMap0.size((java.lang.Object) serializableMap57);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet60 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 1 + "'", obj30, (byte) 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(serializableMap56);
        org.junit.Assert.assertNotNull(serializableMap57);
        org.junit.Assert.assertNotNull(serializableItor58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(serializableEntrySet60);
    }

    @Test
    public void test543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test543");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean11 = serializableMap5.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int13 = serializableMap5.size((java.lang.Object) (short) -1);
        int int15 = serializableMap5.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int22 = serializableMap18.totalSize();
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap18);
        java.lang.Object obj26 = serializableMap18.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean33 = serializableMap27.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean35 = serializableMap27.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int41 = serializableMap37.totalSize();
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap37);
        java.lang.Object obj45 = serializableMap37.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj46 = serializableMap27.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor47 = serializableMap18.iterator((java.lang.Object) serializableMap27);
        java.lang.Object obj48 = serializableMap5.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean56 = serializableMap50.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int57 = serializableMap50.size();
        boolean boolean58 = serializableMap0.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean65 = serializableMap59.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int67 = serializableMap59.size((java.lang.Object) (short) -1);
        int int69 = serializableMap59.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor70 = serializableMap59.iterator();
        boolean boolean71 = serializableMap0.containsKey((java.lang.Object) serializableMap59);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor73 = serializableMap72.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet74 = serializableMap72.entrySet();
        int int75 = serializableMap72.totalSize();
        boolean boolean76 = serializableMap0.equals((java.lang.Object) serializableMap72);
        int int77 = serializableMap72.size();
        java.lang.Class<?> wildcardClass78 = serializableMap72.getClass();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(serializableItor73);
        org.junit.Assert.assertNotNull(serializableEntrySet74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test544");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        int int47 = serializableMap37.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor48 = serializableMap37.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor49 = serializableMap37.mapIterator();
        boolean boolean50 = serializableMap37.isEmpty();
        java.lang.Object obj51 = serializableMap0.replace((java.io.Serializable) '4', (java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj58 = serializableMap52.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj60 = serializableMap52.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap61 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor63 = serializableMap62.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet64 = serializableMap62.entrySet();
        int int65 = serializableMap62.totalSize();
        java.util.Set<java.io.Serializable> serializableSet66 = serializableMap62.keySet();
        boolean boolean67 = serializableMap52.containsKey((java.lang.Object) serializableSet66);
        java.lang.Object obj68 = null;
        java.lang.Object obj69 = serializableMap0.putIfAbsent((java.io.Serializable) serializableMap52, obj68);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Iterable<java.lang.Object>> serializableMap70 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        boolean boolean71 = serializableMap70.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor48);
        org.junit.Assert.assertNotNull(serializableItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(serializableMap61);
        org.junit.Assert.assertNotNull(serializableItor63);
        org.junit.Assert.assertNotNull(serializableEntrySet64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(serializableSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(serializableMap70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test545");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean2 = serializableMap0.equals((java.lang.Object) (short) 10);
        int int3 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap4 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor5 = serializableMap4.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap6 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean9 = serializableMap6.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean12 = serializableMap6.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean14 = serializableMap6.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap16 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean19 = serializableMap16.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int20 = serializableMap16.totalSize();
        serializableMap15.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap16);
        java.lang.Object obj24 = serializableMap16.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj25 = serializableMap6.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean32 = serializableMap26.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int34 = serializableMap26.size((java.lang.Object) (short) -1);
        boolean boolean36 = serializableMap26.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        boolean boolean47 = serializableMap37.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        boolean boolean53 = serializableMap26.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList51);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj57 = serializableMap54.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        boolean boolean62 = serializableMap26.putAll((java.io.Serializable) serializableMap54, (java.util.Collection<java.lang.String>) strList60);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap64.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int70 = serializableMap64.size((java.lang.Object) 10);
        java.lang.Object obj71 = serializableMap54.putIfAbsent((java.io.Serializable) (short) -1, (java.lang.Object) serializableMap64);
        java.lang.Object obj72 = serializableMap4.replace((java.io.Serializable) serializableMap6, (java.lang.Object) serializableMap54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap73.equals((java.lang.Object) (short) 10);
        int int76 = serializableMap73.totalSize();
        boolean boolean77 = serializableMap0.removeMapping((java.lang.Object) serializableMap4, (java.lang.Object) int76);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet78 = serializableMap4.entrySet();
        java.util.Set<java.io.Serializable> serializableSet79 = serializableMap4.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>>> serializableMap80 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap4);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean84 = serializableMap81.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean87 = serializableMap81.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int89 = serializableMap81.size((java.lang.Object) (short) -1);
        int int91 = serializableMap81.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor92 = serializableMap81.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor93 = serializableMap81.mapIterator();
        serializableMap81.clear();
        boolean boolean95 = serializableMap81.isEmpty();
        boolean boolean96 = serializableMap4.equals((java.lang.Object) boolean95);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableItor5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{}");
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet78);
        org.junit.Assert.assertNotNull(serializableSet79);
        org.junit.Assert.assertNotNull(serializableMap80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor92);
        org.junit.Assert.assertNotNull(serializableItor93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test546");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        serializableMap23.clear();
        serializableMap23.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.IterableGet<java.io.Serializable, java.lang.Object>> serializableMap38 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap23);
        java.lang.String str39 = serializableMap38.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(serializableMap38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
    }

    @Test
    public void test547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test547");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor12 = serializableMap0.mapIterator();
        serializableMap0.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet14 = serializableMap0.entrySet();
        serializableMap0.clear();
        java.lang.String str16 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj20 = serializableMap17.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection21 = serializableMap17.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        int int32 = serializableMap22.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean50 = serializableMap44.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean52 = serializableMap44.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int58 = serializableMap54.totalSize();
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        java.lang.Object obj62 = serializableMap54.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj63 = serializableMap44.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor64 = serializableMap35.iterator((java.lang.Object) serializableMap44);
        java.lang.Object obj65 = serializableMap22.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor64);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean70 = serializableMap67.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean73 = serializableMap67.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int74 = serializableMap67.size();
        boolean boolean75 = serializableMap17.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap67);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean82 = serializableMap76.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int84 = serializableMap76.size((java.lang.Object) (short) -1);
        int int86 = serializableMap76.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor87 = serializableMap76.iterator();
        boolean boolean88 = serializableMap17.containsKey((java.lang.Object) serializableMap76);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap89 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor90 = serializableMap89.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet91 = serializableMap89.entrySet();
        int int92 = serializableMap89.totalSize();
        boolean boolean93 = serializableMap17.equals((java.lang.Object) serializableMap89);
        java.util.Set<java.io.Serializable> serializableSet94 = serializableMap17.keySet();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor95 = serializableMap17.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor96 = serializableMap17.mapIterator();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap17);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
        org.junit.Assert.assertNotNull(serializableItor12);
        org.junit.Assert.assertNotNull(serializableEntrySet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(serializableItor90);
        org.junit.Assert.assertNotNull(serializableEntrySet91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(serializableSet94);
        org.junit.Assert.assertNotNull(serializableEntryItor95);
        org.junit.Assert.assertNotNull(serializableItor96);
    }

    @Test
    public void test548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test548");
        org.apache.commons.collections4.map.MultiValueMap<java.util.AbstractList<java.lang.String>, java.lang.Cloneable> strListMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.util.AbstractList<java.lang.String>, java.lang.Cloneable>();
    }

    @Test
    public void test549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test549");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int7 = serializableMap0.size();
        java.util.Collection<java.lang.Object> objCollection8 = serializableMap0.values();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor9 = serializableMap0.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj13 = serializableMap10.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection14 = serializableMap10.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap15 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor16 = serializableMap15.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean24 = serializableMap18.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int26 = serializableMap18.size((java.lang.Object) (short) -1);
        int int28 = serializableMap18.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor29 = serializableMap18.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap30.equals((java.lang.Object) (short) 10);
        int int33 = serializableMap30.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean50 = serializableMap44.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean52 = serializableMap44.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int58 = serializableMap54.totalSize();
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        java.lang.Object obj62 = serializableMap54.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj63 = serializableMap44.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor64 = serializableMap35.iterator((java.lang.Object) serializableMap44);
        java.lang.Object obj65 = serializableMap18.putIfAbsent((java.io.Serializable) int33, (java.lang.Object) strItor64);
        java.lang.Object obj66 = serializableMap15.putIfAbsent((java.io.Serializable) (short) 10, (java.lang.Object) serializableMap18);
        int int67 = serializableMap0.size((java.lang.Object) serializableMap15);
        int int68 = serializableMap15.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(serializableEntryItor9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(serializableMap15);
        org.junit.Assert.assertNotNull(serializableItor16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }

    @Test
    public void test550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test550");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj19 = serializableMap0.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        int int30 = serializableMap20.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        serializableMap31.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj40 = serializableMap32.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj42 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor43 = serializableMap20.iterator(obj42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj50 = serializableMap44.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj52 = serializableMap44.get((java.lang.Object) 100.0d);
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj54 = null;
        java.util.Iterator<java.lang.String> strItor55 = serializableMap20.iterator(obj54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean74 = serializableMap66.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int80 = serializableMap76.totalSize();
        serializableMap75.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap76);
        java.lang.Object obj84 = serializableMap76.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj85 = serializableMap66.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor86 = serializableMap57.iterator((java.lang.Object) serializableMap66);
        serializableMap57.clear();
        boolean boolean88 = serializableMap0.removeMapping((java.lang.Object) strItor55, (java.lang.Object) serializableMap57);
        java.util.Collection<java.lang.Object> objCollection89 = serializableMap57.values();
        java.util.Set<java.io.Serializable> serializableSet90 = serializableMap57.keySet();
        int int91 = serializableMap57.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objCollection89);
        org.junit.Assert.assertNotNull(serializableSet90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test551");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        boolean boolean34 = serializableMap24.isEmpty();
        int int35 = serializableMap24.totalSize();
        java.lang.Class<?> wildcardClass36 = serializableMap24.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test552");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        int int9 = serializableMap0.size();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int15 = serializableMap11.totalSize();
        java.lang.Object obj17 = serializableMap11.get((java.lang.Object) (-1.0d));
        boolean boolean18 = serializableMap11.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean33 = serializableMap30.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean36 = serializableMap30.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int38 = serializableMap30.size((java.lang.Object) (short) -1);
        boolean boolean40 = serializableMap30.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        boolean boolean46 = serializableMap19.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList44);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj50 = serializableMap47.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = serializableMap19.putAll((java.io.Serializable) serializableMap47, (java.util.Collection<java.lang.String>) strList53);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj63 = serializableMap11.replace((java.io.Serializable) serializableMap19, (java.lang.Object) serializableMap56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        boolean boolean74 = serializableMap65.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        boolean boolean76 = serializableMap0.containsValue((java.lang.Object) serializableMap11);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor77 = serializableMap11.iterator();
        boolean boolean78 = serializableMap11.isEmpty();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet79 = serializableMap11.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(serializableEntrySet79);
    }

    @Test
    public void test553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test553");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        boolean boolean13 = serializableMap0.remove((java.lang.Object) (short) 100, (java.lang.Object) 100.0f);
        java.lang.Object obj14 = null;
        boolean boolean15 = serializableMap0.containsValue(obj14);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap16 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean20 = serializableMap17.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean23 = serializableMap17.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int25 = serializableMap17.size((java.lang.Object) (short) -1);
        int int27 = serializableMap17.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap29 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap29.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int33 = serializableMap29.totalSize();
        serializableMap28.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap29);
        java.lang.Object obj37 = serializableMap29.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap29);
        java.lang.Object obj39 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor40 = serializableMap17.iterator(obj39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj47 = serializableMap41.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj49 = serializableMap41.get((java.lang.Object) 100.0d);
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap41);
        int int51 = serializableMap16.size((java.lang.Object) serializableMap41);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj55 = serializableMap52.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection56 = serializableMap52.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap57 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        serializableMap41.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        boolean boolean59 = serializableMap0.containsValue((java.lang.Object) serializableMap57);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNotNull(serializableMap57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test554");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.io.Serializable serializable34 = null;
        java.lang.Object obj36 = serializableMap0.put(serializable34, (java.lang.Object) (short) 100);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean45 = serializableMap37.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int51 = serializableMap47.totalSize();
        serializableMap46.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        java.lang.Object obj55 = serializableMap47.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj56 = serializableMap37.get((java.lang.Object) 1);
        int int57 = serializableMap0.size((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int66 = serializableMap58.size((java.lang.Object) (short) -1);
        boolean boolean68 = serializableMap58.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap69 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean72 = serializableMap69.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean75 = serializableMap69.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int77 = serializableMap69.size((java.lang.Object) (short) -1);
        boolean boolean79 = serializableMap69.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray82 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        boolean boolean85 = serializableMap58.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList83);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap58);
        boolean boolean87 = serializableMap0.isEmpty();
        serializableMap0.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 100 + "'", obj36, (short) 100);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test555");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int11 = serializableMap7.totalSize();
        java.lang.Object obj13 = serializableMap7.get((java.lang.Object) (-1.0d));
        boolean boolean14 = serializableMap7.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean18 = serializableMap15.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean21 = serializableMap15.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int23 = serializableMap15.size((java.lang.Object) (short) -1);
        boolean boolean25 = serializableMap15.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean32 = serializableMap26.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int34 = serializableMap26.size((java.lang.Object) (short) -1);
        boolean boolean36 = serializableMap26.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = serializableMap15.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList40);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj46 = serializableMap43.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        boolean boolean51 = serializableMap15.putAll((java.io.Serializable) serializableMap43, (java.util.Collection<java.lang.String>) strList49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int57 = serializableMap53.totalSize();
        serializableMap52.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap53);
        java.lang.Object obj59 = serializableMap7.replace((java.io.Serializable) serializableMap15, (java.lang.Object) serializableMap52);
        java.util.Collection<java.lang.String> strCollection60 = serializableMap0.getCollection((java.lang.Object) serializableMap15);
        int int61 = serializableMap0.size();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet62 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(strCollection60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(serializableEntrySet62);
    }

    @Test
    public void test556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test556");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.String str4 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean11 = serializableMap5.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean13 = serializableMap5.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean18 = serializableMap14.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection19 = serializableMap14.values();
        java.io.Serializable serializable20 = null;
        java.lang.Object obj22 = serializableMap14.putIfAbsent(serializable20, (java.lang.Object) 0);
        java.lang.Object obj23 = null;
        boolean boolean24 = serializableMap5.remove((java.lang.Object) 0, obj23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        int int35 = serializableMap25.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap38);
        java.lang.Object obj46 = serializableMap38.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean53 = serializableMap47.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean55 = serializableMap47.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj66 = serializableMap47.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor67 = serializableMap38.iterator((java.lang.Object) serializableMap47);
        java.lang.Object obj68 = serializableMap25.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor67);
        int int69 = serializableMap5.size((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj73 = serializableMap70.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        boolean boolean74 = serializableMap5.equals((java.lang.Object) 0.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor76 = serializableMap75.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet77 = serializableMap75.entrySet();
        int int78 = serializableMap75.totalSize();
        serializableMap5.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap75);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.RandomAccess> objMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.RandomAccess>();
        java.lang.Class<?> wildcardClass81 = objMap80.getClass();
        java.util.Iterator<java.lang.String> strItor82 = serializableMap75.iterator((java.lang.Object) objMap80);
        int int83 = serializableMap0.size((java.lang.Object) objMap80);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(serializableItor76);
        org.junit.Assert.assertNotNull(serializableEntrySet77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(strItor82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test557");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.util.Set<java.io.Serializable> serializableSet6 = serializableMap0.keySet();
        java.util.Set<java.io.Serializable> serializableSet7 = serializableMap0.keySet();
        int int9 = serializableMap0.size((java.lang.Object) 0);
        boolean boolean10 = serializableMap0.isEmpty();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        int int23 = serializableMap13.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj35 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor36 = serializableMap13.iterator(obj35);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj43 = serializableMap37.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj45 = serializableMap37.get((java.lang.Object) 100.0d);
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap37);
        int int47 = serializableMap12.size((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap48.size((java.lang.Object) (short) -1);
        int int58 = serializableMap48.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int65 = serializableMap61.totalSize();
        serializableMap60.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap61);
        java.lang.Object obj69 = serializableMap61.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean73 = serializableMap70.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean76 = serializableMap70.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean78 = serializableMap70.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap79 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean83 = serializableMap80.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int84 = serializableMap80.totalSize();
        serializableMap79.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap80);
        java.lang.Object obj88 = serializableMap80.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj89 = serializableMap70.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor90 = serializableMap61.iterator((java.lang.Object) serializableMap70);
        java.lang.Object obj91 = serializableMap48.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor90);
        java.util.Iterator<java.lang.String> strItor92 = serializableMap12.iterator((java.lang.Object) serializableMap48);
        boolean boolean93 = serializableMap0.equals((java.lang.Object) serializableMap12);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 100L + "'", obj69, 100L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 100L + "'", obj88, 100L);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(strItor92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test558");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        boolean boolean18 = serializableMap8.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = serializableMap8.putAll((java.io.Serializable) serializableMap36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj52 = serializableMap0.replace((java.io.Serializable) serializableMap8, (java.lang.Object) serializableMap45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int58 = serializableMap54.totalSize();
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        boolean boolean63 = serializableMap54.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet65 = serializableMap0.entrySet();
        int int66 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj74 = serializableMap68.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.String str75 = serializableMap68.toString();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor76 = serializableMap68.mapIterator();
        java.util.Collection<java.lang.Object> objCollection77 = serializableMap68.values();
        java.lang.Object obj78 = serializableMap0.getOrDefault((java.lang.Object) (short) 0, (java.lang.Object) serializableMap68);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "{}" + "'", str75, "{}");
        org.junit.Assert.assertNotNull(serializableItor76);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{}");
    }

    @Test
    public void test559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test559");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.io.Serializable serializable6 = null;
        java.lang.Object obj8 = serializableMap0.putIfAbsent(serializable6, (java.lang.Object) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean27 = serializableMap19.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap29 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap29.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int33 = serializableMap29.totalSize();
        serializableMap28.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap29);
        java.lang.Object obj37 = serializableMap29.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj38 = serializableMap19.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor39 = serializableMap10.iterator((java.lang.Object) serializableMap19);
        boolean boolean40 = serializableMap0.containsValue((java.lang.Object) strItor39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int45 = serializableMap41.totalSize();
        java.lang.Object obj47 = serializableMap41.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap48.size((java.lang.Object) (short) -1);
        boolean boolean58 = serializableMap48.equals((java.lang.Object) (short) 1);
        int int59 = serializableMap41.size((java.lang.Object) boolean58);
        java.util.Collection<java.lang.Object> objCollection60 = serializableMap41.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.ArrayList<java.lang.String>> serializableMap61 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap41);
        boolean boolean63 = serializableMap41.equals((java.lang.Object) (short) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj68 = serializableMap65.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection69 = serializableMap65.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap70 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        boolean boolean71 = serializableMap0.replace((java.io.Serializable) serializableMap41, (java.lang.Object) serializableMap64, (java.lang.Object) serializableMap65);
        boolean boolean72 = serializableMap41.isEmpty();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor73 = serializableMap41.iterator();
        boolean boolean74 = serializableMap41.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(serializableMap61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertNotNull(serializableMap70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(serializableEntryItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test560");
        org.apache.commons.collections4.map.MultiValueMap<java.util.Map<java.io.Serializable, java.lang.Object>, java.util.AbstractCollection<java.lang.String>> serializableMapMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.util.Map<java.io.Serializable, java.lang.Object>, java.util.AbstractCollection<java.lang.String>>();
    }

    @Test
    public void test561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test561");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj12 = serializableMap9.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap13.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection18 = serializableMap13.values();
        boolean boolean19 = serializableMap0.remove(obj12, (java.lang.Object) serializableMap13);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor20 = serializableMap0.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor21 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor22 = serializableMap0.mapIterator();
        int int23 = serializableMap0.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor20);
        org.junit.Assert.assertNotNull(serializableEntryItor21);
        org.junit.Assert.assertNotNull(serializableItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test562");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        serializableMap19.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj28 = serializableMap20.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj29 = serializableMap10.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor30 = serializableMap1.iterator((java.lang.Object) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        serializableMap31.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj40 = serializableMap31.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean47 = serializableMap41.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int49 = serializableMap41.size((java.lang.Object) (short) -1);
        boolean boolean50 = serializableMap31.containsValue((java.lang.Object) serializableMap41);
        boolean boolean51 = serializableMap41.isEmpty();
        java.util.Iterator<java.lang.String> strItor52 = serializableMap1.iterator((java.lang.Object) boolean51);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int58 = serializableMap54.totalSize();
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        java.lang.Object obj62 = serializableMap53.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean66 = serializableMap63.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean69 = serializableMap63.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int71 = serializableMap63.size((java.lang.Object) (short) -1);
        boolean boolean72 = serializableMap53.containsValue((java.lang.Object) serializableMap63);
        boolean boolean73 = serializableMap63.isEmpty();
        java.util.Collection<java.lang.String> strCollection74 = serializableMap1.getCollection((java.lang.Object) serializableMap63);
        serializableMap63.clear();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0d + "'", obj40, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0d + "'", obj62, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strCollection74);
    }

    @Test
    public void test563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test563");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int26 = serializableMap22.totalSize();
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj30 = serializableMap22.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap10.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj32 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor33 = serializableMap10.iterator(obj32);
        java.util.Set<java.io.Serializable> serializableSet34 = serializableMap10.keySet();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap36.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection41 = serializableMap36.values();
        java.util.Set<java.io.Serializable> serializableSet42 = serializableMap36.keySet();
        boolean boolean43 = serializableMap10.containsValue((java.lang.Object) serializableSet42);
        java.util.Set<java.io.Serializable> serializableSet44 = serializableMap10.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNotNull(serializableSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(serializableSet44);
    }

    @Test
    public void test564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test564");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        serializableMap24.clear();
        java.lang.String str35 = serializableMap24.toString();
        int int36 = serializableMap24.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{}" + "'", str35, "{}");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test565");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        boolean boolean18 = serializableMap8.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = serializableMap8.putAll((java.io.Serializable) serializableMap36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj52 = serializableMap0.replace((java.io.Serializable) serializableMap8, (java.lang.Object) serializableMap45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean59 = serializableMap53.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int61 = serializableMap53.size((java.lang.Object) (short) -1);
        int int63 = serializableMap53.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        java.lang.Object obj73 = serializableMap65.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj82 = serializableMap76.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj83 = serializableMap53.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int84 = serializableMap8.size(obj83);
        serializableMap8.clear();
        int int86 = serializableMap8.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 1 + "'", obj83, (byte) 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test566");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj29 = serializableMap23.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj30 = serializableMap0.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int31 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean38 = serializableMap32.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int40 = serializableMap32.size((java.lang.Object) (short) -1);
        boolean boolean42 = serializableMap32.equals((java.lang.Object) (short) 1);
        serializableMap32.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj54 = serializableMap46.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj55 = serializableMap32.replace((java.io.Serializable) serializableMap44, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap56 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Cloneable> serializableMap57 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int62 = serializableMap58.totalSize();
        java.lang.Object obj64 = serializableMap58.get((java.lang.Object) (-1.0d));
        boolean boolean65 = serializableMap58.isEmpty();
        java.lang.Object obj66 = serializableMap0.put((java.io.Serializable) serializableMap57, (java.lang.Object) boolean65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean70 = serializableMap67.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean73 = serializableMap67.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int75 = serializableMap67.size((java.lang.Object) (short) -1);
        boolean boolean77 = serializableMap67.equals((java.lang.Object) (short) 1);
        serializableMap67.clear();
        java.util.Set<java.io.Serializable> serializableSet79 = serializableMap67.keySet();
        serializableMap67.clear();
        java.lang.Object obj82 = serializableMap57.putIfAbsent((java.io.Serializable) serializableMap67, (java.lang.Object) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 1 + "'", obj30, (byte) 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(serializableMap56);
        org.junit.Assert.assertNotNull(serializableMap57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(serializableSet79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 1 + "'", obj82, (short) 1);
    }

    @Test
    public void test567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test567");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor24 = serializableMap12.mapIterator();
        int int25 = serializableMap12.totalSize();
        int int26 = serializableMap12.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int31 = serializableMap27.totalSize();
        java.lang.Object obj33 = serializableMap27.get((java.lang.Object) (-1.0d));
        boolean boolean34 = serializableMap27.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean41 = serializableMap35.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int43 = serializableMap35.size((java.lang.Object) (short) -1);
        boolean boolean45 = serializableMap35.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean52 = serializableMap46.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int54 = serializableMap46.size((java.lang.Object) (short) -1);
        boolean boolean56 = serializableMap46.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray59 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        boolean boolean62 = serializableMap35.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList60);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj66 = serializableMap63.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        boolean boolean71 = serializableMap35.putAll((java.io.Serializable) serializableMap63, (java.util.Collection<java.lang.String>) strList69);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean76 = serializableMap73.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int77 = serializableMap73.totalSize();
        serializableMap72.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap73);
        java.lang.Object obj79 = serializableMap27.replace((java.io.Serializable) serializableMap35, (java.lang.Object) serializableMap72);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean84 = serializableMap81.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int85 = serializableMap81.totalSize();
        serializableMap80.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap81);
        boolean boolean90 = serializableMap81.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        serializableMap27.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap81);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet92 = serializableMap27.entrySet();
        int int93 = serializableMap12.size((java.lang.Object) serializableEntrySet92);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor94 = serializableMap12.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor94);
    }

    @Test
    public void test568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test568");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int11 = serializableMap7.totalSize();
        java.lang.Object obj13 = serializableMap7.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean20 = serializableMap14.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int22 = serializableMap14.size((java.lang.Object) (short) -1);
        boolean boolean24 = serializableMap14.equals((java.lang.Object) (short) 1);
        int int25 = serializableMap7.size((java.lang.Object) boolean24);
        java.util.Collection<java.lang.Object> objCollection26 = serializableMap7.values();
        java.util.Set<java.io.Serializable> serializableSet27 = serializableMap7.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj31 = serializableMap28.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean38 = serializableMap32.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int40 = serializableMap32.size((java.lang.Object) (short) -1);
        int int42 = serializableMap32.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int48 = serializableMap44.totalSize();
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj52 = serializableMap44.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap32.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj54 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor55 = serializableMap32.iterator(obj54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean59 = serializableMap56.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj62 = serializableMap56.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj64 = serializableMap56.get((java.lang.Object) 100.0d);
        serializableMap32.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int70 = serializableMap66.totalSize();
        java.lang.Object obj72 = serializableMap66.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean76 = serializableMap73.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean79 = serializableMap73.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int81 = serializableMap73.size((java.lang.Object) (short) -1);
        boolean boolean83 = serializableMap73.equals((java.lang.Object) (short) 1);
        int int84 = serializableMap66.size((java.lang.Object) boolean83);
        java.util.Collection<java.lang.Object> objCollection85 = serializableMap66.values();
        java.lang.Object obj86 = serializableMap28.replace((java.io.Serializable) serializableMap56, (java.lang.Object) objCollection85);
        boolean boolean87 = serializableMap0.containsValue((java.lang.Object) serializableMap7, (java.lang.Object) objCollection85);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Object> serializableMap88 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap89 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(serializableMap88);
        org.junit.Assert.assertNotNull(serializableMap89);
    }

    @Test
    public void test569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test569");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int20 = serializableMap12.size((java.lang.Object) (short) -1);
        boolean boolean22 = serializableMap12.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean29 = serializableMap23.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int31 = serializableMap23.size((java.lang.Object) (short) -1);
        boolean boolean33 = serializableMap23.equals((java.lang.Object) (short) 1);
        serializableMap23.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int41 = serializableMap37.totalSize();
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap37);
        java.lang.Object obj45 = serializableMap37.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj46 = serializableMap23.replace((java.io.Serializable) serializableMap35, (java.lang.Object) 1);
        boolean boolean47 = serializableMap12.equals((java.lang.Object) serializableMap35);
        serializableMap35.clear();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap50 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(serializableMap50);
    }

    @Test
    public void test570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test570");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        int int18 = serializableMap0.size((java.lang.Object) boolean17);
        java.lang.String str19 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.lang.reflect.AnnotatedElement, java.lang.Iterable<java.lang.Object>> annotatedElementMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.reflect.AnnotatedElement, java.lang.Iterable<java.lang.Object>>();
        boolean boolean21 = serializableMap0.containsValue((java.lang.Object) annotatedElementMap20);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor22 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor22);
    }

    @Test
    public void test571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test571");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap9.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection14 = serializableMap9.values();
        java.io.Serializable serializable15 = null;
        java.lang.Object obj17 = serializableMap9.putIfAbsent(serializable15, (java.lang.Object) 0);
        java.lang.Object obj18 = null;
        boolean boolean19 = serializableMap0.remove((java.lang.Object) 0, obj18);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        int int30 = serializableMap20.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int37 = serializableMap33.totalSize();
        serializableMap32.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj41 = serializableMap33.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean45 = serializableMap42.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean48 = serializableMap42.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean50 = serializableMap42.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int56 = serializableMap52.totalSize();
        serializableMap51.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        java.lang.Object obj60 = serializableMap52.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj61 = serializableMap42.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor62 = serializableMap33.iterator((java.lang.Object) serializableMap42);
        java.lang.Object obj63 = serializableMap20.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor62);
        int int64 = serializableMap0.size((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj68 = serializableMap65.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        boolean boolean69 = serializableMap0.equals((java.lang.Object) 0.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor71 = serializableMap70.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet72 = serializableMap70.entrySet();
        int int73 = serializableMap70.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap70);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.RandomAccess> objMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.RandomAccess>();
        java.lang.Class<?> wildcardClass76 = objMap75.getClass();
        java.util.Iterator<java.lang.String> strItor77 = serializableMap70.iterator((java.lang.Object) objMap75);
        java.util.Collection<java.lang.Object> objCollection78 = serializableMap70.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(serializableItor71);
        org.junit.Assert.assertNotNull(serializableEntrySet72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strItor77);
        org.junit.Assert.assertNotNull(objCollection78);
    }

    @Test
    public void test572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test572");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor12 = serializableMap0.mapIterator();
        serializableMap0.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet14 = serializableMap0.entrySet();
        serializableMap0.clear();
        java.lang.String str16 = serializableMap0.toString();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet17 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
        org.junit.Assert.assertNotNull(serializableItor12);
        org.junit.Assert.assertNotNull(serializableEntrySet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertNotNull(serializableEntrySet17);
    }

    @Test
    public void test573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test573");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.io.Serializable serializable34 = null;
        java.lang.Object obj36 = serializableMap0.put(serializable34, (java.lang.Object) (short) 100);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean45 = serializableMap37.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int51 = serializableMap47.totalSize();
        serializableMap46.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        java.lang.Object obj55 = serializableMap47.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj56 = serializableMap37.get((java.lang.Object) 1);
        int int57 = serializableMap0.size((java.lang.Object) serializableMap37);
        java.util.Collection<java.lang.Object> objCollection58 = serializableMap37.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 100 + "'", obj36, (short) 100);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(objCollection58);
    }

    @Test
    public void test574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test574");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int10 = serializableMap2.size((java.lang.Object) (short) -1);
        boolean boolean12 = serializableMap2.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        boolean boolean23 = serializableMap13.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = serializableMap2.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList27);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj33 = serializableMap30.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = serializableMap2.putAll((java.io.Serializable) serializableMap30, (java.util.Collection<java.lang.String>) strList36);
        java.lang.Object obj39 = serializableMap0.get((java.lang.Object) serializableMap30);
        int int40 = serializableMap30.totalSize();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test575");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        boolean boolean46 = serializableMap36.equals((java.lang.Object) (short) 1);
        serializableMap36.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int54 = serializableMap50.totalSize();
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        java.lang.Object obj58 = serializableMap50.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj59 = serializableMap36.replace((java.io.Serializable) serializableMap48, (java.lang.Object) 1);
        boolean boolean60 = serializableMap25.equals((java.lang.Object) serializableMap48);
        java.lang.Object obj62 = serializableMap25.remove((java.lang.Object) (-1.0d));
        java.lang.Object obj63 = serializableMap0.replace((java.io.Serializable) (-1.0d), (java.lang.Object) serializableMap25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        boolean boolean74 = serializableMap65.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap75 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean78 = serializableMap76.equals((java.lang.Object) (short) 10);
        int int79 = serializableMap76.totalSize();
        java.lang.Object obj80 = serializableMap25.putIfAbsent((java.io.Serializable) serializableMap65, (java.lang.Object) int79);
        java.util.Set<java.io.Serializable> serializableSet81 = serializableMap65.keySet();
        int int82 = serializableMap65.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(serializableMap75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0 + "'", obj80, 0);
        org.junit.Assert.assertNotNull(serializableSet81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test576");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap5 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        boolean boolean6 = serializableMap0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serializableMap5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test577");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        boolean boolean19 = serializableMap10.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap20.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean48 = serializableMap0.putAll((java.io.Serializable) serializableMap10, (java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap49.size();
        java.util.Collection<java.lang.Object> objCollection57 = serializableMap49.values();
        boolean boolean58 = serializableMap10.containsValue((java.lang.Object) serializableMap49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean65 = serializableMap59.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int67 = serializableMap59.size((java.lang.Object) (short) -1);
        boolean boolean69 = serializableMap59.equals((java.lang.Object) (short) 1);
        serializableMap59.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean76 = serializableMap73.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int77 = serializableMap73.totalSize();
        serializableMap72.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap73);
        java.lang.Object obj81 = serializableMap73.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj82 = serializableMap59.replace((java.io.Serializable) serializableMap71, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap83 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap71);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Cloneable> serializableMap84 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap83);
        java.lang.Object obj86 = serializableMap10.put((java.io.Serializable) serializableMap83, (java.lang.Object) (-1.0d));
        int int88 = serializableMap10.size((java.lang.Object) "{1=[100]}");
        java.util.Collection<java.lang.Object> objCollection89 = serializableMap10.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 100L + "'", obj81, 100L);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(serializableMap83);
        org.junit.Assert.assertNotNull(serializableMap84);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (-1.0d) + "'", obj86, (-1.0d));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(objCollection89);
    }

    @Test
    public void test578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test578");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        java.util.Set<java.io.Serializable> serializableSet12 = serializableMap0.keySet();
        java.lang.String str13 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj17 = serializableMap14.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection18 = serializableMap14.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap19 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor20 = serializableMap19.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        int int32 = serializableMap22.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor33 = serializableMap22.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap34.equals((java.lang.Object) (short) 10);
        int int37 = serializableMap34.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean42 = serializableMap39.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int43 = serializableMap39.totalSize();
        serializableMap38.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap39);
        java.lang.Object obj47 = serializableMap39.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean56 = serializableMap48.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int62 = serializableMap58.totalSize();
        serializableMap57.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap58);
        java.lang.Object obj66 = serializableMap58.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj67 = serializableMap48.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor68 = serializableMap39.iterator((java.lang.Object) serializableMap48);
        java.lang.Object obj69 = serializableMap22.putIfAbsent((java.io.Serializable) int37, (java.lang.Object) strItor68);
        java.lang.Object obj70 = serializableMap19.putIfAbsent((java.io.Serializable) (short) 10, (java.lang.Object) serializableMap22);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor71 = serializableMap19.mapIterator();
        boolean boolean72 = serializableMap0.equals((java.lang.Object) serializableMap19);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(serializableMap19);
        org.junit.Assert.assertNotNull(serializableItor20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(serializableItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test579");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        int int10 = serializableMap1.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int15 = serializableMap11.totalSize();
        java.lang.Object obj17 = serializableMap11.get((java.lang.Object) (-1.0d));
        boolean boolean18 = serializableMap11.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean33 = serializableMap30.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean36 = serializableMap30.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int38 = serializableMap30.size((java.lang.Object) (short) -1);
        boolean boolean40 = serializableMap30.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        boolean boolean46 = serializableMap19.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList44);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj50 = serializableMap47.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = serializableMap19.putAll((java.io.Serializable) serializableMap47, (java.util.Collection<java.lang.String>) strList53);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj63 = serializableMap11.replace((java.io.Serializable) serializableMap19, (java.lang.Object) serializableMap56);
        java.lang.Object obj66 = serializableMap56.putIfAbsent((java.io.Serializable) 0.0d, (java.lang.Object) (-1));
        serializableMap56.clear();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor68 = serializableMap56.iterator();
        java.lang.Object obj69 = serializableMap1.get((java.lang.Object) serializableMap56);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1) + "'", obj66, (-1));
        org.junit.Assert.assertNotNull(serializableEntryItor68);
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test580");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        boolean boolean12 = serializableMap0.equals((java.lang.Object) ' ');
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet13 = serializableMap0.entrySet();
        java.util.Collection<java.lang.Object> objCollection14 = serializableMap0.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet13);
        org.junit.Assert.assertNotNull(objCollection14);
    }

    @Test
    public void test581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test581");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean10 = serializableMap2.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj21 = serializableMap2.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        boolean boolean32 = serializableMap22.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int41 = serializableMap33.size((java.lang.Object) (short) -1);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = serializableMap22.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj53 = serializableMap50.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        boolean boolean58 = serializableMap22.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap60.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int66 = serializableMap60.size((java.lang.Object) 10);
        java.lang.Object obj67 = serializableMap50.putIfAbsent((java.io.Serializable) (short) -1, (java.lang.Object) serializableMap60);
        java.lang.Object obj68 = serializableMap0.replace((java.io.Serializable) serializableMap2, (java.lang.Object) serializableMap50);
        int int69 = serializableMap0.totalSize();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test582");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int10 = serializableMap2.size((java.lang.Object) (short) -1);
        boolean boolean12 = serializableMap2.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        boolean boolean23 = serializableMap13.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = serializableMap2.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList27);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj33 = serializableMap30.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = serializableMap2.putAll((java.io.Serializable) serializableMap30, (java.util.Collection<java.lang.String>) strList36);
        java.lang.Object obj39 = serializableMap0.get((java.lang.Object) serializableMap30);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor40 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap41 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        java.util.Collection<java.lang.Object> objCollection42 = serializableMap0.values();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(serializableItor40);
        org.junit.Assert.assertNotNull(serializableMap41);
        org.junit.Assert.assertNotNull(objCollection42);
    }

    @Test
    public void test583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test583");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.String str4 = serializableMap0.toString();
        int int5 = serializableMap0.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test584");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean11 = serializableMap5.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int13 = serializableMap5.size((java.lang.Object) (short) -1);
        int int15 = serializableMap5.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int22 = serializableMap18.totalSize();
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap18);
        java.lang.Object obj26 = serializableMap18.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean33 = serializableMap27.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean35 = serializableMap27.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int41 = serializableMap37.totalSize();
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap37);
        java.lang.Object obj45 = serializableMap37.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj46 = serializableMap27.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor47 = serializableMap18.iterator((java.lang.Object) serializableMap27);
        java.lang.Object obj48 = serializableMap5.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean56 = serializableMap50.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int57 = serializableMap50.size();
        boolean boolean58 = serializableMap0.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> serializableMap59 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        int int60 = serializableMap59.size();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(serializableMap59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test585");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj29 = serializableMap23.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj30 = serializableMap0.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int31 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor33 = serializableMap32.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int38 = serializableMap34.totalSize();
        java.lang.Object obj40 = serializableMap34.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean47 = serializableMap41.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int49 = serializableMap41.size((java.lang.Object) (short) -1);
        boolean boolean51 = serializableMap41.equals((java.lang.Object) (short) 1);
        int int52 = serializableMap34.size((java.lang.Object) boolean51);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int59 = serializableMap55.totalSize();
        serializableMap54.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap55);
        java.lang.Object obj63 = serializableMap54.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean67 = serializableMap64.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean70 = serializableMap64.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int72 = serializableMap64.size((java.lang.Object) (short) -1);
        boolean boolean73 = serializableMap54.containsValue((java.lang.Object) serializableMap64);
        boolean boolean74 = serializableMap34.containsValue((java.lang.Object) '4', (java.lang.Object) boolean73);
        boolean boolean75 = serializableMap0.removeMapping((java.lang.Object) serializableMap32, (java.lang.Object) boolean73);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean82 = serializableMap76.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int84 = serializableMap76.size((java.lang.Object) (short) -1);
        int int86 = serializableMap76.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor87 = serializableMap76.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor88 = serializableMap76.mapIterator();
        java.util.Iterator<java.lang.String> strItor89 = serializableMap0.iterator((java.lang.Object) serializableMap76);
        boolean boolean90 = serializableMap0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet91 = serializableMap0.entrySet();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor92 = serializableMap0.mapIterator();
        java.util.Collection<java.lang.String> strCollection94 = serializableMap0.getCollection((java.lang.Object) 'a');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 1 + "'", obj30, (byte) 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(serializableItor33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0d + "'", obj63, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor87);
        org.junit.Assert.assertNotNull(serializableItor88);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet91);
        org.junit.Assert.assertNotNull(serializableItor92);
        org.junit.Assert.assertNull(strCollection94);
    }

    @Test
    public void test586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test586");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        boolean boolean10 = serializableMap1.isEmpty();
        serializableMap1.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean20 = serializableMap17.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int21 = serializableMap17.totalSize();
        java.lang.Object obj23 = serializableMap17.get((java.lang.Object) (-1.0d));
        boolean boolean24 = serializableMap17.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean33 = serializableMap25.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap34.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean50 = serializableMap44.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int52 = serializableMap44.size((java.lang.Object) (short) -1);
        boolean boolean53 = serializableMap34.containsValue((java.lang.Object) serializableMap44);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int59 = serializableMap55.totalSize();
        serializableMap54.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap55);
        java.lang.Object obj63 = serializableMap55.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean67 = serializableMap64.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean70 = serializableMap64.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean72 = serializableMap64.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap74 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean77 = serializableMap74.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int78 = serializableMap74.totalSize();
        serializableMap73.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap74);
        java.lang.Object obj82 = serializableMap74.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj83 = serializableMap64.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor84 = serializableMap55.iterator((java.lang.Object) serializableMap64);
        serializableMap55.clear();
        boolean boolean86 = serializableMap17.replace((java.io.Serializable) boolean33, (java.lang.Object) serializableMap44, (java.lang.Object) serializableMap55);
        int int87 = serializableMap17.size();
        java.util.Set<java.io.Serializable> serializableSet88 = serializableMap17.keySet();
        boolean boolean89 = serializableMap12.containsValue((java.lang.Object) serializableSet88);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0d + "'", obj43, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(strItor84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(serializableSet88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test587");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        boolean boolean27 = serializableMap0.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList25);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor28 = serializableMap0.iterator();
        int int29 = serializableMap0.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(serializableEntryItor28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test588");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        boolean boolean20 = serializableMap10.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        boolean boolean31 = serializableMap21.equals((java.lang.Object) (short) 1);
        serializableMap21.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj44 = serializableMap21.replace((java.io.Serializable) serializableMap33, (java.lang.Object) 1);
        boolean boolean45 = serializableMap10.equals((java.lang.Object) serializableMap33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean52 = serializableMap46.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int54 = serializableMap46.size((java.lang.Object) (short) -1);
        int int56 = serializableMap46.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj67 = serializableMap59.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean76 = serializableMap68.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap77 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean81 = serializableMap78.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int82 = serializableMap78.totalSize();
        serializableMap77.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap78);
        java.lang.Object obj86 = serializableMap78.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj87 = serializableMap68.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor88 = serializableMap59.iterator((java.lang.Object) serializableMap68);
        java.lang.Object obj89 = serializableMap46.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor88);
        java.lang.Class<?> wildcardClass90 = strItor88.getClass();
        java.lang.Object obj91 = serializableMap1.replace((java.io.Serializable) serializableMap10, (java.lang.Object) strItor88);
        boolean boolean92 = serializableMap1.isEmpty();
        serializableMap1.clear();
        java.util.Collection<java.lang.Object> objCollection94 = serializableMap1.values();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor95 = serializableMap1.mapIterator();
        int int96 = serializableMap1.size();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objCollection94);
        org.junit.Assert.assertNotNull(serializableItor95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test589");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int7 = serializableMap0.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor8 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean15 = serializableMap9.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap9.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor17 = serializableMap9.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean24 = serializableMap18.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int25 = serializableMap18.size();
        java.util.Collection<java.lang.Object> objCollection26 = serializableMap18.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean31 = serializableMap27.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection32 = serializableMap27.values();
        java.io.Serializable serializable33 = null;
        java.lang.Object obj35 = serializableMap27.putIfAbsent(serializable33, (java.lang.Object) 0);
        serializableMap27.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        boolean boolean47 = serializableMap37.equals((java.lang.Object) (short) 1);
        serializableMap37.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean54 = serializableMap51.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int55 = serializableMap51.totalSize();
        serializableMap50.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap51);
        java.lang.Object obj59 = serializableMap51.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj60 = serializableMap37.replace((java.io.Serializable) serializableMap49, (java.lang.Object) 1);
        java.lang.Object obj61 = serializableMap27.remove((java.lang.Object) serializableMap37);
        java.util.Iterator<java.lang.String> strItor62 = serializableMap18.iterator(obj61);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet63 = serializableMap18.entrySet();
        boolean boolean64 = serializableMap0.removeMapping((java.lang.Object) serializableItor17, (java.lang.Object) serializableMap18);
        java.lang.Class<?> wildcardClass65 = serializableItor17.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(serializableItor17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(serializableEntrySet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test590");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean10 = serializableMap2.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj21 = serializableMap2.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        boolean boolean32 = serializableMap22.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int41 = serializableMap33.size((java.lang.Object) (short) -1);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = serializableMap22.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj53 = serializableMap50.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        boolean boolean58 = serializableMap22.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap60.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int66 = serializableMap60.size((java.lang.Object) 10);
        java.lang.Object obj67 = serializableMap50.putIfAbsent((java.io.Serializable) (short) -1, (java.lang.Object) serializableMap60);
        java.lang.Object obj68 = serializableMap0.replace((java.io.Serializable) serializableMap2, (java.lang.Object) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap69 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean72 = serializableMap69.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean75 = serializableMap69.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int77 = serializableMap69.size((java.lang.Object) (short) -1);
        int int79 = serializableMap69.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean84 = serializableMap81.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int85 = serializableMap81.totalSize();
        serializableMap80.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap81);
        java.lang.Object obj89 = serializableMap81.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap69.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap81);
        java.lang.Object obj91 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor92 = serializableMap69.iterator(obj91);
        java.lang.Object obj93 = null;
        boolean boolean94 = serializableMap50.removeMapping((java.lang.Object) serializableMap69, obj93);
        java.util.Collection<java.lang.Object> objCollection95 = serializableMap50.values();
        java.lang.Class<?> wildcardClass96 = objCollection95.getClass();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertNotNull(strItor92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objCollection95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test591");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor12 = serializableMap0.mapIterator();
        serializableMap0.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet14 = serializableMap0.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean18 = serializableMap15.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean21 = serializableMap15.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int22 = serializableMap15.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor23 = serializableMap15.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean30 = serializableMap24.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int31 = serializableMap24.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor32 = serializableMap24.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int40 = serializableMap33.size();
        java.util.Collection<java.lang.Object> objCollection41 = serializableMap33.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap42.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection47 = serializableMap42.values();
        java.io.Serializable serializable48 = null;
        java.lang.Object obj50 = serializableMap42.putIfAbsent(serializable48, (java.lang.Object) 0);
        serializableMap42.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean58 = serializableMap52.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int60 = serializableMap52.size((java.lang.Object) (short) -1);
        boolean boolean62 = serializableMap52.equals((java.lang.Object) (short) 1);
        serializableMap52.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int70 = serializableMap66.totalSize();
        serializableMap65.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap66);
        java.lang.Object obj74 = serializableMap66.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj75 = serializableMap52.replace((java.io.Serializable) serializableMap64, (java.lang.Object) 1);
        java.lang.Object obj76 = serializableMap42.remove((java.lang.Object) serializableMap52);
        java.util.Iterator<java.lang.String> strItor77 = serializableMap33.iterator(obj76);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet78 = serializableMap33.entrySet();
        boolean boolean79 = serializableMap15.removeMapping((java.lang.Object) serializableItor32, (java.lang.Object) serializableMap33);
        boolean boolean80 = serializableMap0.containsKey((java.lang.Object) serializableMap33);
        boolean boolean81 = serializableMap33.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj85 = serializableMap82.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection86 = serializableMap82.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap87 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap82);
        java.util.Collection<java.lang.String> strCollection88 = serializableMap33.getCollection((java.lang.Object) serializableMap82);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor89 = serializableMap33.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
        org.junit.Assert.assertNotNull(serializableItor12);
        org.junit.Assert.assertNotNull(serializableEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(serializableItor32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(strItor77);
        org.junit.Assert.assertNotNull(serializableEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertNotNull(serializableMap87);
        org.junit.Assert.assertNull(strCollection88);
        org.junit.Assert.assertNotNull(serializableEntryItor89);
    }

    @Test
    public void test592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test592");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        boolean boolean34 = serializableMap0.isEmpty();
        java.lang.String str35 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Comparable<java.lang.String>> serializableMap36 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet37 = serializableMap0.entrySet();
        java.util.Set<java.io.Serializable> serializableSet38 = serializableMap0.keySet();
        java.lang.Class<?> wildcardClass39 = serializableSet38.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{1=[100]}" + "'", str35, "{1=[100]}");
        org.junit.Assert.assertNotNull(serializableMap36);
        org.junit.Assert.assertNotNull(serializableEntrySet37);
        org.junit.Assert.assertNotNull(serializableSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test593");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        serializableMap19.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj28 = serializableMap20.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj29 = serializableMap10.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor30 = serializableMap1.iterator((java.lang.Object) serializableMap10);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor31 = serializableMap1.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        java.lang.Object obj38 = serializableMap32.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean42 = serializableMap39.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean45 = serializableMap39.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int47 = serializableMap39.size((java.lang.Object) (short) -1);
        int int49 = serializableMap39.size((java.lang.Object) (byte) 1);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = serializableMap32.remove((java.lang.Object) serializableMap39, obj50);
        boolean boolean53 = serializableMap1.containsValue((java.lang.Object) serializableMap32);
        java.util.Set<java.io.Serializable> serializableSet54 = serializableMap32.keySet();
        java.lang.Class<?> wildcardClass55 = serializableMap32.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertNotNull(serializableEntryItor31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(serializableSet54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test594");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj19 = serializableMap0.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        int int30 = serializableMap20.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        serializableMap31.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj40 = serializableMap32.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj42 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor43 = serializableMap20.iterator(obj42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj50 = serializableMap44.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj52 = serializableMap44.get((java.lang.Object) 100.0d);
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj54 = null;
        java.util.Iterator<java.lang.String> strItor55 = serializableMap20.iterator(obj54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean74 = serializableMap66.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int80 = serializableMap76.totalSize();
        serializableMap75.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap76);
        java.lang.Object obj84 = serializableMap76.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj85 = serializableMap66.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor86 = serializableMap57.iterator((java.lang.Object) serializableMap66);
        serializableMap57.clear();
        boolean boolean88 = serializableMap0.removeMapping((java.lang.Object) strItor55, (java.lang.Object) serializableMap57);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Object> serializableMap89 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        boolean boolean90 = serializableMap89.isEmpty();
        int int91 = serializableMap89.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(serializableMap89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test595");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int26 = serializableMap22.totalSize();
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj30 = serializableMap22.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap10.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj32 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor33 = serializableMap10.iterator(obj32);
        java.util.Set<java.io.Serializable> serializableSet34 = serializableMap10.keySet();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        int int36 = serializableMap0.size();
        java.util.Collection<java.lang.Object> objCollection37 = serializableMap0.values();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor38 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNotNull(serializableEntryItor38);
    }

    @Test
    public void test596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test596");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        boolean boolean6 = serializableMap0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test597");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        boolean boolean34 = serializableMap0.isEmpty();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor35 = serializableMap0.iterator();
        int int36 = serializableMap0.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test598");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj12 = serializableMap9.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap13.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection18 = serializableMap13.values();
        boolean boolean19 = serializableMap0.remove(obj12, (java.lang.Object) serializableMap13);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor20 = serializableMap0.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor21 = serializableMap0.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.util.Set<java.io.Serializable> serializableSet26 = serializableMap22.keySet();
        java.util.Collection<java.lang.String> strCollection27 = serializableMap0.getCollection((java.lang.Object) serializableMap22);
        java.lang.Object obj29 = serializableMap22.remove((java.lang.Object) "");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean33 = serializableMap30.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean36 = serializableMap30.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int38 = serializableMap30.size((java.lang.Object) (short) -1);
        int int40 = serializableMap30.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean45 = serializableMap42.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int46 = serializableMap42.totalSize();
        serializableMap41.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap42);
        java.lang.Object obj50 = serializableMap42.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap30.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap42);
        java.lang.Object obj52 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor53 = serializableMap30.iterator(obj52);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj60 = serializableMap54.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj62 = serializableMap54.get((java.lang.Object) 100.0d);
        serializableMap30.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        int int64 = serializableMap54.totalSize();
        serializableMap54.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet66 = serializableMap54.entrySet();
        serializableMap22.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor20);
        org.junit.Assert.assertNotNull(serializableEntryItor21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(serializableSet26);
        org.junit.Assert.assertNull(strCollection27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(serializableEntrySet66);
    }

    @Test
    public void test599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test599");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean10 = serializableMap2.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj21 = serializableMap2.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        boolean boolean32 = serializableMap22.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int41 = serializableMap33.size((java.lang.Object) (short) -1);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = serializableMap22.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj53 = serializableMap50.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        boolean boolean58 = serializableMap22.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap60.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int66 = serializableMap60.size((java.lang.Object) 10);
        java.lang.Object obj67 = serializableMap50.putIfAbsent((java.io.Serializable) (short) -1, (java.lang.Object) serializableMap60);
        java.lang.Object obj68 = serializableMap0.replace((java.io.Serializable) serializableMap2, (java.lang.Object) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap69 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean72 = serializableMap69.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean75 = serializableMap69.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int77 = serializableMap69.size((java.lang.Object) (short) -1);
        int int79 = serializableMap69.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean84 = serializableMap81.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int85 = serializableMap81.totalSize();
        serializableMap80.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap81);
        java.lang.Object obj89 = serializableMap81.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap69.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap81);
        java.lang.Object obj91 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor92 = serializableMap69.iterator(obj91);
        java.lang.Object obj93 = null;
        boolean boolean94 = serializableMap50.removeMapping((java.lang.Object) serializableMap69, obj93);
        int int95 = serializableMap50.totalSize();
        java.lang.Class<?> wildcardClass96 = serializableMap50.getClass();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertNotNull(strItor92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test600");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj12 = serializableMap9.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap13.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection18 = serializableMap13.values();
        boolean boolean19 = serializableMap0.remove(obj12, (java.lang.Object) serializableMap13);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor20 = serializableMap0.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor21 = serializableMap0.iterator();
        java.util.Set<java.io.Serializable> serializableSet22 = serializableMap0.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int28 = serializableMap24.totalSize();
        serializableMap23.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor30 = serializableMap24.iterator();
        boolean boolean31 = serializableMap0.containsKey((java.lang.Object) serializableMap24);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean38 = serializableMap32.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int40 = serializableMap32.size((java.lang.Object) (short) -1);
        boolean boolean42 = serializableMap32.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean49 = serializableMap43.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int51 = serializableMap43.size((java.lang.Object) (short) -1);
        boolean boolean53 = serializableMap43.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray56 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        boolean boolean59 = serializableMap32.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList57);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj63 = serializableMap60.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        boolean boolean68 = serializableMap32.putAll((java.io.Serializable) serializableMap60, (java.util.Collection<java.lang.String>) strList66);
        java.io.Serializable serializable69 = null;
        java.lang.Object obj70 = null;
        java.lang.Object obj71 = serializableMap32.putIfAbsent(serializable69, obj70);
        int int72 = serializableMap0.size(obj71);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor20);
        org.junit.Assert.assertNotNull(serializableEntryItor21);
        org.junit.Assert.assertNotNull(serializableSet22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test601");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor8 = serializableMap7.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean15 = serializableMap9.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int17 = serializableMap9.size((java.lang.Object) (short) -1);
        boolean boolean19 = serializableMap9.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap9.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj40 = serializableMap37.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        boolean boolean45 = serializableMap9.putAll((java.io.Serializable) serializableMap37, (java.util.Collection<java.lang.String>) strList43);
        java.lang.Object obj46 = serializableMap7.get((java.lang.Object) serializableMap37);
        serializableMap37.clear();
        boolean boolean48 = serializableMap0.equals((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int54 = serializableMap50.totalSize();
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        boolean boolean59 = serializableMap50.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Iterator<java.io.Serializable>> serializableMap60 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int65 = serializableMap61.totalSize();
        java.lang.Object obj67 = serializableMap61.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int76 = serializableMap68.size((java.lang.Object) (short) -1);
        boolean boolean78 = serializableMap68.equals((java.lang.Object) (short) 1);
        int int79 = serializableMap61.size((java.lang.Object) boolean78);
        java.lang.String str80 = serializableMap61.toString();
        java.lang.String[] strArray85 = new java.lang.String[] { "{}", "", "" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        boolean boolean88 = serializableMap61.putAll((java.io.Serializable) 1.0d, (java.util.Collection<java.lang.String>) strList86);
        boolean boolean89 = serializableMap0.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList86);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Comparable<java.lang.String>> serializableMap90 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>>> serializableMap91 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(serializableMap60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "{}" + "'", str80, "{}");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(serializableMap90);
        org.junit.Assert.assertNotNull(serializableMap91);
    }

    @Test
    public void test602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test602");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor24 = serializableMap12.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap30.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection35 = serializableMap30.values();
        java.io.Serializable serializable36 = null;
        java.lang.Object obj38 = serializableMap30.putIfAbsent(serializable36, (java.lang.Object) 0);
        serializableMap30.clear();
        boolean boolean40 = serializableMap30.isEmpty();
        java.util.Collection<java.lang.String> strCollection41 = serializableMap25.getCollection((java.lang.Object) serializableMap30);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean45 = serializableMap42.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj48 = serializableMap42.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj50 = serializableMap42.get((java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean54 = serializableMap51.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int55 = serializableMap51.totalSize();
        java.lang.Object obj57 = serializableMap51.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int66 = serializableMap58.size((java.lang.Object) (short) -1);
        boolean boolean68 = serializableMap58.equals((java.lang.Object) (short) 1);
        int int69 = serializableMap51.size((java.lang.Object) boolean68);
        java.util.Collection<java.lang.Object> objCollection70 = serializableMap51.values();
        boolean boolean72 = serializableMap42.removeMapping((java.lang.Object) serializableMap51, (java.lang.Object) 100);
        java.lang.Object obj74 = serializableMap25.putIfAbsent((java.io.Serializable) serializableMap42, (java.lang.Object) 1L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean78 = serializableMap75.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean81 = serializableMap75.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int82 = serializableMap75.size();
        java.util.Collection<java.lang.Object> objCollection83 = serializableMap75.values();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor84 = serializableMap75.iterator();
        java.lang.Object obj85 = serializableMap12.putIfAbsent((java.io.Serializable) serializableMap25, (java.lang.Object) serializableMap75);
        int int86 = serializableMap12.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strCollection41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1L + "'", obj74, 1L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(objCollection83);
        org.junit.Assert.assertNotNull(serializableEntryItor84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{}");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test603");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap11.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection16 = serializableMap11.values();
        java.io.Serializable serializable17 = null;
        java.lang.Object obj19 = serializableMap11.putIfAbsent(serializable17, (java.lang.Object) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int25 = serializableMap21.totalSize();
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap21);
        java.lang.Object obj29 = serializableMap21.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean33 = serializableMap30.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean36 = serializableMap30.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean38 = serializableMap30.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap40 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean43 = serializableMap40.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int44 = serializableMap40.totalSize();
        serializableMap39.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap40);
        java.lang.Object obj48 = serializableMap40.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj49 = serializableMap30.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor50 = serializableMap21.iterator((java.lang.Object) serializableMap30);
        boolean boolean51 = serializableMap11.containsValue((java.lang.Object) strItor50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj58 = serializableMap52.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj60 = serializableMap52.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap61 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor63 = serializableMap62.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet64 = serializableMap62.entrySet();
        int int65 = serializableMap62.totalSize();
        java.util.Set<java.io.Serializable> serializableSet66 = serializableMap62.keySet();
        boolean boolean67 = serializableMap52.containsKey((java.lang.Object) serializableSet66);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int72 = serializableMap68.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean77 = serializableMap73.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection78 = serializableMap73.values();
        java.io.Serializable serializable79 = null;
        java.lang.Object obj81 = serializableMap73.putIfAbsent(serializable79, (java.lang.Object) 0);
        serializableMap73.clear();
        boolean boolean83 = serializableMap73.isEmpty();
        java.util.Collection<java.lang.String> strCollection84 = serializableMap68.getCollection((java.lang.Object) serializableMap73);
        int int85 = serializableMap73.size();
        org.apache.commons.collections4.map.MultiValueMap<java.util.AbstractList<java.lang.String>, org.apache.commons.collections4.IterableGet<java.io.Serializable, java.lang.Object>> strListMap86 = new org.apache.commons.collections4.map.MultiValueMap<java.util.AbstractList<java.lang.String>, org.apache.commons.collections4.IterableGet<java.io.Serializable, java.lang.Object>>();
        java.lang.Object obj87 = serializableMap52.replace((java.io.Serializable) serializableMap73, (java.lang.Object) strListMap86);
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap73);
        java.lang.String[] strArray95 = new java.lang.String[] { "{null=[0]}", "{null=[0]}", "{}", "{null=[0]}", "{{}=[hi!], 1=[, hi!]}", "{1=[100]}" };
        java.util.ArrayList<java.lang.String> strList96 = new java.util.ArrayList<java.lang.String>();
        boolean boolean97 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList96, strArray95);
        boolean boolean98 = serializableMap0.putAll((java.io.Serializable) serializableMap73, (java.util.Collection<java.lang.String>) strList96);
        java.lang.String str99 = serializableMap73.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(serializableMap61);
        org.junit.Assert.assertNotNull(serializableItor63);
        org.junit.Assert.assertNotNull(serializableEntrySet64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(serializableSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objCollection78);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0 + "'", obj81, 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strCollection84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "{}" + "'", str99, "{}");
    }

    @Test
    public void test604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test604");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor24 = serializableMap12.mapIterator();
        int int25 = serializableMap12.totalSize();
        int int27 = serializableMap12.size((java.lang.Object) "{-1=[{}]}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test605");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap5 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet6 = serializableMap0.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj10 = serializableMap7.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection11 = serializableMap7.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int20 = serializableMap12.size((java.lang.Object) (short) -1);
        int int22 = serializableMap12.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean42 = serializableMap34.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int48 = serializableMap44.totalSize();
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj52 = serializableMap44.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj53 = serializableMap34.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor54 = serializableMap25.iterator((java.lang.Object) serializableMap34);
        java.lang.Object obj55 = serializableMap12.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean63 = serializableMap57.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int64 = serializableMap57.size();
        boolean boolean65 = serializableMap7.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap57);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int74 = serializableMap66.size((java.lang.Object) (short) -1);
        int int76 = serializableMap66.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor77 = serializableMap66.iterator();
        boolean boolean78 = serializableMap7.containsKey((java.lang.Object) serializableMap66);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap79 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor80 = serializableMap79.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet81 = serializableMap79.entrySet();
        int int82 = serializableMap79.totalSize();
        boolean boolean83 = serializableMap7.equals((java.lang.Object) serializableMap79);
        java.util.Set<java.io.Serializable> serializableSet84 = serializableMap7.keySet();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor85 = serializableMap7.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor86 = serializableMap7.mapIterator();
        java.util.Collection<java.lang.String> strCollection87 = serializableMap0.getCollection((java.lang.Object) serializableItor86);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(serializableMap5);
        org.junit.Assert.assertNotNull(serializableEntrySet6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(serializableItor80);
        org.junit.Assert.assertNotNull(serializableEntrySet81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(serializableSet84);
        org.junit.Assert.assertNotNull(serializableEntryItor85);
        org.junit.Assert.assertNotNull(serializableItor86);
        org.junit.Assert.assertNull(strCollection87);
    }

    @Test
    public void test606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test606");
        org.apache.commons.collections4.map.MultiValueMap<org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>, org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object>> serializableMapMap0 = new org.apache.commons.collections4.map.MultiValueMap<org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>, org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object>>();
    }

    @Test
    public void test607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test607");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Collection<java.lang.Object>> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Collection<java.lang.Object>>();
        java.lang.Object obj1 = null;
        java.lang.Object obj2 = serializableMap0.get(obj1);
        org.junit.Assert.assertNull(obj2);
    }

    @Test
    public void test608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test608");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj19 = serializableMap0.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        int int30 = serializableMap20.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        serializableMap31.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj40 = serializableMap32.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj42 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor43 = serializableMap20.iterator(obj42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj50 = serializableMap44.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj52 = serializableMap44.get((java.lang.Object) 100.0d);
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj54 = null;
        java.util.Iterator<java.lang.String> strItor55 = serializableMap20.iterator(obj54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean74 = serializableMap66.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int80 = serializableMap76.totalSize();
        serializableMap75.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap76);
        java.lang.Object obj84 = serializableMap76.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj85 = serializableMap66.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor86 = serializableMap57.iterator((java.lang.Object) serializableMap66);
        serializableMap57.clear();
        boolean boolean88 = serializableMap0.removeMapping((java.lang.Object) strItor55, (java.lang.Object) serializableMap57);
        java.util.Collection<java.lang.Object> objCollection89 = serializableMap0.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objCollection89);
    }

    @Test
    public void test609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test609");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean2 = serializableMap0.equals((java.lang.Object) (short) 10);
        int int3 = serializableMap0.totalSize();
        boolean boolean4 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean11 = serializableMap5.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean13 = serializableMap5.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean18 = serializableMap15.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int19 = serializableMap15.totalSize();
        serializableMap14.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap15);
        boolean boolean24 = serializableMap15.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        boolean boolean46 = serializableMap36.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray49 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        boolean boolean52 = serializableMap25.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList50);
        boolean boolean53 = serializableMap5.putAll((java.io.Serializable) serializableMap15, (java.util.Collection<java.lang.String>) strList50);
        java.util.Set<java.io.Serializable> serializableSet54 = serializableMap5.keySet();
        int int55 = serializableMap0.size((java.lang.Object) serializableSet54);
        serializableMap0.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableSet54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test610");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap4 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean7 = serializableMap4.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean10 = serializableMap4.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int12 = serializableMap4.size((java.lang.Object) (short) -1);
        int int14 = serializableMap4.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap16 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean19 = serializableMap16.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int20 = serializableMap16.totalSize();
        serializableMap15.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap16);
        java.lang.Object obj24 = serializableMap16.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap4.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap16);
        java.lang.Object obj26 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor27 = serializableMap4.iterator(obj26);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean31 = serializableMap28.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj34 = serializableMap28.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj36 = serializableMap28.get((java.lang.Object) 100.0d);
        serializableMap4.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap28);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        java.lang.Object obj44 = serializableMap38.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean51 = serializableMap45.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int53 = serializableMap45.size((java.lang.Object) (short) -1);
        boolean boolean55 = serializableMap45.equals((java.lang.Object) (short) 1);
        int int56 = serializableMap38.size((java.lang.Object) boolean55);
        java.util.Collection<java.lang.Object> objCollection57 = serializableMap38.values();
        java.lang.Object obj58 = serializableMap0.replace((java.io.Serializable) serializableMap28, (java.lang.Object) objCollection57);
        java.util.Set<java.io.Serializable> serializableSet59 = serializableMap28.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap60 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap28);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int66 = serializableMap62.totalSize();
        serializableMap61.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj70 = serializableMap62.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean74 = serializableMap71.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean77 = serializableMap71.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean79 = serializableMap71.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean84 = serializableMap81.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int85 = serializableMap81.totalSize();
        serializableMap80.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap81);
        java.lang.Object obj89 = serializableMap81.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj90 = serializableMap71.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor91 = serializableMap62.iterator((java.lang.Object) serializableMap71);
        serializableMap62.clear();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor93 = serializableMap62.mapIterator();
        java.util.Collection<java.lang.String> strCollection94 = serializableMap28.getCollection((java.lang.Object) serializableMap62);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(serializableSet59);
        org.junit.Assert.assertNotNull(serializableMap60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertNotNull(serializableItor93);
        org.junit.Assert.assertNull(strCollection94);
    }

    @Test
    public void test611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test611");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj12 = serializableMap9.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap13.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection18 = serializableMap13.values();
        boolean boolean19 = serializableMap0.remove(obj12, (java.lang.Object) serializableMap13);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor20 = serializableMap0.iterator();
        int int21 = serializableMap0.size();
        int int22 = serializableMap0.totalSize();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet23 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableEntrySet23);
    }

    @Test
    public void test612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test612");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        boolean boolean10 = serializableMap1.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap11 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int20 = serializableMap12.size((java.lang.Object) (short) -1);
        int int22 = serializableMap12.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int28 = serializableMap24.totalSize();
        serializableMap23.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj32 = serializableMap24.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj34 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor35 = serializableMap12.iterator(obj34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj42 = serializableMap36.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj44 = serializableMap36.get((java.lang.Object) 100.0d);
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap36);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet46 = serializableMap36.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj54 = serializableMap48.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean61 = serializableMap55.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean68 = serializableMap62.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int70 = serializableMap62.size((java.lang.Object) (short) -1);
        boolean boolean72 = serializableMap62.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean76 = serializableMap73.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean79 = serializableMap73.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int81 = serializableMap73.size((java.lang.Object) (short) -1);
        boolean boolean83 = serializableMap73.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray86 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        boolean boolean89 = serializableMap62.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList87);
        boolean boolean90 = serializableMap48.putAll((java.io.Serializable) serializableMap55, (java.util.Collection<java.lang.String>) strList87);
        boolean boolean91 = serializableMap36.putAll((java.io.Serializable) (-1.0d), (java.util.Collection<java.lang.String>) strList87);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap36);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serializableMap11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(serializableEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test613");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.RandomAccess> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.RandomAccess>();
    }

    @Test
    public void test614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test614");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap9.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection14 = serializableMap9.values();
        java.io.Serializable serializable15 = null;
        java.lang.Object obj17 = serializableMap9.putIfAbsent(serializable15, (java.lang.Object) 0);
        java.lang.Object obj18 = null;
        boolean boolean19 = serializableMap0.remove((java.lang.Object) 0, obj18);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor21 = serializableMap20.mapIterator();
        boolean boolean22 = serializableMap0.containsKey((java.lang.Object) serializableItor21);
        java.lang.Object obj23 = null;
        java.util.Iterator<java.lang.String> strItor24 = serializableMap0.iterator(obj23);
        java.util.Collection<java.lang.Object> objCollection25 = serializableMap0.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serializableItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(objCollection25);
    }

    @Test
    public void test615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test615");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap1.clear();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap1.iterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
    }

    @Test
    public void test616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test616");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int10 = serializableMap2.size((java.lang.Object) (short) -1);
        boolean boolean12 = serializableMap2.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        boolean boolean23 = serializableMap13.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = serializableMap2.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList27);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj33 = serializableMap30.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = serializableMap2.putAll((java.io.Serializable) serializableMap30, (java.util.Collection<java.lang.String>) strList36);
        java.lang.Object obj39 = serializableMap0.get((java.lang.Object) serializableMap30);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor40 = serializableMap0.mapIterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor41 = serializableMap0.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean45 = serializableMap42.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int46 = serializableMap42.totalSize();
        java.lang.Object obj48 = serializableMap42.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int57 = serializableMap49.size((java.lang.Object) (short) -1);
        int int59 = serializableMap49.size((java.lang.Object) (byte) 1);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = serializableMap42.remove((java.lang.Object) serializableMap49, obj60);
        int int63 = serializableMap42.size();
        java.util.Iterator<java.lang.String> strItor64 = serializableMap0.iterator((java.lang.Object) serializableMap42);
        java.lang.Class<?> wildcardClass65 = serializableMap42.getClass();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(serializableItor40);
        org.junit.Assert.assertNotNull(serializableEntryItor41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test617");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        int int21 = serializableMap11.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int28 = serializableMap24.totalSize();
        serializableMap23.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj32 = serializableMap24.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean41 = serializableMap33.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int47 = serializableMap43.totalSize();
        serializableMap42.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap43);
        java.lang.Object obj51 = serializableMap43.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj52 = serializableMap33.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor53 = serializableMap24.iterator((java.lang.Object) serializableMap33);
        java.lang.Object obj54 = serializableMap11.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor53);
        boolean boolean55 = serializableMap0.containsKey((java.lang.Object) 1);
        int int57 = serializableMap0.size((java.lang.Object) 10.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 100L + "'", obj51, 100L);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test618");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj8 = serializableMap5.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap5.values();
        java.util.Iterator<java.lang.String> strItor10 = serializableMap0.iterator((java.lang.Object) serializableMap5);
        serializableMap0.clear();
        serializableMap0.clear();
        int int13 = serializableMap0.totalSize();
        java.util.Collection<java.lang.Object> objCollection14 = serializableMap0.values();
        java.lang.String str15 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap16 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean20 = serializableMap17.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean23 = serializableMap17.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int25 = serializableMap17.size((java.lang.Object) (short) -1);
        int int27 = serializableMap17.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap29 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap29.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int33 = serializableMap29.totalSize();
        serializableMap28.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap29);
        java.lang.Object obj37 = serializableMap29.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap29);
        java.lang.Object obj39 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor40 = serializableMap17.iterator(obj39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj47 = serializableMap41.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj49 = serializableMap41.get((java.lang.Object) 100.0d);
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap41);
        int int51 = serializableMap16.size((java.lang.Object) serializableMap41);
        boolean boolean53 = serializableMap41.containsValue((java.lang.Object) (byte) 1);
        int int54 = serializableMap0.size((java.lang.Object) boolean53);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test619");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean16 = serializableMap8.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int22 = serializableMap18.totalSize();
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap18);
        java.lang.Object obj26 = serializableMap17.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean33 = serializableMap27.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int35 = serializableMap27.size((java.lang.Object) (short) -1);
        boolean boolean36 = serializableMap17.containsValue((java.lang.Object) serializableMap27);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap38);
        java.lang.Object obj46 = serializableMap38.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean53 = serializableMap47.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean55 = serializableMap47.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj66 = serializableMap47.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor67 = serializableMap38.iterator((java.lang.Object) serializableMap47);
        serializableMap38.clear();
        boolean boolean69 = serializableMap0.replace((java.io.Serializable) boolean16, (java.lang.Object) serializableMap27, (java.lang.Object) serializableMap38);
        java.util.Collection<java.lang.Object> objCollection70 = serializableMap38.values();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor71 = serializableMap38.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap72.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int76 = serializableMap72.totalSize();
        java.lang.Object obj78 = serializableMap72.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap79 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean82 = serializableMap79.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean85 = serializableMap79.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int87 = serializableMap79.size((java.lang.Object) (short) -1);
        boolean boolean89 = serializableMap79.equals((java.lang.Object) (short) 1);
        int int90 = serializableMap72.size((java.lang.Object) boolean89);
        java.util.Collection<java.lang.Object> objCollection91 = serializableMap72.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.ArrayList<java.lang.String>> serializableMap92 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap72);
        int int93 = serializableMap72.totalSize();
        int int94 = serializableMap72.size();
        boolean boolean95 = serializableMap38.equals((java.lang.Object) serializableMap72);
        serializableMap38.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10.0d + "'", obj26, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertNotNull(serializableItor71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(objCollection91);
        org.junit.Assert.assertNotNull(serializableMap92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test620");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean10 = serializableMap2.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj21 = serializableMap2.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        boolean boolean32 = serializableMap22.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int41 = serializableMap33.size((java.lang.Object) (short) -1);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = serializableMap22.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj53 = serializableMap50.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        boolean boolean58 = serializableMap22.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap60.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int66 = serializableMap60.size((java.lang.Object) 10);
        java.lang.Object obj67 = serializableMap50.putIfAbsent((java.io.Serializable) (short) -1, (java.lang.Object) serializableMap60);
        java.lang.Object obj68 = serializableMap0.replace((java.io.Serializable) serializableMap2, (java.lang.Object) serializableMap50);
        java.lang.String str69 = serializableMap0.toString();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet70 = serializableMap0.entrySet();
        java.lang.String str71 = serializableMap0.toString();
        java.util.Set<java.io.Serializable> serializableSet72 = serializableMap0.keySet();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
        org.junit.Assert.assertNotNull(serializableEntrySet70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
        org.junit.Assert.assertNotNull(serializableSet72);
    }

    @Test
    public void test621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test621");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj34 = null;
        java.util.Iterator<java.lang.String> strItor35 = serializableMap0.iterator(obj34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap36 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>> serializableMap37 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap36);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertNotNull(serializableMap36);
        org.junit.Assert.assertNotNull(serializableMap37);
    }

    @Test
    public void test622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test622");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean30 = serializableMap24.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean32 = serializableMap24.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj36 = serializableMap33.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap37.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection42 = serializableMap37.values();
        boolean boolean43 = serializableMap24.remove(obj36, (java.lang.Object) serializableMap37);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor44 = serializableMap24.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor45 = serializableMap24.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.util.Set<java.io.Serializable> serializableSet50 = serializableMap46.keySet();
        java.util.Collection<java.lang.String> strCollection51 = serializableMap24.getCollection((java.lang.Object) serializableMap46);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor53 = serializableMap52.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean60 = serializableMap54.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int62 = serializableMap54.size((java.lang.Object) (short) -1);
        boolean boolean64 = serializableMap54.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean71 = serializableMap65.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int73 = serializableMap65.size((java.lang.Object) (short) -1);
        boolean boolean75 = serializableMap65.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray78 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        boolean boolean81 = serializableMap54.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList79);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj85 = serializableMap82.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        boolean boolean90 = serializableMap54.putAll((java.io.Serializable) serializableMap82, (java.util.Collection<java.lang.String>) strList88);
        java.lang.Object obj91 = serializableMap52.get((java.lang.Object) serializableMap82);
        java.lang.Object obj92 = serializableMap46.remove((java.lang.Object) serializableMap52);
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor44);
        org.junit.Assert.assertNotNull(serializableEntryItor45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(serializableSet50);
        org.junit.Assert.assertNull(strCollection51);
        org.junit.Assert.assertNotNull(serializableItor53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test623");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        int int9 = serializableMap0.size();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj17 = serializableMap11.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj19 = serializableMap11.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection20 = serializableMap11.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        int int31 = serializableMap21.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int37 = serializableMap33.totalSize();
        serializableMap32.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj41 = serializableMap33.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj43 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor44 = serializableMap21.iterator(obj43);
        java.util.Set<java.io.Serializable> serializableSet45 = serializableMap21.keySet();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap21);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap47.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection52 = serializableMap47.values();
        java.util.Set<java.io.Serializable> serializableSet53 = serializableMap47.keySet();
        boolean boolean54 = serializableMap21.containsValue((java.lang.Object) serializableSet53);
        java.util.Collection<java.lang.String> strCollection55 = serializableMap0.getCollection((java.lang.Object) serializableSet53);
        java.lang.String str56 = serializableMap0.toString();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor57 = serializableMap0.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj64 = serializableMap58.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj66 = serializableMap58.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection67 = serializableMap58.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int76 = serializableMap68.size((java.lang.Object) (short) -1);
        int int78 = serializableMap68.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap79 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean83 = serializableMap80.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int84 = serializableMap80.totalSize();
        serializableMap79.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap80);
        java.lang.Object obj88 = serializableMap80.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap68.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap80);
        java.lang.Object obj90 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor91 = serializableMap68.iterator(obj90);
        java.util.Set<java.io.Serializable> serializableSet92 = serializableMap68.keySet();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap68);
        java.util.Collection<java.lang.Object> objCollection94 = serializableMap68.values();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor95 = serializableMap68.iterator();
        boolean boolean96 = serializableMap0.equals((java.lang.Object) serializableEntryItor95);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(serializableSet45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(serializableSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(strCollection55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{}" + "'", str56, "{}");
        org.junit.Assert.assertNotNull(serializableEntryItor57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objCollection67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 100L + "'", obj88, 100L);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertNotNull(serializableSet92);
        org.junit.Assert.assertNotNull(objCollection94);
        org.junit.Assert.assertNotNull(serializableEntryItor95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test624");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Iterator<java.io.Serializable>> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Iterator<java.io.Serializable>>();
    }

    @Test
    public void test625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test625");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        boolean boolean20 = serializableMap10.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        boolean boolean31 = serializableMap21.equals((java.lang.Object) (short) 1);
        serializableMap21.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj44 = serializableMap21.replace((java.io.Serializable) serializableMap33, (java.lang.Object) 1);
        boolean boolean45 = serializableMap10.equals((java.lang.Object) serializableMap33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean52 = serializableMap46.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int54 = serializableMap46.size((java.lang.Object) (short) -1);
        int int56 = serializableMap46.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj67 = serializableMap59.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean76 = serializableMap68.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap77 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean81 = serializableMap78.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int82 = serializableMap78.totalSize();
        serializableMap77.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap78);
        java.lang.Object obj86 = serializableMap78.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj87 = serializableMap68.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor88 = serializableMap59.iterator((java.lang.Object) serializableMap68);
        java.lang.Object obj89 = serializableMap46.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor88);
        java.lang.Class<?> wildcardClass90 = strItor88.getClass();
        java.lang.Object obj91 = serializableMap1.replace((java.io.Serializable) serializableMap10, (java.lang.Object) strItor88);
        boolean boolean92 = serializableMap1.isEmpty();
        serializableMap1.clear();
        java.lang.Object obj94 = null;
        boolean boolean95 = serializableMap1.containsValue(obj94);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test626");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        boolean boolean46 = serializableMap36.equals((java.lang.Object) (short) 1);
        serializableMap36.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int54 = serializableMap50.totalSize();
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        java.lang.Object obj58 = serializableMap50.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj59 = serializableMap36.replace((java.io.Serializable) serializableMap48, (java.lang.Object) 1);
        boolean boolean60 = serializableMap25.equals((java.lang.Object) serializableMap48);
        java.lang.Object obj62 = serializableMap25.remove((java.lang.Object) (-1.0d));
        java.lang.Object obj63 = serializableMap0.replace((java.io.Serializable) (-1.0d), (java.lang.Object) serializableMap25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        boolean boolean74 = serializableMap65.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap75 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean78 = serializableMap76.equals((java.lang.Object) (short) 10);
        int int79 = serializableMap76.totalSize();
        java.lang.Object obj80 = serializableMap25.putIfAbsent((java.io.Serializable) serializableMap65, (java.lang.Object) int79);
        java.util.Set<java.io.Serializable> serializableSet81 = serializableMap65.keySet();
        serializableMap65.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(serializableMap75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0 + "'", obj80, 0);
        org.junit.Assert.assertNotNull(serializableSet81);
    }

    @Test
    public void test627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test627");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap24 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet25 = serializableMap12.entrySet();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet26 = serializableMap12.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableMap24);
        org.junit.Assert.assertNotNull(serializableEntrySet25);
        org.junit.Assert.assertNotNull(serializableEntrySet26);
    }

    @Test
    public void test628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test628");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int9 = serializableMap5.totalSize();
        java.lang.Object obj11 = serializableMap5.get((java.lang.Object) (-1.0d));
        boolean boolean12 = serializableMap5.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        boolean boolean23 = serializableMap13.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean30 = serializableMap24.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int32 = serializableMap24.size((java.lang.Object) (short) -1);
        boolean boolean34 = serializableMap24.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray37 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        boolean boolean40 = serializableMap13.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList38);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj44 = serializableMap41.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = serializableMap13.putAll((java.io.Serializable) serializableMap41, (java.util.Collection<java.lang.String>) strList47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean54 = serializableMap51.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int55 = serializableMap51.totalSize();
        serializableMap50.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap51);
        java.lang.Object obj57 = serializableMap5.replace((java.io.Serializable) serializableMap13, (java.lang.Object) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        boolean boolean68 = serializableMap59.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        serializableMap5.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet70 = serializableMap5.entrySet();
        java.lang.Object obj71 = serializableMap0.get((java.lang.Object) serializableEntrySet70);
        java.lang.Class<?> wildcardClass72 = serializableMap0.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test629");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor5 = serializableMap0.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet6 = serializableMap0.entrySet();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor7 = serializableMap0.mapIterator();
        java.io.Serializable serializable8 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int13 = serializableMap9.totalSize();
        java.lang.Object obj15 = serializableMap9.get((java.lang.Object) (-1.0d));
        boolean boolean16 = serializableMap9.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean20 = serializableMap17.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean23 = serializableMap17.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean25 = serializableMap17.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int31 = serializableMap27.totalSize();
        serializableMap26.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap27);
        java.lang.Object obj35 = serializableMap26.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        boolean boolean45 = serializableMap26.containsValue((java.lang.Object) serializableMap36);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int51 = serializableMap47.totalSize();
        serializableMap46.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        java.lang.Object obj55 = serializableMap47.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean59 = serializableMap56.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean62 = serializableMap56.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean64 = serializableMap56.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int70 = serializableMap66.totalSize();
        serializableMap65.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap66);
        java.lang.Object obj74 = serializableMap66.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj75 = serializableMap56.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor76 = serializableMap47.iterator((java.lang.Object) serializableMap56);
        serializableMap47.clear();
        boolean boolean78 = serializableMap9.replace((java.io.Serializable) boolean25, (java.lang.Object) serializableMap36, (java.lang.Object) serializableMap47);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet79 = serializableMap47.entrySet();
        java.lang.Object obj80 = serializableMap0.replace(serializable8, (java.lang.Object) serializableEntrySet79);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serializableItor5);
        org.junit.Assert.assertNotNull(serializableEntrySet6);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0d + "'", obj35, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet79);
        org.junit.Assert.assertNull(obj80);
    }

    @Test
    public void test630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test630");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        boolean boolean10 = serializableMap1.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap11 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.util.Collection<java.lang.String> strCollection13 = serializableMap1.getCollection((java.lang.Object) "{}");
        serializableMap1.clear();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor15 = serializableMap1.iterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serializableMap11);
        org.junit.Assert.assertNull(strCollection13);
        org.junit.Assert.assertNotNull(serializableEntryItor15);
    }

    @Test
    public void test631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test631");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj34 = null;
        java.util.Iterator<java.lang.String> strItor35 = serializableMap0.iterator(obj34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int40 = serializableMap36.totalSize();
        java.lang.Object obj42 = serializableMap36.get((java.lang.Object) (-1.0d));
        boolean boolean43 = serializableMap36.isEmpty();
        int int44 = serializableMap36.totalSize();
        serializableMap36.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor47 = serializableMap46.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet48 = serializableMap46.entrySet();
        boolean boolean49 = serializableMap0.containsValue((java.lang.Object) serializableMap36, (java.lang.Object) serializableEntrySet48);
        java.util.Set<java.io.Serializable> serializableSet50 = serializableMap0.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean54 = serializableMap51.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean57 = serializableMap51.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int59 = serializableMap51.size((java.lang.Object) (short) -1);
        boolean boolean61 = serializableMap51.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean68 = serializableMap62.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int70 = serializableMap62.size((java.lang.Object) (short) -1);
        boolean boolean72 = serializableMap62.equals((java.lang.Object) (short) 1);
        serializableMap62.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap74 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int80 = serializableMap76.totalSize();
        serializableMap75.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap76);
        java.lang.Object obj84 = serializableMap76.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj85 = serializableMap62.replace((java.io.Serializable) serializableMap74, (java.lang.Object) 1);
        boolean boolean86 = serializableMap51.equals((java.lang.Object) serializableMap74);
        serializableMap74.clear();
        java.util.Iterator<java.lang.String> strItor88 = serializableMap0.iterator((java.lang.Object) serializableMap74);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(serializableItor47);
        org.junit.Assert.assertNotNull(serializableEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(serializableSet50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strItor88);
    }

    @Test
    public void test632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test632");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        boolean boolean18 = serializableMap8.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = serializableMap8.putAll((java.io.Serializable) serializableMap36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj52 = serializableMap0.replace((java.io.Serializable) serializableMap8, (java.lang.Object) serializableMap45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean59 = serializableMap53.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int61 = serializableMap53.size((java.lang.Object) (short) -1);
        int int63 = serializableMap53.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        java.lang.Object obj73 = serializableMap65.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj82 = serializableMap76.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj83 = serializableMap53.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int84 = serializableMap8.size(obj83);
        boolean boolean85 = serializableMap8.isEmpty();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor86 = serializableMap8.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 1 + "'", obj83, (byte) 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(serializableItor86);
    }

    @Test
    public void test633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test633");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractCollection<java.lang.String>> serializableMap10 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        serializableMap0.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableMap10);
    }

    @Test
    public void test634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test634");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet2 = serializableMap0.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap3 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean6 = serializableMap3.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int7 = serializableMap3.totalSize();
        java.lang.Object obj9 = serializableMap3.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = serializableMap3.remove((java.lang.Object) serializableMap10, obj21);
        java.lang.Object obj24 = serializableMap0.remove((java.lang.Object) serializableMap3);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet25 = serializableMap3.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean32 = serializableMap26.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int34 = serializableMap26.size((java.lang.Object) (short) -1);
        boolean boolean36 = serializableMap26.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        boolean boolean47 = serializableMap37.equals((java.lang.Object) (short) 1);
        serializableMap37.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean54 = serializableMap51.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int55 = serializableMap51.totalSize();
        serializableMap50.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap51);
        java.lang.Object obj59 = serializableMap51.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj60 = serializableMap37.replace((java.io.Serializable) serializableMap49, (java.lang.Object) 1);
        boolean boolean61 = serializableMap26.equals((java.lang.Object) serializableMap49);
        java.util.Collection<java.lang.String> strCollection62 = serializableMap3.getCollection((java.lang.Object) serializableMap49);
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertNotNull(serializableEntrySet2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(serializableEntrySet25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strCollection62);
    }

    @Test
    public void test635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test635");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj10 = serializableMap7.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection11 = serializableMap7.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int20 = serializableMap12.size((java.lang.Object) (short) -1);
        int int22 = serializableMap12.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean42 = serializableMap34.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int48 = serializableMap44.totalSize();
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj52 = serializableMap44.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj53 = serializableMap34.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor54 = serializableMap25.iterator((java.lang.Object) serializableMap34);
        java.lang.Object obj55 = serializableMap12.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean63 = serializableMap57.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int64 = serializableMap57.size();
        boolean boolean65 = serializableMap7.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap57);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int74 = serializableMap66.size((java.lang.Object) (short) -1);
        int int76 = serializableMap66.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor77 = serializableMap66.iterator();
        boolean boolean78 = serializableMap7.containsKey((java.lang.Object) serializableMap66);
        boolean boolean79 = serializableMap0.equals((java.lang.Object) serializableMap7);
        java.util.Set<java.io.Serializable> serializableSet80 = serializableMap7.keySet();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor81 = serializableMap7.iterator();
        boolean boolean82 = serializableMap7.isEmpty();
        boolean boolean83 = serializableMap7.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(serializableSet80);
        org.junit.Assert.assertNotNull(serializableEntryItor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test636");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap6 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean9 = serializableMap6.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean12 = serializableMap6.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int14 = serializableMap6.size((java.lang.Object) (short) -1);
        int int16 = serializableMap6.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int22 = serializableMap18.totalSize();
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap18);
        java.lang.Object obj26 = serializableMap18.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap6.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap18);
        java.lang.Object obj28 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor29 = serializableMap6.iterator(obj28);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean33 = serializableMap30.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj36 = serializableMap30.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj38 = serializableMap30.get((java.lang.Object) 100.0d);
        serializableMap6.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap30);
        int int40 = serializableMap5.size((java.lang.Object) serializableMap30);
        boolean boolean42 = serializableMap30.containsValue((java.lang.Object) (byte) 1);
        java.lang.Object obj43 = serializableMap0.get((java.lang.Object) serializableMap30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test637");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        boolean boolean18 = serializableMap8.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = serializableMap8.putAll((java.io.Serializable) serializableMap36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj52 = serializableMap0.replace((java.io.Serializable) serializableMap8, (java.lang.Object) serializableMap45);
        java.lang.Object obj55 = serializableMap45.putIfAbsent((java.io.Serializable) 0.0d, (java.lang.Object) (-1));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean74 = serializableMap66.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int80 = serializableMap76.totalSize();
        serializableMap75.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap76);
        java.lang.Object obj84 = serializableMap76.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj85 = serializableMap66.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor86 = serializableMap57.iterator((java.lang.Object) serializableMap66);
        serializableMap57.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap88 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean91 = serializableMap88.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj94 = serializableMap88.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj96 = serializableMap88.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap97 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap88);
        java.lang.Object obj98 = serializableMap45.putIfAbsent((java.io.Serializable) serializableMap57, (java.lang.Object) serializableMap88);
        java.lang.String str99 = serializableMap88.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (-1) + "'", obj55, (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNotNull(serializableMap97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "{}");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "{}" + "'", str99, "{}");
    }

    @Test
    public void test638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test638");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor5 = serializableMap0.mapIterator();
        serializableMap0.clear();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor7 = serializableMap0.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet8 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serializableItor5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableEntrySet8);
    }

    @Test
    public void test639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test639");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor24 = serializableMap12.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        serializableMap25.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap38);
        java.lang.Object obj46 = serializableMap38.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean53 = serializableMap47.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean55 = serializableMap47.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj66 = serializableMap47.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor67 = serializableMap38.iterator((java.lang.Object) serializableMap47);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor68 = serializableMap38.iterator();
        java.lang.Object obj69 = serializableMap12.putIfAbsent((java.io.Serializable) serializableMap25, (java.lang.Object) serializableEntryItor68);
        int int70 = serializableMap25.size();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean74 = serializableMap71.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean77 = serializableMap71.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int79 = serializableMap71.size((java.lang.Object) (short) -1);
        boolean boolean81 = serializableMap71.equals((java.lang.Object) (short) 1);
        serializableMap71.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap83 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap84 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap85 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean88 = serializableMap85.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int89 = serializableMap85.totalSize();
        serializableMap84.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap85);
        java.lang.Object obj93 = serializableMap85.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj94 = serializableMap71.replace((java.io.Serializable) serializableMap83, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap95 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap83);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Cloneable> serializableMap96 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap95);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor97 = serializableMap96.mapIterator();
        boolean boolean98 = serializableMap25.containsValue((java.lang.Object) serializableItor97);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(serializableEntryItor68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 100L + "'", obj93, 100L);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(serializableMap95);
        org.junit.Assert.assertNotNull(serializableMap96);
        org.junit.Assert.assertNotNull(serializableItor97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test640");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj10 = serializableMap7.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection11 = serializableMap7.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int20 = serializableMap12.size((java.lang.Object) (short) -1);
        int int22 = serializableMap12.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean42 = serializableMap34.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int48 = serializableMap44.totalSize();
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj52 = serializableMap44.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj53 = serializableMap34.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor54 = serializableMap25.iterator((java.lang.Object) serializableMap34);
        java.lang.Object obj55 = serializableMap12.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean63 = serializableMap57.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int64 = serializableMap57.size();
        boolean boolean65 = serializableMap7.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap57);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int74 = serializableMap66.size((java.lang.Object) (short) -1);
        int int76 = serializableMap66.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor77 = serializableMap66.iterator();
        boolean boolean78 = serializableMap7.containsKey((java.lang.Object) serializableMap66);
        boolean boolean79 = serializableMap0.equals((java.lang.Object) serializableMap7);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean84 = serializableMap80.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor85 = serializableMap80.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet86 = serializableMap80.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Object> serializableMap87 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap80);
        java.lang.Object obj88 = serializableMap0.remove((java.lang.Object) serializableMap80);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(serializableItor85);
        org.junit.Assert.assertNotNull(serializableEntrySet86);
        org.junit.Assert.assertNotNull(serializableMap87);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test641");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        serializableMap23.clear();
        java.lang.Object obj38 = serializableMap23.get((java.lang.Object) (-1.0f));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test642");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        serializableMap19.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj28 = serializableMap20.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj29 = serializableMap10.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor30 = serializableMap1.iterator((java.lang.Object) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        serializableMap31.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj40 = serializableMap31.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean47 = serializableMap41.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int49 = serializableMap41.size((java.lang.Object) (short) -1);
        boolean boolean50 = serializableMap31.containsValue((java.lang.Object) serializableMap41);
        boolean boolean51 = serializableMap41.isEmpty();
        java.util.Iterator<java.lang.String> strItor52 = serializableMap1.iterator((java.lang.Object) boolean51);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int58 = serializableMap54.totalSize();
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        java.lang.Object obj62 = serializableMap53.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean66 = serializableMap63.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean69 = serializableMap63.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int71 = serializableMap63.size((java.lang.Object) (short) -1);
        boolean boolean72 = serializableMap53.containsValue((java.lang.Object) serializableMap63);
        boolean boolean73 = serializableMap63.isEmpty();
        java.util.Collection<java.lang.String> strCollection74 = serializableMap1.getCollection((java.lang.Object) serializableMap63);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>> serializableMap75 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap63);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0d + "'", obj40, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0d + "'", obj62, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strCollection74);
        org.junit.Assert.assertNotNull(serializableMap75);
    }

    @Test
    public void test643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test643");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int10 = serializableMap2.size((java.lang.Object) (short) -1);
        boolean boolean12 = serializableMap2.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        boolean boolean23 = serializableMap13.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = serializableMap2.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList27);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj33 = serializableMap30.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = serializableMap2.putAll((java.io.Serializable) serializableMap30, (java.util.Collection<java.lang.String>) strList36);
        java.lang.Object obj39 = serializableMap0.get((java.lang.Object) serializableMap30);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap40 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean43 = serializableMap40.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean46 = serializableMap40.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int48 = serializableMap40.size((java.lang.Object) (short) -1);
        int int50 = serializableMap40.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor51 = serializableMap40.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor52 = serializableMap40.mapIterator();
        serializableMap40.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet54 = serializableMap40.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int59 = serializableMap55.totalSize();
        java.lang.Object obj61 = serializableMap55.get((java.lang.Object) (-1.0d));
        boolean boolean62 = serializableMap55.isEmpty();
        java.util.Collection<java.lang.Object> objCollection63 = serializableMap55.values();
        boolean boolean64 = serializableMap30.containsValue((java.lang.Object) serializableEntrySet54, (java.lang.Object) objCollection63);
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor51);
        org.junit.Assert.assertNotNull(serializableItor52);
        org.junit.Assert.assertNotNull(serializableEntrySet54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test644");
        org.apache.commons.collections4.map.MultiValueMap<java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>>, org.apache.commons.collections4.map.AbstractIterableMap<java.io.Serializable, java.lang.Object>> serializableEntrySetMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>>, org.apache.commons.collections4.map.AbstractIterableMap<java.io.Serializable, java.lang.Object>>();
    }

    @Test
    public void test645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test645");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int11 = serializableMap7.totalSize();
        java.lang.Object obj13 = serializableMap7.get((java.lang.Object) (-1.0d));
        boolean boolean14 = serializableMap7.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean18 = serializableMap15.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean21 = serializableMap15.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int23 = serializableMap15.size((java.lang.Object) (short) -1);
        boolean boolean25 = serializableMap15.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean32 = serializableMap26.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int34 = serializableMap26.size((java.lang.Object) (short) -1);
        boolean boolean36 = serializableMap26.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = serializableMap15.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList40);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj46 = serializableMap43.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        boolean boolean51 = serializableMap15.putAll((java.io.Serializable) serializableMap43, (java.util.Collection<java.lang.String>) strList49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int57 = serializableMap53.totalSize();
        serializableMap52.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap53);
        java.lang.Object obj59 = serializableMap7.replace((java.io.Serializable) serializableMap15, (java.lang.Object) serializableMap52);
        java.lang.Object obj60 = serializableMap0.get(obj59);
        serializableMap0.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test646");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj19 = serializableMap0.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> serializableMap20 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.Put<java.io.Serializable, java.lang.Object>> serializableMap21 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj22 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean29 = serializableMap23.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int31 = serializableMap23.size((java.lang.Object) (short) -1);
        boolean boolean33 = serializableMap23.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int42 = serializableMap34.size((java.lang.Object) (short) -1);
        boolean boolean44 = serializableMap34.equals((java.lang.Object) (short) 1);
        serializableMap34.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int52 = serializableMap48.totalSize();
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj56 = serializableMap48.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj57 = serializableMap34.replace((java.io.Serializable) serializableMap46, (java.lang.Object) 1);
        boolean boolean58 = serializableMap23.equals((java.lang.Object) serializableMap46);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap60.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean66 = serializableMap60.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int68 = serializableMap60.size((java.lang.Object) (short) -1);
        int int70 = serializableMap60.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor71 = serializableMap60.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor72 = serializableMap60.mapIterator();
        boolean boolean73 = serializableMap60.isEmpty();
        java.lang.Object obj74 = serializableMap23.replace((java.io.Serializable) '4', (java.lang.Object) serializableMap60);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean78 = serializableMap75.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj81 = serializableMap75.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj83 = serializableMap75.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap84 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap75);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap85 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor86 = serializableMap85.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet87 = serializableMap85.entrySet();
        int int88 = serializableMap85.totalSize();
        java.util.Set<java.io.Serializable> serializableSet89 = serializableMap85.keySet();
        boolean boolean90 = serializableMap75.containsKey((java.lang.Object) serializableSet89);
        java.lang.Object obj91 = null;
        java.lang.Object obj92 = serializableMap23.putIfAbsent((java.io.Serializable) serializableMap75, obj91);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Iterable<java.lang.Object>> serializableMap93 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap75);
        boolean boolean94 = serializableMap21.remove(obj22, (java.lang.Object) serializableMap75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(serializableMap20);
        org.junit.Assert.assertNotNull(serializableMap21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor71);
        org.junit.Assert.assertNotNull(serializableItor72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(serializableMap84);
        org.junit.Assert.assertNotNull(serializableItor86);
        org.junit.Assert.assertNotNull(serializableEntrySet87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(serializableSet89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNotNull(serializableMap93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test647");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Class<?> wildcardClass34 = serializableMap0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test648");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet2 = serializableMap0.entrySet();
        int int3 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap4 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int9 = serializableMap5.totalSize();
        serializableMap4.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap5);
        java.lang.Object obj13 = serializableMap5.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        boolean boolean15 = serializableMap5.equals((java.lang.Object) (-1));
        java.lang.Object obj16 = serializableMap0.remove((java.lang.Object) boolean15);
        java.lang.String str17 = serializableMap0.toString();
        int int18 = serializableMap0.totalSize();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertNotNull(serializableEntrySet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test649");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean9 = serializableMap5.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection10 = serializableMap5.values();
        java.io.Serializable serializable11 = null;
        java.lang.Object obj13 = serializableMap5.putIfAbsent(serializable11, (java.lang.Object) 0);
        serializableMap5.clear();
        boolean boolean15 = serializableMap5.isEmpty();
        java.util.Collection<java.lang.String> strCollection16 = serializableMap0.getCollection((java.lang.Object) serializableMap5);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean20 = serializableMap17.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean23 = serializableMap17.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean25 = serializableMap17.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int31 = serializableMap27.totalSize();
        serializableMap26.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap27);
        boolean boolean36 = serializableMap27.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        boolean boolean47 = serializableMap37.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap48.size((java.lang.Object) (short) -1);
        boolean boolean58 = serializableMap48.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray61 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        boolean boolean64 = serializableMap37.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList62);
        boolean boolean65 = serializableMap17.putAll((java.io.Serializable) serializableMap27, (java.util.Collection<java.lang.String>) strList62);
        java.lang.String[] strArray69 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        boolean boolean72 = serializableMap0.putAll((java.io.Serializable) serializableMap17, (java.util.Collection<java.lang.String>) strList70);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean76 = serializableMap73.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean79 = serializableMap73.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int81 = serializableMap73.size((java.lang.Object) (short) -1);
        boolean boolean83 = serializableMap73.equals((java.lang.Object) (short) 1);
        serializableMap73.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap85 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap86 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap87 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean90 = serializableMap87.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int91 = serializableMap87.totalSize();
        serializableMap86.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap87);
        java.lang.Object obj95 = serializableMap87.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj96 = serializableMap73.replace((java.io.Serializable) serializableMap85, (java.lang.Object) 1);
        java.util.Collection<java.lang.String> strCollection97 = serializableMap0.getCollection((java.lang.Object) serializableMap85);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strCollection16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 100L + "'", obj95, 100L);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNull(strCollection97);
    }

    @Test
    public void test650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test650");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.io.Serializable serializable6 = null;
        java.lang.Object obj8 = serializableMap0.putIfAbsent(serializable6, (java.lang.Object) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean27 = serializableMap19.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap29 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap29.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int33 = serializableMap29.totalSize();
        serializableMap28.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap29);
        java.lang.Object obj37 = serializableMap29.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj38 = serializableMap19.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor39 = serializableMap10.iterator((java.lang.Object) serializableMap19);
        boolean boolean40 = serializableMap0.containsValue((java.lang.Object) strItor39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int45 = serializableMap41.totalSize();
        java.lang.Object obj47 = serializableMap41.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap48.size((java.lang.Object) (short) -1);
        boolean boolean58 = serializableMap48.equals((java.lang.Object) (short) 1);
        int int59 = serializableMap41.size((java.lang.Object) boolean58);
        java.util.Collection<java.lang.Object> objCollection60 = serializableMap41.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.ArrayList<java.lang.String>> serializableMap61 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap41);
        boolean boolean63 = serializableMap41.equals((java.lang.Object) (short) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj68 = serializableMap65.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection69 = serializableMap65.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap70 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        boolean boolean71 = serializableMap0.replace((java.io.Serializable) serializableMap41, (java.lang.Object) serializableMap64, (java.lang.Object) serializableMap65);
        boolean boolean72 = serializableMap41.isEmpty();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor73 = serializableMap41.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor74 = serializableMap41.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(serializableMap61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertNotNull(serializableMap70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(serializableEntryItor73);
        org.junit.Assert.assertNotNull(serializableItor74);
    }

    @Test
    public void test651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test651");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractCollection<java.lang.String>> serializableMap10 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap12.size();
        java.util.Collection<java.lang.Object> objCollection20 = serializableMap12.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap21.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection26 = serializableMap21.values();
        java.io.Serializable serializable27 = null;
        java.lang.Object obj29 = serializableMap21.putIfAbsent(serializable27, (java.lang.Object) 0);
        serializableMap21.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        serializableMap31.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int49 = serializableMap45.totalSize();
        serializableMap44.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap45);
        java.lang.Object obj53 = serializableMap45.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj54 = serializableMap31.replace((java.io.Serializable) serializableMap43, (java.lang.Object) 1);
        java.lang.Object obj55 = serializableMap21.remove((java.lang.Object) serializableMap31);
        java.util.Iterator<java.lang.String> strItor56 = serializableMap12.iterator(obj55);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor57 = serializableMap12.iterator();
        java.lang.Object obj58 = serializableMap10.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) serializableEntryItor57);
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableMap10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 100L + "'", obj53, 100L);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertNotNull(serializableEntryItor57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test652");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        int int18 = serializableMap0.size((java.lang.Object) boolean17);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int25 = serializableMap21.totalSize();
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap21);
        java.lang.Object obj29 = serializableMap20.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean33 = serializableMap30.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean36 = serializableMap30.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int38 = serializableMap30.size((java.lang.Object) (short) -1);
        boolean boolean39 = serializableMap20.containsValue((java.lang.Object) serializableMap30);
        boolean boolean40 = serializableMap0.containsValue((java.lang.Object) '4', (java.lang.Object) boolean39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean47 = serializableMap41.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int49 = serializableMap41.size((java.lang.Object) (short) -1);
        int int51 = serializableMap41.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int57 = serializableMap53.totalSize();
        serializableMap52.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap53);
        java.lang.Object obj61 = serializableMap53.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap41.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap53);
        java.lang.Object obj63 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor64 = serializableMap41.iterator(obj63);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj71 = serializableMap65.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj73 = serializableMap65.get((java.lang.Object) 100.0d);
        serializableMap41.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor76 = serializableMap65.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0d + "'", obj29, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(serializableEntryItor76);
    }

    @Test
    public void test653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test653");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        boolean boolean10 = serializableMap1.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap11 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.util.Collection<java.lang.String> strCollection13 = serializableMap1.getCollection((java.lang.Object) "{}");
        int int14 = serializableMap1.size();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap15 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serializableMap11);
        org.junit.Assert.assertNull(strCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(serializableMap15);
    }

    @Test
    public void test654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test654");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor5 = serializableMap0.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet6 = serializableMap0.entrySet();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor7 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.MultiMap<java.io.Serializable, java.lang.String>> serializableMap8 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        java.util.Set<java.io.Serializable> serializableSet9 = serializableMap0.keySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serializableItor5);
        org.junit.Assert.assertNotNull(serializableEntrySet6);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableMap8);
        org.junit.Assert.assertNotNull(serializableSet9);
    }

    @Test
    public void test655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test655");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        boolean boolean18 = serializableMap8.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = serializableMap8.putAll((java.io.Serializable) serializableMap36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj52 = serializableMap0.replace((java.io.Serializable) serializableMap8, (java.lang.Object) serializableMap45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean59 = serializableMap53.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int61 = serializableMap53.size((java.lang.Object) (short) -1);
        int int63 = serializableMap53.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        java.lang.Object obj73 = serializableMap65.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj82 = serializableMap76.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj83 = serializableMap53.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int84 = serializableMap8.size(obj83);
        serializableMap8.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap86 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor87 = serializableMap86.mapIterator();
        boolean boolean88 = serializableMap8.containsKey((java.lang.Object) serializableMap86);
        boolean boolean89 = serializableMap8.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 1 + "'", obj83, (byte) 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(serializableItor87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test656");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean9 = serializableMap5.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection10 = serializableMap5.values();
        java.io.Serializable serializable11 = null;
        java.lang.Object obj13 = serializableMap5.putIfAbsent(serializable11, (java.lang.Object) 0);
        serializableMap5.clear();
        boolean boolean15 = serializableMap5.isEmpty();
        java.util.Collection<java.lang.String> strCollection16 = serializableMap0.getCollection((java.lang.Object) serializableMap5);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean20 = serializableMap17.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj23 = serializableMap17.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj25 = serializableMap17.get((java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int30 = serializableMap26.totalSize();
        java.lang.Object obj32 = serializableMap26.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int41 = serializableMap33.size((java.lang.Object) (short) -1);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (short) 1);
        int int44 = serializableMap26.size((java.lang.Object) boolean43);
        java.util.Collection<java.lang.Object> objCollection45 = serializableMap26.values();
        boolean boolean47 = serializableMap17.removeMapping((java.lang.Object) serializableMap26, (java.lang.Object) 100);
        java.lang.Object obj49 = serializableMap0.putIfAbsent((java.io.Serializable) serializableMap17, (java.lang.Object) 1L);
        java.util.Set<java.io.Serializable> serializableSet50 = serializableMap0.keySet();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor51 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strCollection16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1L + "'", obj49, 1L);
        org.junit.Assert.assertNotNull(serializableSet50);
        org.junit.Assert.assertNotNull(serializableEntryItor51);
    }

    @Test
    public void test657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test657");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj29 = serializableMap23.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj30 = serializableMap0.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int31 = serializableMap0.totalSize();
        java.lang.String str32 = serializableMap0.toString();
        int int33 = serializableMap0.size();
        boolean boolean34 = serializableMap0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 1 + "'", obj30, (byte) 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{1=[100]}" + "'", str32, "{1=[100]}");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test658");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        java.lang.Object obj37 = serializableMap0.remove((java.lang.Object) (-1.0d));
        boolean boolean38 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean43 = serializableMap39.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection44 = serializableMap39.values();
        java.io.Serializable serializable45 = null;
        java.lang.Object obj47 = serializableMap39.putIfAbsent(serializable45, (java.lang.Object) 0);
        serializableMap39.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int57 = serializableMap49.size((java.lang.Object) (short) -1);
        boolean boolean59 = serializableMap49.equals((java.lang.Object) (short) 1);
        serializableMap49.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean66 = serializableMap63.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int67 = serializableMap63.totalSize();
        serializableMap62.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap63);
        java.lang.Object obj71 = serializableMap63.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj72 = serializableMap49.replace((java.io.Serializable) serializableMap61, (java.lang.Object) 1);
        java.lang.Object obj73 = serializableMap39.remove((java.lang.Object) serializableMap49);
        java.lang.String str74 = serializableMap39.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Iterable<java.lang.Object>> serializableMap75 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int80 = serializableMap76.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean85 = serializableMap81.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection86 = serializableMap81.values();
        java.io.Serializable serializable87 = null;
        java.lang.Object obj89 = serializableMap81.putIfAbsent(serializable87, (java.lang.Object) 0);
        serializableMap81.clear();
        boolean boolean91 = serializableMap81.isEmpty();
        java.util.Collection<java.lang.String> strCollection92 = serializableMap76.getCollection((java.lang.Object) serializableMap81);
        int int93 = serializableMap81.size();
        boolean boolean94 = serializableMap0.remove((java.lang.Object) serializableMap39, (java.lang.Object) int93);
        java.lang.Class<?> wildcardClass95 = serializableMap0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100L + "'", obj71, 100L);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{}" + "'", str74, "{}");
        org.junit.Assert.assertNotNull(serializableMap75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 0 + "'", obj89, 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(strCollection92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test659");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = serializableMap0.remove((java.lang.Object) serializableMap7, obj18);
        java.util.Collection<java.lang.Object> objCollection21 = serializableMap7.values();
        boolean boolean22 = serializableMap7.isEmpty();
        int int23 = serializableMap7.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test660");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractCollection<java.lang.String>> serializableMap10 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj17 = serializableMap11.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj19 = serializableMap11.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection20 = serializableMap11.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        int int31 = serializableMap21.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int37 = serializableMap33.totalSize();
        serializableMap32.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj41 = serializableMap33.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj43 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor44 = serializableMap21.iterator(obj43);
        java.util.Set<java.io.Serializable> serializableSet45 = serializableMap21.keySet();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap21);
        java.util.Collection<java.lang.String> strCollection47 = serializableMap0.getCollection((java.lang.Object) serializableMap11);
        java.util.Set<java.io.Serializable> serializableSet48 = serializableMap11.keySet();
        java.io.Serializable serializable49 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean56 = serializableMap50.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int58 = serializableMap50.size((java.lang.Object) (short) -1);
        int int60 = serializableMap50.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int66 = serializableMap62.totalSize();
        serializableMap61.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj70 = serializableMap62.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap50.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj72 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor73 = serializableMap50.iterator(obj72);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap74 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean77 = serializableMap74.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj80 = serializableMap74.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj82 = serializableMap74.get((java.lang.Object) 100.0d);
        serializableMap50.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap74);
        boolean boolean84 = serializableMap74.isEmpty();
        java.lang.Object obj85 = serializableMap11.replace(serializable49, (java.lang.Object) serializableMap74);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor86 = serializableMap74.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableMap10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(serializableSet45);
        org.junit.Assert.assertNull(strCollection47);
        org.junit.Assert.assertNotNull(serializableSet48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(serializableEntryItor86);
    }

    @Test
    public void test661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test661");
        org.apache.commons.collections4.map.MultiValueMap<java.util.Collection<java.lang.Object>, java.util.AbstractList<java.lang.String>> objCollectionMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.util.Collection<java.lang.Object>, java.util.AbstractList<java.lang.String>>();
    }

    @Test
    public void test662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test662");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = serializableMap0.remove((java.lang.Object) serializableMap7, obj18);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        boolean boolean31 = serializableMap21.equals((java.lang.Object) (short) 1);
        serializableMap21.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj44 = serializableMap21.replace((java.io.Serializable) serializableMap33, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor45 = serializableMap33.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean52 = serializableMap46.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int54 = serializableMap46.size((java.lang.Object) (short) -1);
        boolean boolean56 = serializableMap46.equals((java.lang.Object) (short) 1);
        serializableMap46.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj67 = serializableMap59.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean76 = serializableMap68.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap77 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean81 = serializableMap78.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int82 = serializableMap78.totalSize();
        serializableMap77.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap78);
        java.lang.Object obj86 = serializableMap78.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj87 = serializableMap68.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor88 = serializableMap59.iterator((java.lang.Object) serializableMap68);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor89 = serializableMap59.iterator();
        java.lang.Object obj90 = serializableMap33.putIfAbsent((java.io.Serializable) serializableMap46, (java.lang.Object) serializableEntryItor89);
        boolean boolean91 = serializableMap33.isEmpty();
        int int92 = serializableMap0.size((java.lang.Object) serializableMap33);
        int int93 = serializableMap33.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(serializableItor45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(serializableEntryItor89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test663");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.io.Serializable serializable6 = null;
        java.lang.Object obj8 = serializableMap0.putIfAbsent(serializable6, (java.lang.Object) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean15 = serializableMap9.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int17 = serializableMap9.size((java.lang.Object) (short) -1);
        boolean boolean19 = serializableMap9.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap9.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        boolean boolean47 = serializableMap37.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap48.size((java.lang.Object) (short) -1);
        boolean boolean58 = serializableMap48.equals((java.lang.Object) (short) 1);
        serializableMap48.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int66 = serializableMap62.totalSize();
        serializableMap61.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj70 = serializableMap62.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj71 = serializableMap48.replace((java.io.Serializable) serializableMap60, (java.lang.Object) 1);
        boolean boolean72 = serializableMap37.equals((java.lang.Object) serializableMap60);
        boolean boolean74 = serializableMap9.containsValue((java.lang.Object) serializableMap37, (java.lang.Object) "");
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = serializableMap0.containsValue((java.lang.Object) serializableMap9, obj75);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap79 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean82 = serializableMap79.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int83 = serializableMap79.totalSize();
        serializableMap78.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap79);
        java.lang.Object obj87 = serializableMap79.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap79.clear();
        serializableMap79.clear();
        boolean boolean90 = serializableMap9.containsValue((java.lang.Object) serializableMap79);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor91 = serializableMap9.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 100L + "'", obj87, 100L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(serializableItor91);
    }

    @Test
    public void test664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test664");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        int int34 = serializableMap24.totalSize();
        serializableMap24.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int41 = serializableMap37.totalSize();
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap37);
        java.lang.Object obj45 = serializableMap37.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean52 = serializableMap46.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean54 = serializableMap46.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean59 = serializableMap56.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int60 = serializableMap56.totalSize();
        serializableMap55.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap56);
        java.lang.Object obj64 = serializableMap56.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj65 = serializableMap46.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor66 = serializableMap37.iterator((java.lang.Object) serializableMap46);
        java.util.Set<java.io.Serializable> serializableSet67 = serializableMap37.keySet();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet68 = serializableMap37.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap69 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean73 = serializableMap70.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int74 = serializableMap70.totalSize();
        serializableMap69.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap70);
        java.lang.Object obj78 = serializableMap69.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap79 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean82 = serializableMap79.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean85 = serializableMap79.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int87 = serializableMap79.size((java.lang.Object) (short) -1);
        boolean boolean88 = serializableMap69.containsValue((java.lang.Object) serializableMap79);
        boolean boolean89 = serializableMap79.isEmpty();
        boolean boolean90 = serializableMap79.isEmpty();
        java.lang.Object obj91 = serializableMap24.putIfAbsent((java.io.Serializable) serializableMap37, (java.lang.Object) serializableMap79);
        java.lang.Object obj92 = null;
        java.util.Collection<java.lang.String> strCollection93 = serializableMap79.getCollection(obj92);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 100L + "'", obj64, 100L);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(serializableSet67);
        org.junit.Assert.assertNotNull(serializableEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 10.0d + "'", obj78, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{}");
        org.junit.Assert.assertNull(strCollection93);
    }

    @Test
    public void test665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test665");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap1.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj15 = serializableMap1.remove((java.lang.Object) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test666");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        int int18 = serializableMap0.size((java.lang.Object) boolean17);
        java.lang.String str19 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.lang.reflect.AnnotatedElement, java.lang.Iterable<java.lang.Object>> annotatedElementMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.reflect.AnnotatedElement, java.lang.Iterable<java.lang.Object>>();
        boolean boolean21 = serializableMap0.containsValue((java.lang.Object) annotatedElementMap20);
        java.util.Collection<java.lang.Object> objCollection22 = serializableMap0.values();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor23 = serializableMap0.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(serializableItor23);
    }

    @Test
    public void test667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test667");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj12 = serializableMap9.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap13.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection18 = serializableMap13.values();
        boolean boolean19 = serializableMap0.remove(obj12, (java.lang.Object) serializableMap13);
        java.io.Serializable serializable20 = null;
        java.lang.Object obj22 = serializableMap0.put(serializable20, (java.lang.Object) (byte) 0);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor23 = serializableMap0.iterator();
        java.util.Collection<java.lang.Object> objCollection24 = serializableMap0.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 0 + "'", obj22, (byte) 0);
        org.junit.Assert.assertNotNull(serializableEntryItor23);
        org.junit.Assert.assertNotNull(objCollection24);
    }

    @Test
    public void test668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test668");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        serializableMap19.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj28 = serializableMap20.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj29 = serializableMap10.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor30 = serializableMap1.iterator((java.lang.Object) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        serializableMap31.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj40 = serializableMap31.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean47 = serializableMap41.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int49 = serializableMap41.size((java.lang.Object) (short) -1);
        boolean boolean50 = serializableMap31.containsValue((java.lang.Object) serializableMap41);
        boolean boolean51 = serializableMap41.isEmpty();
        java.util.Iterator<java.lang.String> strItor52 = serializableMap1.iterator((java.lang.Object) boolean51);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int58 = serializableMap54.totalSize();
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        java.lang.Object obj62 = serializableMap53.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean66 = serializableMap63.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean69 = serializableMap63.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int71 = serializableMap63.size((java.lang.Object) (short) -1);
        boolean boolean72 = serializableMap53.containsValue((java.lang.Object) serializableMap63);
        boolean boolean73 = serializableMap63.isEmpty();
        java.util.Collection<java.lang.String> strCollection74 = serializableMap1.getCollection((java.lang.Object) serializableMap63);
        int int75 = serializableMap1.size();
        int int76 = serializableMap1.totalSize();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0d + "'", obj40, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0d + "'", obj62, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strCollection74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
    }

    @Test
    public void test669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test669");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.String str4 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor6 = serializableMap5.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean24 = serializableMap18.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int26 = serializableMap18.size((java.lang.Object) (short) -1);
        boolean boolean28 = serializableMap18.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        boolean boolean34 = serializableMap7.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList32);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj38 = serializableMap35.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        boolean boolean43 = serializableMap7.putAll((java.io.Serializable) serializableMap35, (java.util.Collection<java.lang.String>) strList41);
        java.lang.Object obj44 = serializableMap5.get((java.lang.Object) serializableMap35);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean51 = serializableMap45.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int53 = serializableMap45.size((java.lang.Object) (short) -1);
        int int55 = serializableMap45.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj67 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor68 = serializableMap45.iterator(obj67);
        java.lang.Object obj69 = serializableMap5.remove(obj67);
        int int70 = serializableMap5.size();
        boolean boolean71 = serializableMap0.containsValue((java.lang.Object) serializableMap5);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor72 = serializableMap5.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(serializableItor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(serializableItor72);
    }

    @Test
    public void test670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test670");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor10 = serializableMap9.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        boolean boolean32 = serializableMap22.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = serializableMap11.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj42 = serializableMap39.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap11.putAll((java.io.Serializable) serializableMap39, (java.util.Collection<java.lang.String>) strList45);
        java.lang.Object obj48 = serializableMap9.get((java.lang.Object) serializableMap39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj52 = serializableMap49.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection53 = serializableMap49.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap54 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap49);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor55 = serializableMap54.mapIterator();
        java.lang.Object obj56 = serializableMap9.get((java.lang.Object) serializableItor55);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj63 = serializableMap57.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj65 = serializableMap57.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection66 = serializableMap57.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean70 = serializableMap67.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean73 = serializableMap67.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int75 = serializableMap67.size((java.lang.Object) (short) -1);
        int int77 = serializableMap67.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap79 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean82 = serializableMap79.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int83 = serializableMap79.totalSize();
        serializableMap78.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap79);
        java.lang.Object obj87 = serializableMap79.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap67.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap79);
        java.lang.Object obj89 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor90 = serializableMap67.iterator(obj89);
        java.util.Set<java.io.Serializable> serializableSet91 = serializableMap67.keySet();
        serializableMap57.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap67);
        java.util.Collection<java.lang.Object> objCollection93 = serializableMap67.values();
        java.lang.Object obj94 = serializableMap9.get((java.lang.Object) objCollection93);
        java.util.Iterator<java.lang.String> strItor95 = serializableMap0.iterator((java.lang.Object) serializableMap9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableItor10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(serializableMap54);
        org.junit.Assert.assertNotNull(serializableItor55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 100L + "'", obj87, 100L);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertNotNull(serializableSet91);
        org.junit.Assert.assertNotNull(objCollection93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(strItor95);
    }

    @Test
    public void test671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test671");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        serializableMap19.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj28 = serializableMap20.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap29 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap29.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean35 = serializableMap29.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean37 = serializableMap29.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean42 = serializableMap39.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int43 = serializableMap39.totalSize();
        serializableMap38.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap39);
        java.lang.Object obj47 = serializableMap39.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj48 = serializableMap29.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor49 = serializableMap20.iterator((java.lang.Object) serializableMap29);
        java.lang.Object obj50 = serializableMap7.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap51.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection56 = serializableMap51.values();
        java.io.Serializable serializable57 = null;
        java.lang.Object obj59 = serializableMap51.putIfAbsent(serializable57, (java.lang.Object) 0);
        serializableMap51.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap61.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection66 = serializableMap61.values();
        boolean boolean67 = serializableMap7.containsValue((java.lang.Object) serializableMap51, (java.lang.Object) objCollection66);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet68 = serializableMap51.entrySet();
        boolean boolean69 = serializableMap0.containsValue((java.lang.Object) serializableMap51);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.reflect.AnnotatedElement, java.lang.Iterable<java.lang.Object>> annotatedElementMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.reflect.AnnotatedElement, java.lang.Iterable<java.lang.Object>>();
        java.lang.Object obj71 = serializableMap51.remove((java.lang.Object) annotatedElementMap70);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0 + "'", obj59, 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test672");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        boolean boolean27 = serializableMap0.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj31 = serializableMap28.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap0.putAll((java.io.Serializable) serializableMap28, (java.util.Collection<java.lang.String>) strList34);
        int int37 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor39 = serializableMap38.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet40 = serializableMap38.entrySet();
        int int41 = serializableMap38.totalSize();
        java.util.Set<java.io.Serializable> serializableSet42 = serializableMap38.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean49 = serializableMap43.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int51 = serializableMap43.size((java.lang.Object) (short) -1);
        int int53 = serializableMap43.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int59 = serializableMap55.totalSize();
        serializableMap54.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap55);
        java.lang.Object obj63 = serializableMap55.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap55);
        java.lang.Object obj65 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor66 = serializableMap43.iterator(obj65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean70 = serializableMap67.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj73 = serializableMap67.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj75 = serializableMap67.get((java.lang.Object) 100.0d);
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap67);
        java.lang.Object obj77 = null;
        java.util.Iterator<java.lang.String> strItor78 = serializableMap43.iterator(obj77);
        java.lang.Object obj79 = serializableMap38.get((java.lang.Object) strItor78);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean82 = serializableMap80.equals((java.lang.Object) (short) 10);
        java.util.Set<java.io.Serializable> serializableSet83 = serializableMap80.keySet();
        java.lang.Object obj84 = serializableMap0.put((java.io.Serializable) serializableMap38, (java.lang.Object) serializableMap80);
        java.lang.Class<?> wildcardClass85 = serializableMap38.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertNotNull(serializableItor39);
        org.junit.Assert.assertNotNull(serializableEntrySet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(serializableSet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(serializableSet83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "{}");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test673");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        serializableMap19.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj28 = serializableMap20.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj29 = serializableMap10.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor30 = serializableMap1.iterator((java.lang.Object) serializableMap10);
        serializableMap1.clear();
        java.util.Set<java.io.Serializable> serializableSet32 = serializableMap1.keySet();
        int int33 = serializableMap1.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Map<java.io.Serializable, java.lang.Object>> serializableMap34 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.util.Set<java.io.Serializable> serializableSet35 = serializableMap34.keySet();
        java.lang.Class<?> wildcardClass36 = serializableMap34.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertNotNull(serializableSet32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(serializableMap34);
        org.junit.Assert.assertNotNull(serializableSet35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test674");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int42 = serializableMap34.size((java.lang.Object) (short) -1);
        int int44 = serializableMap34.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor45 = serializableMap34.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor46 = serializableMap34.mapIterator();
        serializableMap34.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet48 = serializableMap34.entrySet();
        java.lang.Object obj49 = serializableMap24.get((java.lang.Object) serializableEntrySet48);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj53 = serializableMap50.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection54 = serializableMap50.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap55 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet56 = serializableMap50.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap57.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int63 = serializableMap57.size((java.lang.Object) 10);
        java.lang.Object obj64 = serializableMap24.put((java.io.Serializable) serializableMap50, (java.lang.Object) int63);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean67 = serializableMap65.equals((java.lang.Object) (short) 10);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet68 = serializableMap65.entrySet();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor69 = serializableMap65.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.reflect.Type> serializableMap70 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        java.util.Collection<java.lang.String> strCollection71 = serializableMap50.getCollection((java.lang.Object) serializableMap70);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor45);
        org.junit.Assert.assertNotNull(serializableItor46);
        org.junit.Assert.assertNotNull(serializableEntrySet48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(serializableMap55);
        org.junit.Assert.assertNotNull(serializableEntrySet56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet68);
        org.junit.Assert.assertNotNull(serializableItor69);
        org.junit.Assert.assertNotNull(serializableMap70);
        org.junit.Assert.assertNull(strCollection71);
    }

    @Test
    public void test675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test675");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) 100.0d);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor9 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap19.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection24 = serializableMap19.values();
        java.io.Serializable serializable25 = null;
        java.lang.Object obj27 = serializableMap19.putIfAbsent(serializable25, (java.lang.Object) 0);
        java.lang.Object obj28 = null;
        boolean boolean29 = serializableMap10.remove((java.lang.Object) 0, obj28);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean33 = serializableMap30.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean36 = serializableMap30.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int38 = serializableMap30.size((java.lang.Object) (short) -1);
        int int40 = serializableMap30.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int47 = serializableMap43.totalSize();
        serializableMap42.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap43);
        java.lang.Object obj51 = serializableMap43.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean58 = serializableMap52.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean60 = serializableMap52.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int66 = serializableMap62.totalSize();
        serializableMap61.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj70 = serializableMap62.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj71 = serializableMap52.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor72 = serializableMap43.iterator((java.lang.Object) serializableMap52);
        java.lang.Object obj73 = serializableMap30.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor72);
        int int74 = serializableMap10.size((java.lang.Object) 1);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor76 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(serializableItor9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0 + "'", obj27, 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 100L + "'", obj51, 100L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor76);
    }

    @Test
    public void test676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test676");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int10 = serializableMap2.size((java.lang.Object) (short) -1);
        boolean boolean12 = serializableMap2.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        boolean boolean23 = serializableMap13.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = serializableMap2.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList27);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj33 = serializableMap30.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = serializableMap2.putAll((java.io.Serializable) serializableMap30, (java.util.Collection<java.lang.String>) strList36);
        java.lang.Object obj39 = serializableMap0.get((java.lang.Object) serializableMap30);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor40 = serializableMap0.mapIterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor41 = serializableMap0.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean45 = serializableMap42.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int46 = serializableMap42.totalSize();
        java.lang.Object obj48 = serializableMap42.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int57 = serializableMap49.size((java.lang.Object) (short) -1);
        int int59 = serializableMap49.size((java.lang.Object) (byte) 1);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = serializableMap42.remove((java.lang.Object) serializableMap49, obj60);
        int int63 = serializableMap42.size();
        java.util.Iterator<java.lang.String> strItor64 = serializableMap0.iterator((java.lang.Object) serializableMap42);
        int int65 = serializableMap42.size();
        java.lang.String str66 = serializableMap42.toString();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(serializableItor40);
        org.junit.Assert.assertNotNull(serializableEntryItor41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
    }

    @Test
    public void test677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test677");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int26 = serializableMap22.totalSize();
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj30 = serializableMap22.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap10.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj32 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor33 = serializableMap10.iterator(obj32);
        java.util.Set<java.io.Serializable> serializableSet34 = serializableMap10.keySet();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.util.Collection<java.lang.Object> objCollection36 = serializableMap10.values();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor37 = serializableMap10.iterator();
        int int38 = serializableMap10.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(serializableEntryItor37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test678");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        java.lang.String str36 = serializableMap23.toString();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet37 = serializableMap23.entrySet();
        int int38 = serializableMap23.size();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean42 = serializableMap39.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int43 = serializableMap39.totalSize();
        java.lang.Object obj45 = serializableMap39.get((java.lang.Object) (-1.0d));
        boolean boolean46 = serializableMap23.containsKey(obj45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap23);
        java.lang.Class<?> wildcardClass48 = serializableMap47.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertNotNull(serializableEntrySet37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serializableMap47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test679");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        boolean boolean18 = serializableMap8.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = serializableMap8.putAll((java.io.Serializable) serializableMap36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj52 = serializableMap0.replace((java.io.Serializable) serializableMap8, (java.lang.Object) serializableMap45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean59 = serializableMap53.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int61 = serializableMap53.size((java.lang.Object) (short) -1);
        int int63 = serializableMap53.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        java.lang.Object obj73 = serializableMap65.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj82 = serializableMap76.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj83 = serializableMap53.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int84 = serializableMap8.size(obj83);
        serializableMap8.clear();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor86 = serializableMap8.mapIterator();
        java.lang.String str87 = serializableMap8.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 1 + "'", obj83, (byte) 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(serializableItor86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{}" + "'", str87, "{}");
    }

    @Test
    public void test680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test680");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        boolean boolean18 = serializableMap8.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = serializableMap8.putAll((java.io.Serializable) serializableMap36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj52 = serializableMap0.replace((java.io.Serializable) serializableMap8, (java.lang.Object) serializableMap45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean59 = serializableMap53.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int61 = serializableMap53.size((java.lang.Object) (short) -1);
        int int63 = serializableMap53.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        java.lang.Object obj73 = serializableMap65.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj82 = serializableMap76.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj83 = serializableMap53.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int84 = serializableMap8.size(obj83);
        boolean boolean85 = serializableMap8.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap86 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean88 = serializableMap86.equals((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.Iterator<java.io.Serializable>> objMap89 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.Iterator<java.io.Serializable>>();
        java.lang.Object obj90 = serializableMap86.get((java.lang.Object) objMap89);
        boolean boolean91 = serializableMap8.equals((java.lang.Object) serializableMap86);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 1 + "'", obj83, (byte) 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test681");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap9.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection14 = serializableMap9.values();
        java.io.Serializable serializable15 = null;
        java.lang.Object obj17 = serializableMap9.putIfAbsent(serializable15, (java.lang.Object) 0);
        java.lang.Object obj18 = null;
        boolean boolean19 = serializableMap0.remove((java.lang.Object) 0, obj18);
        int int20 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        boolean boolean31 = serializableMap21.equals((java.lang.Object) (short) 1);
        serializableMap21.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj44 = serializableMap21.replace((java.io.Serializable) serializableMap33, (java.lang.Object) 1);
        java.lang.String str45 = serializableMap21.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int51 = serializableMap47.totalSize();
        serializableMap46.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        boolean boolean56 = serializableMap47.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap57 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>> wildcardClassMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>>();
        java.lang.Object obj59 = serializableMap21.getOrDefault((java.lang.Object) serializableMap47, (java.lang.Object) wildcardClassMap58);
        int int60 = serializableMap0.size((java.lang.Object) serializableMap47);
        java.util.Set<java.io.Serializable> serializableSet61 = serializableMap47.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{}" + "'", str45, "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(serializableMap57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{}");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(serializableSet61);
    }

    @Test
    public void test682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test682");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean20 = serializableMap12.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj24 = serializableMap21.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap25.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection30 = serializableMap25.values();
        boolean boolean31 = serializableMap12.remove(obj24, (java.lang.Object) serializableMap25);
        serializableMap25.clear();
        java.lang.Object obj33 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int38 = serializableMap34.totalSize();
        java.lang.Object obj40 = serializableMap34.get((java.lang.Object) (-1.0d));
        boolean boolean41 = serializableMap34.isEmpty();
        int int42 = serializableMap34.totalSize();
        int int43 = serializableMap34.size();
        serializableMap34.clear();
        java.util.Set<java.io.Serializable> serializableSet45 = serializableMap34.keySet();
        int int46 = serializableMap34.size();
        boolean boolean47 = serializableMap0.replace((java.io.Serializable) serializableMap25, obj33, (java.lang.Object) int46);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(serializableSet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test683");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int12 = serializableMap8.totalSize();
        java.lang.Object obj14 = serializableMap8.get((java.lang.Object) (-1.0d));
        boolean boolean15 = serializableMap8.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap16 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean19 = serializableMap16.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean22 = serializableMap16.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean24 = serializableMap16.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int30 = serializableMap26.totalSize();
        serializableMap25.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        java.lang.Object obj34 = serializableMap25.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean41 = serializableMap35.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int43 = serializableMap35.size((java.lang.Object) (short) -1);
        boolean boolean44 = serializableMap25.containsValue((java.lang.Object) serializableMap35);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj54 = serializableMap46.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean61 = serializableMap55.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean63 = serializableMap55.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        java.lang.Object obj73 = serializableMap65.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj74 = serializableMap55.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor75 = serializableMap46.iterator((java.lang.Object) serializableMap55);
        serializableMap46.clear();
        boolean boolean77 = serializableMap8.replace((java.io.Serializable) boolean24, (java.lang.Object) serializableMap35, (java.lang.Object) serializableMap46);
        boolean boolean78 = serializableMap35.isEmpty();
        boolean boolean79 = serializableMap0.containsValue((java.lang.Object) (byte) 10, (java.lang.Object) serializableMap35);
        java.lang.Object obj81 = serializableMap35.remove((java.lang.Object) (-1L));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0d + "'", obj34, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test684");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj19 = serializableMap0.get((java.lang.Object) 1);
        int int20 = serializableMap0.size();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj24 = serializableMap21.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection25 = serializableMap21.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean32 = serializableMap26.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int34 = serializableMap26.size((java.lang.Object) (short) -1);
        int int36 = serializableMap26.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean42 = serializableMap39.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int43 = serializableMap39.totalSize();
        serializableMap38.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap39);
        java.lang.Object obj47 = serializableMap39.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean56 = serializableMap48.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int62 = serializableMap58.totalSize();
        serializableMap57.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap58);
        java.lang.Object obj66 = serializableMap58.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj67 = serializableMap48.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor68 = serializableMap39.iterator((java.lang.Object) serializableMap48);
        java.lang.Object obj69 = serializableMap26.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor68);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean74 = serializableMap71.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean77 = serializableMap71.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int78 = serializableMap71.size();
        boolean boolean79 = serializableMap21.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap71);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> serializableMap80 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap71);
        java.lang.Object obj81 = serializableMap0.get((java.lang.Object) serializableMap80);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(serializableMap80);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test685");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor8 = serializableMap7.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean15 = serializableMap9.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int17 = serializableMap9.size((java.lang.Object) (short) -1);
        boolean boolean19 = serializableMap9.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap9.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj40 = serializableMap37.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        boolean boolean45 = serializableMap9.putAll((java.io.Serializable) serializableMap37, (java.util.Collection<java.lang.String>) strList43);
        java.lang.Object obj46 = serializableMap7.get((java.lang.Object) serializableMap37);
        serializableMap37.clear();
        boolean boolean48 = serializableMap0.equals((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int54 = serializableMap50.totalSize();
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        boolean boolean59 = serializableMap50.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Iterator<java.io.Serializable>> serializableMap60 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int65 = serializableMap61.totalSize();
        java.lang.Object obj67 = serializableMap61.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int76 = serializableMap68.size((java.lang.Object) (short) -1);
        boolean boolean78 = serializableMap68.equals((java.lang.Object) (short) 1);
        int int79 = serializableMap61.size((java.lang.Object) boolean78);
        java.lang.String str80 = serializableMap61.toString();
        java.lang.String[] strArray85 = new java.lang.String[] { "{}", "", "" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        boolean boolean88 = serializableMap61.putAll((java.io.Serializable) 1.0d, (java.util.Collection<java.lang.String>) strList86);
        boolean boolean89 = serializableMap0.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList86);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor90 = serializableMap50.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(serializableMap60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "{}" + "'", str80, "{}");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(serializableEntryItor90);
    }

    @Test
    public void test686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test686");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap4 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean7 = serializableMap4.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean10 = serializableMap4.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int12 = serializableMap4.size((java.lang.Object) (short) -1);
        int int14 = serializableMap4.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap16 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean19 = serializableMap16.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int20 = serializableMap16.totalSize();
        serializableMap15.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap16);
        java.lang.Object obj24 = serializableMap16.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap4.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap16);
        java.lang.Object obj26 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor27 = serializableMap4.iterator(obj26);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean31 = serializableMap28.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj34 = serializableMap28.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj36 = serializableMap28.get((java.lang.Object) 100.0d);
        serializableMap4.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap28);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        java.lang.Object obj44 = serializableMap38.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean51 = serializableMap45.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int53 = serializableMap45.size((java.lang.Object) (short) -1);
        boolean boolean55 = serializableMap45.equals((java.lang.Object) (short) 1);
        int int56 = serializableMap38.size((java.lang.Object) boolean55);
        java.util.Collection<java.lang.Object> objCollection57 = serializableMap38.values();
        java.lang.Object obj58 = serializableMap0.replace((java.io.Serializable) serializableMap28, (java.lang.Object) objCollection57);
        java.util.Set<java.io.Serializable> serializableSet59 = serializableMap28.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> serializableMap60 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap28);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(serializableSet59);
        org.junit.Assert.assertNotNull(serializableMap60);
    }

    @Test
    public void test687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test687");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        java.lang.String str24 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int30 = serializableMap26.totalSize();
        serializableMap25.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        boolean boolean35 = serializableMap26.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap36 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>> wildcardClassMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>>();
        java.lang.Object obj38 = serializableMap0.getOrDefault((java.lang.Object) serializableMap26, (java.lang.Object) wildcardClassMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap40 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean43 = serializableMap40.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int44 = serializableMap40.totalSize();
        serializableMap39.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap40);
        java.lang.Object obj48 = serializableMap40.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean57 = serializableMap49.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj67 = serializableMap59.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj68 = serializableMap49.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor69 = serializableMap40.iterator((java.lang.Object) serializableMap49);
        java.lang.Object obj70 = serializableMap26.get((java.lang.Object) serializableMap49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.reflect.AnnotatedElement> serializableMap71 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(serializableMap36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(serializableMap71);
    }

    @Test
    public void test688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test688");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = serializableMap0.remove((java.lang.Object) serializableMap7, obj18);
        java.lang.String str21 = serializableMap7.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap22 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap7);
        java.lang.Class<?> wildcardClass23 = serializableMap7.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNotNull(serializableMap22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test689");
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, java.lang.reflect.Type> wildcardClassMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, java.lang.reflect.Type>();
    }

    @Test
    public void test690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test690");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        int int34 = serializableMap24.totalSize();
        serializableMap24.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        int int47 = serializableMap37.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int53 = serializableMap49.totalSize();
        serializableMap48.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap49);
        java.lang.Object obj57 = serializableMap49.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap49);
        java.lang.Object obj59 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor60 = serializableMap37.iterator(obj59);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj67 = serializableMap61.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj69 = serializableMap61.get((java.lang.Object) 100.0d);
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap61);
        int int71 = serializableMap36.size((java.lang.Object) serializableMap61);
        boolean boolean72 = serializableMap36.isEmpty();
        java.util.Collection<java.lang.Object> objCollection73 = serializableMap36.values();
        boolean boolean74 = serializableMap24.equals((java.lang.Object) objCollection73);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertNotNull(strItor60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test691");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        int int9 = serializableMap0.size();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj17 = serializableMap11.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj19 = serializableMap11.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection20 = serializableMap11.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        int int31 = serializableMap21.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int37 = serializableMap33.totalSize();
        serializableMap32.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj41 = serializableMap33.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj43 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor44 = serializableMap21.iterator(obj43);
        java.util.Set<java.io.Serializable> serializableSet45 = serializableMap21.keySet();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap21);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap47.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection52 = serializableMap47.values();
        java.util.Set<java.io.Serializable> serializableSet53 = serializableMap47.keySet();
        boolean boolean54 = serializableMap21.containsValue((java.lang.Object) serializableSet53);
        java.util.Collection<java.lang.String> strCollection55 = serializableMap0.getCollection((java.lang.Object) serializableSet53);
        java.lang.String str56 = serializableMap0.toString();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor57 = serializableMap0.iterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet58 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(serializableSet45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(serializableSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(strCollection55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{}" + "'", str56, "{}");
        org.junit.Assert.assertNotNull(serializableEntryItor57);
        org.junit.Assert.assertNotNull(serializableEntrySet58);
    }

    @Test
    public void test692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test692");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet2 = serializableMap0.entrySet();
        int int3 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap4 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int9 = serializableMap5.totalSize();
        serializableMap4.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap5);
        java.lang.Object obj13 = serializableMap5.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        boolean boolean15 = serializableMap5.equals((java.lang.Object) (-1));
        java.lang.Object obj16 = serializableMap0.remove((java.lang.Object) boolean15);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean20 = serializableMap17.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean23 = serializableMap17.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int25 = serializableMap17.size((java.lang.Object) (short) -1);
        int int27 = serializableMap17.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap29 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap29.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int33 = serializableMap29.totalSize();
        serializableMap28.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap29);
        java.lang.Object obj37 = serializableMap29.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap29);
        java.lang.Object obj39 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor40 = serializableMap17.iterator(obj39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj47 = serializableMap41.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj49 = serializableMap41.get((java.lang.Object) 100.0d);
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap41);
        boolean boolean51 = serializableMap17.isEmpty();
        java.lang.String str52 = serializableMap17.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Comparable<java.lang.String>> serializableMap53 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap17);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet54 = serializableMap17.entrySet();
        java.util.Set<java.io.Serializable> serializableSet55 = serializableMap17.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean59 = serializableMap56.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean62 = serializableMap56.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int64 = serializableMap56.size((java.lang.Object) (short) -1);
        boolean boolean66 = serializableMap56.equals((java.lang.Object) (short) 1);
        serializableMap56.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap69 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean73 = serializableMap70.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int74 = serializableMap70.totalSize();
        serializableMap69.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap70);
        java.lang.Object obj78 = serializableMap70.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj79 = serializableMap56.replace((java.io.Serializable) serializableMap68, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap80 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap68);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Cloneable> serializableMap81 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap80);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean86 = serializableMap82.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection87 = serializableMap82.values();
        java.util.Collection<java.lang.Object> objCollection88 = serializableMap82.values();
        boolean boolean89 = serializableMap0.replace((java.io.Serializable) serializableMap17, (java.lang.Object) serializableMap81, (java.lang.Object) serializableMap82);
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertNotNull(serializableEntrySet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{1=[100]}" + "'", str52, "{1=[100]}");
        org.junit.Assert.assertNotNull(serializableMap53);
        org.junit.Assert.assertNotNull(serializableEntrySet54);
        org.junit.Assert.assertNotNull(serializableSet55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100L + "'", obj78, 100L);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(serializableMap80);
        org.junit.Assert.assertNotNull(serializableMap81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objCollection87);
        org.junit.Assert.assertNotNull(objCollection88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test693");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap5 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor6 = serializableMap5.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        int int18 = serializableMap8.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor19 = serializableMap8.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap20.equals((java.lang.Object) (short) 10);
        int int23 = serializableMap20.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean42 = serializableMap34.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int48 = serializableMap44.totalSize();
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj52 = serializableMap44.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj53 = serializableMap34.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor54 = serializableMap25.iterator((java.lang.Object) serializableMap34);
        java.lang.Object obj55 = serializableMap8.putIfAbsent((java.io.Serializable) int23, (java.lang.Object) strItor54);
        java.lang.Object obj56 = serializableMap5.putIfAbsent((java.io.Serializable) (short) 10, (java.lang.Object) serializableMap8);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean63 = serializableMap57.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean65 = serializableMap57.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean70 = serializableMap67.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int71 = serializableMap67.totalSize();
        serializableMap66.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap67);
        java.lang.Object obj75 = serializableMap67.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj76 = serializableMap57.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> serializableMap77 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.Put<java.io.Serializable, java.lang.Object>> serializableMap78 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap77);
        boolean boolean79 = serializableMap5.containsKey((java.lang.Object) serializableMap78);
        boolean boolean80 = serializableMap78.isEmpty();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(serializableMap5);
        org.junit.Assert.assertNotNull(serializableItor6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 100L + "'", obj75, 100L);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(serializableMap77);
        org.junit.Assert.assertNotNull(serializableMap78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test694");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean20 = serializableMap12.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap21.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection26 = serializableMap21.values();
        java.io.Serializable serializable27 = null;
        java.lang.Object obj29 = serializableMap21.putIfAbsent(serializable27, (java.lang.Object) 0);
        java.lang.Object obj30 = null;
        boolean boolean31 = serializableMap12.remove((java.lang.Object) 0, obj30);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean38 = serializableMap32.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int40 = serializableMap32.size((java.lang.Object) (short) -1);
        int int42 = serializableMap32.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int49 = serializableMap45.totalSize();
        serializableMap44.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap45);
        java.lang.Object obj53 = serializableMap45.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean60 = serializableMap54.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean62 = serializableMap54.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean67 = serializableMap64.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int68 = serializableMap64.totalSize();
        serializableMap63.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap64);
        java.lang.Object obj72 = serializableMap64.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj73 = serializableMap54.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor74 = serializableMap45.iterator((java.lang.Object) serializableMap54);
        java.lang.Object obj75 = serializableMap32.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor74);
        int int76 = serializableMap12.size((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap77 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj80 = serializableMap77.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        boolean boolean81 = serializableMap12.equals((java.lang.Object) 0.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor83 = serializableMap82.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet84 = serializableMap82.entrySet();
        int int85 = serializableMap82.totalSize();
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap82);
        boolean boolean87 = serializableMap0.containsValue((java.lang.Object) serializableMap12);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 100L + "'", obj53, 100L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100L + "'", obj72, 100L);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(serializableItor83);
        org.junit.Assert.assertNotNull(serializableEntrySet84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test695");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.util.Set<java.io.Serializable> serializableSet6 = serializableMap0.keySet();
        java.util.Set<java.io.Serializable> serializableSet7 = serializableMap0.keySet();
        int int9 = serializableMap0.size((java.lang.Object) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        boolean boolean20 = serializableMap10.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        boolean boolean31 = serializableMap21.equals((java.lang.Object) (short) 1);
        serializableMap21.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj44 = serializableMap21.replace((java.io.Serializable) serializableMap33, (java.lang.Object) 1);
        boolean boolean45 = serializableMap10.equals((java.lang.Object) serializableMap33);
        serializableMap33.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean53 = serializableMap47.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int55 = serializableMap47.size((java.lang.Object) (short) -1);
        int int57 = serializableMap47.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj67 = serializableMap59.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj69 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor70 = serializableMap47.iterator(obj69);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean74 = serializableMap71.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj77 = serializableMap71.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj79 = serializableMap71.get((java.lang.Object) 100.0d);
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap71);
        boolean boolean81 = serializableMap47.isEmpty();
        boolean boolean82 = serializableMap33.containsKey((java.lang.Object) serializableMap47);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Cloneable, org.apache.commons.collections4.IterableGet<java.io.Serializable, java.lang.Object>> cloneableMap83 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Cloneable, org.apache.commons.collections4.IterableGet<java.io.Serializable, java.lang.Object>>();
        java.lang.Object obj84 = serializableMap0.put((java.io.Serializable) serializableMap33, (java.lang.Object) cloneableMap83);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "{}");
    }

    @Test
    public void test696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test696");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        java.lang.Object obj12 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj16 = serializableMap13.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection17 = serializableMap13.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap18 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.io.Serializable serializable19 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        java.lang.Object obj26 = serializableMap20.get((java.lang.Object) (-1.0d));
        java.lang.Object obj27 = serializableMap18.putIfAbsent(serializable19, obj26);
        boolean boolean28 = serializableMap18.isEmpty();
        boolean boolean29 = serializableMap0.containsValue(obj12, (java.lang.Object) serializableMap18);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor30 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int35 = serializableMap31.totalSize();
        java.lang.Object obj37 = serializableMap31.get((java.lang.Object) (-1.0d));
        boolean boolean38 = serializableMap31.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean42 = serializableMap39.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean45 = serializableMap39.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int47 = serializableMap39.size((java.lang.Object) (short) -1);
        boolean boolean49 = serializableMap39.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean56 = serializableMap50.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int58 = serializableMap50.size((java.lang.Object) (short) -1);
        boolean boolean60 = serializableMap50.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray63 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        boolean boolean66 = serializableMap39.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList64);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj70 = serializableMap67.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        boolean boolean75 = serializableMap39.putAll((java.io.Serializable) serializableMap67, (java.util.Collection<java.lang.String>) strList73);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap77 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean80 = serializableMap77.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int81 = serializableMap77.totalSize();
        serializableMap76.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap77);
        java.lang.Object obj83 = serializableMap31.replace((java.io.Serializable) serializableMap39, (java.lang.Object) serializableMap76);
        java.util.Iterator<java.lang.String> strItor84 = serializableMap0.iterator((java.lang.Object) serializableMap39);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(serializableMap18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(serializableItor30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(strItor84);
    }

    @Test
    public void test697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test697");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor12 = serializableMap0.mapIterator();
        serializableMap0.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet14 = serializableMap0.entrySet();
        serializableMap0.clear();
        java.lang.String str16 = serializableMap0.toString();
        int int17 = serializableMap0.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
        org.junit.Assert.assertNotNull(serializableItor12);
        org.junit.Assert.assertNotNull(serializableEntrySet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test698");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = serializableMap0.remove((java.lang.Object) serializableMap7, obj18);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        boolean boolean31 = serializableMap21.equals((java.lang.Object) (short) 1);
        serializableMap21.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj44 = serializableMap21.replace((java.io.Serializable) serializableMap33, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor45 = serializableMap33.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean52 = serializableMap46.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int54 = serializableMap46.size((java.lang.Object) (short) -1);
        boolean boolean56 = serializableMap46.equals((java.lang.Object) (short) 1);
        serializableMap46.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj67 = serializableMap59.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean76 = serializableMap68.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap77 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean81 = serializableMap78.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int82 = serializableMap78.totalSize();
        serializableMap77.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap78);
        java.lang.Object obj86 = serializableMap78.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj87 = serializableMap68.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor88 = serializableMap59.iterator((java.lang.Object) serializableMap68);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor89 = serializableMap59.iterator();
        java.lang.Object obj90 = serializableMap33.putIfAbsent((java.io.Serializable) serializableMap46, (java.lang.Object) serializableEntryItor89);
        boolean boolean91 = serializableMap33.isEmpty();
        int int92 = serializableMap0.size((java.lang.Object) serializableMap33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap93 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean97 = serializableMap93.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet98 = serializableMap93.entrySet();
        java.util.Iterator<java.lang.String> strItor99 = serializableMap0.iterator((java.lang.Object) serializableEntrySet98);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(serializableItor45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(serializableEntryItor89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet98);
        org.junit.Assert.assertNotNull(strItor99);
    }

    @Test
    public void test699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test699");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean2 = serializableMap0.equals((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.Iterator<java.io.Serializable>> objMap3 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.Iterator<java.io.Serializable>>();
        java.lang.Object obj4 = serializableMap0.get((java.lang.Object) objMap3);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet5 = serializableMap0.entrySet();
        java.lang.Object obj6 = null;
        java.util.Iterator<java.lang.String> strItor7 = serializableMap0.iterator(obj6);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(serializableEntrySet5);
        org.junit.Assert.assertNotNull(strItor7);
    }

    @Test
    public void test700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test700");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor12 = serializableMap0.mapIterator();
        serializableMap0.clear();
        int int14 = serializableMap0.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
        org.junit.Assert.assertNotNull(serializableItor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test701");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean7 = serializableMap1.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int9 = serializableMap1.size((java.lang.Object) (short) -1);
        int int11 = serializableMap1.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int17 = serializableMap13.totalSize();
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj21 = serializableMap13.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj23 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor24 = serializableMap1.iterator(obj23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj31 = serializableMap25.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj33 = serializableMap25.get((java.lang.Object) 100.0d);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        int int35 = serializableMap0.size((java.lang.Object) serializableMap25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        int int46 = serializableMap36.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int53 = serializableMap49.totalSize();
        serializableMap48.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap49);
        java.lang.Object obj57 = serializableMap49.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean66 = serializableMap58.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int72 = serializableMap68.totalSize();
        serializableMap67.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap68);
        java.lang.Object obj76 = serializableMap68.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj77 = serializableMap58.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor78 = serializableMap49.iterator((java.lang.Object) serializableMap58);
        java.lang.Object obj79 = serializableMap36.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor78);
        java.util.Iterator<java.lang.String> strItor80 = serializableMap0.iterator((java.lang.Object) serializableMap36);
        boolean boolean81 = serializableMap0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(strItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test702");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj19 = serializableMap0.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> serializableMap20 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.Put<java.io.Serializable, java.lang.Object>> serializableMap21 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.util.Set<java.io.Serializable> serializableSet22 = serializableMap20.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(serializableMap20);
        org.junit.Assert.assertNotNull(serializableMap21);
        org.junit.Assert.assertNotNull(serializableSet22);
    }

    @Test
    public void test703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test703");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap9 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        boolean boolean20 = serializableMap10.equals((java.lang.Object) (short) 1);
        serializableMap10.clear();
        java.util.Set<java.io.Serializable> serializableSet22 = serializableMap10.keySet();
        serializableMap10.clear();
        java.util.Collection<java.lang.String> strCollection24 = serializableMap0.getCollection((java.lang.Object) serializableMap10);
        java.util.Collection<java.lang.Object> objCollection25 = serializableMap0.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(serializableMap9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serializableSet22);
        org.junit.Assert.assertNull(strCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
    }

    @Test
    public void test704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test704");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int6 = serializableMap0.size((java.lang.Object) 10);
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int12 = serializableMap8.totalSize();
        java.lang.Object obj14 = serializableMap8.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean18 = serializableMap15.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean21 = serializableMap15.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int23 = serializableMap15.size((java.lang.Object) (short) -1);
        boolean boolean25 = serializableMap15.equals((java.lang.Object) (short) 1);
        int int26 = serializableMap8.size((java.lang.Object) boolean25);
        java.lang.String str27 = serializableMap8.toString();
        java.lang.String[] strArray32 = new java.lang.String[] { "{}", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) 1.0d, (java.util.Collection<java.lang.String>) strList33);
        boolean boolean36 = serializableMap8.isEmpty();
        java.util.Collection<java.lang.String> strCollection37 = null;
        boolean boolean38 = serializableMap0.putAll((java.io.Serializable) serializableMap8, strCollection37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean42 = serializableMap39.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean45 = serializableMap39.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int47 = serializableMap39.size((java.lang.Object) (short) -1);
        boolean boolean49 = serializableMap39.equals((java.lang.Object) (short) 1);
        serializableMap39.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int57 = serializableMap53.totalSize();
        serializableMap52.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap53);
        java.lang.Object obj61 = serializableMap53.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj62 = serializableMap39.replace((java.io.Serializable) serializableMap51, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap63 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap51);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean67 = serializableMap64.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int68 = serializableMap64.totalSize();
        java.lang.Object obj69 = serializableMap51.remove((java.lang.Object) int68);
        int int70 = serializableMap51.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean74 = serializableMap71.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean77 = serializableMap71.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int78 = serializableMap71.size();
        java.util.Collection<java.lang.Object> objCollection79 = serializableMap71.values();
        java.util.Collection<java.lang.Object> objCollection80 = serializableMap71.values();
        java.lang.Object obj81 = null;
        java.util.Iterator<java.lang.String> strItor82 = serializableMap71.iterator(obj81);
        java.lang.Object obj83 = serializableMap51.remove((java.lang.Object) strItor82);
        java.lang.Object obj84 = serializableMap8.get(obj83);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(serializableMap63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(objCollection79);
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertNotNull(strItor82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test705");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        java.lang.Object obj12 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj16 = serializableMap13.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection17 = serializableMap13.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap18 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.io.Serializable serializable19 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        java.lang.Object obj26 = serializableMap20.get((java.lang.Object) (-1.0d));
        java.lang.Object obj27 = serializableMap18.putIfAbsent(serializable19, obj26);
        boolean boolean28 = serializableMap18.isEmpty();
        boolean boolean29 = serializableMap0.containsValue(obj12, (java.lang.Object) serializableMap18);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor30 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap31.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection36 = serializableMap31.values();
        java.io.Serializable serializable37 = null;
        java.lang.Object obj39 = serializableMap31.putIfAbsent(serializable37, (java.lang.Object) 0);
        serializableMap31.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean47 = serializableMap41.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int49 = serializableMap41.size((java.lang.Object) (short) -1);
        boolean boolean51 = serializableMap41.equals((java.lang.Object) (short) 1);
        serializableMap41.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int59 = serializableMap55.totalSize();
        serializableMap54.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap55);
        java.lang.Object obj63 = serializableMap55.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj64 = serializableMap41.replace((java.io.Serializable) serializableMap53, (java.lang.Object) 1);
        java.lang.Object obj65 = serializableMap31.remove((java.lang.Object) serializableMap41);
        java.lang.String str66 = serializableMap31.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Iterable<java.lang.Object>> serializableMap67 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap31);
        boolean boolean68 = serializableMap0.equals((java.lang.Object) serializableMap67);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(serializableMap18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(serializableItor30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0 + "'", obj39, 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
        org.junit.Assert.assertNotNull(serializableMap67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test706");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.io.Serializable serializable6 = null;
        java.lang.Object obj8 = serializableMap0.putIfAbsent(serializable6, (java.lang.Object) 0);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor21 = serializableMap10.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor22 = serializableMap10.mapIterator();
        boolean boolean23 = serializableMap10.isEmpty();
        java.util.Set<java.io.Serializable> serializableSet24 = serializableMap10.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        java.lang.Object obj31 = serializableMap25.get((java.lang.Object) (-1.0d));
        boolean boolean32 = serializableMap25.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean41 = serializableMap33.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int47 = serializableMap43.totalSize();
        serializableMap42.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap43);
        java.lang.Object obj51 = serializableMap42.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean58 = serializableMap52.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int60 = serializableMap52.size((java.lang.Object) (short) -1);
        boolean boolean61 = serializableMap42.containsValue((java.lang.Object) serializableMap52);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean66 = serializableMap63.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int67 = serializableMap63.totalSize();
        serializableMap62.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap63);
        java.lang.Object obj71 = serializableMap63.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap72.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean78 = serializableMap72.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean80 = serializableMap72.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean85 = serializableMap82.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int86 = serializableMap82.totalSize();
        serializableMap81.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap82);
        java.lang.Object obj90 = serializableMap82.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj91 = serializableMap72.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor92 = serializableMap63.iterator((java.lang.Object) serializableMap72);
        serializableMap63.clear();
        boolean boolean94 = serializableMap25.replace((java.io.Serializable) boolean41, (java.lang.Object) serializableMap52, (java.lang.Object) serializableMap63);
        int int95 = serializableMap52.size();
        boolean boolean96 = serializableMap0.remove((java.lang.Object) serializableSet24, (java.lang.Object) serializableMap52);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.RandomAccess> serializableMap97 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor21);
        org.junit.Assert.assertNotNull(serializableItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(serializableSet24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0d + "'", obj51, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100L + "'", obj71, 100L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(strItor92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(serializableMap97);
    }

    @Test
    public void test707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test707");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int11 = serializableMap7.totalSize();
        java.lang.Object obj13 = serializableMap7.get((java.lang.Object) (-1.0d));
        boolean boolean14 = serializableMap7.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean18 = serializableMap15.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean21 = serializableMap15.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int23 = serializableMap15.size((java.lang.Object) (short) -1);
        boolean boolean25 = serializableMap15.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean32 = serializableMap26.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int34 = serializableMap26.size((java.lang.Object) (short) -1);
        boolean boolean36 = serializableMap26.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = serializableMap15.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList40);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj46 = serializableMap43.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        boolean boolean51 = serializableMap15.putAll((java.io.Serializable) serializableMap43, (java.util.Collection<java.lang.String>) strList49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int57 = serializableMap53.totalSize();
        serializableMap52.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap53);
        java.lang.Object obj59 = serializableMap7.replace((java.io.Serializable) serializableMap15, (java.lang.Object) serializableMap52);
        java.lang.Object obj60 = serializableMap0.get(obj59);
        java.lang.String str61 = serializableMap0.toString();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean66 = serializableMap63.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean69 = serializableMap63.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int71 = serializableMap63.size((java.lang.Object) (short) -1);
        int int73 = serializableMap63.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap74 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean78 = serializableMap75.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int79 = serializableMap75.totalSize();
        serializableMap74.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap75);
        java.lang.Object obj83 = serializableMap75.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap63.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap75);
        java.util.Iterator<java.lang.String> strItor85 = serializableMap0.iterator((java.lang.Object) serializableMap75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{}" + "'", str61, "{}");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 100L + "'", obj83, 100L);
        org.junit.Assert.assertNotNull(strItor85);
    }

    @Test
    public void test708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test708");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet34 = serializableMap24.entrySet();
        boolean boolean35 = serializableMap24.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap36.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection41 = serializableMap36.values();
        java.util.Set<java.io.Serializable> serializableSet42 = serializableMap36.keySet();
        java.util.Set<java.io.Serializable> serializableSet43 = serializableMap36.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj50 = serializableMap44.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj52 = serializableMap44.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection53 = serializableMap44.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean60 = serializableMap54.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int62 = serializableMap54.size((java.lang.Object) (short) -1);
        int int64 = serializableMap54.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int70 = serializableMap66.totalSize();
        serializableMap65.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap66);
        java.lang.Object obj74 = serializableMap66.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap54.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap66);
        java.lang.Object obj76 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor77 = serializableMap54.iterator(obj76);
        java.util.Set<java.io.Serializable> serializableSet78 = serializableMap54.keySet();
        serializableMap44.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        int int80 = serializableMap44.size();
        java.util.Set<java.io.Serializable> serializableSet81 = serializableMap44.keySet();
        java.util.Collection<java.lang.String> strCollection82 = serializableMap36.getCollection((java.lang.Object) serializableMap44);
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor84 = serializableMap44.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(serializableEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNotNull(serializableSet42);
        org.junit.Assert.assertNotNull(serializableSet43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertNotNull(strItor77);
        org.junit.Assert.assertNotNull(serializableSet78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(serializableSet81);
        org.junit.Assert.assertNull(strCollection82);
        org.junit.Assert.assertNotNull(serializableEntryItor84);
    }

    @Test
    public void test709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test709");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor5 = serializableMap0.mapIterator();
        serializableMap0.clear();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor7 = serializableMap0.mapIterator();
        boolean boolean8 = serializableMap0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet9 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serializableItor5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(serializableEntrySet9);
    }

    @Test
    public void test710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test710");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int26 = serializableMap22.totalSize();
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj30 = serializableMap22.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap10.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        java.lang.Object obj32 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor33 = serializableMap10.iterator(obj32);
        java.util.Set<java.io.Serializable> serializableSet34 = serializableMap10.keySet();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.util.Collection<java.lang.Object> objCollection36 = serializableMap10.values();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor37 = serializableMap10.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        java.lang.Object obj44 = serializableMap38.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean51 = serializableMap45.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int53 = serializableMap45.size((java.lang.Object) (short) -1);
        boolean boolean55 = serializableMap45.equals((java.lang.Object) (short) 1);
        int int56 = serializableMap38.size((java.lang.Object) boolean55);
        serializableMap38.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean66 = serializableMap58.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj70 = serializableMap67.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap71.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection76 = serializableMap71.values();
        boolean boolean77 = serializableMap58.remove(obj70, (java.lang.Object) serializableMap71);
        java.io.Serializable serializable78 = null;
        java.lang.Object obj80 = serializableMap58.put(serializable78, (java.lang.Object) (byte) 0);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor81 = serializableMap58.iterator();
        java.lang.Object obj82 = serializableMap10.getOrDefault((java.lang.Object) serializableMap38, (java.lang.Object) serializableMap58);
        serializableMap38.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(serializableEntryItor37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (byte) 0 + "'", obj80, (byte) 0);
        org.junit.Assert.assertNotNull(serializableEntryItor81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{null=[0]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{null=[0]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{null=[0]}");
    }

    @Test
    public void test711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test711");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.util.Set<java.io.Serializable> serializableSet6 = serializableMap0.keySet();
        serializableMap0.clear();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(serializableSet6);
    }

    @Test
    public void test712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test712");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet34 = serializableMap24.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean41 = serializableMap35.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int43 = serializableMap35.size((java.lang.Object) (short) -1);
        int int45 = serializableMap35.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int51 = serializableMap47.totalSize();
        serializableMap46.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        java.lang.Object obj55 = serializableMap47.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap35.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int66 = serializableMap58.size((java.lang.Object) (short) -1);
        int int68 = serializableMap58.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap69 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean73 = serializableMap70.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int74 = serializableMap70.totalSize();
        serializableMap69.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap70);
        java.lang.Object obj78 = serializableMap70.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap70);
        java.lang.Object obj80 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor81 = serializableMap58.iterator(obj80);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean85 = serializableMap82.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj88 = serializableMap82.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj90 = serializableMap82.get((java.lang.Object) 100.0d);
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap82);
        int int92 = serializableMap57.size((java.lang.Object) serializableMap82);
        java.util.Collection<java.lang.String> strCollection93 = serializableMap35.getCollection((java.lang.Object) serializableMap57);
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        int int95 = serializableMap24.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(serializableEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100L + "'", obj78, 100L);
        org.junit.Assert.assertNotNull(strItor81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNull(strCollection93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test713");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        java.lang.Object obj5 = null;
        boolean boolean6 = serializableMap0.equals(obj5);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test714");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        int int9 = serializableMap0.size();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj17 = serializableMap11.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj19 = serializableMap11.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection20 = serializableMap11.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        int int31 = serializableMap21.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int37 = serializableMap33.totalSize();
        serializableMap32.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj41 = serializableMap33.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap21.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj43 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor44 = serializableMap21.iterator(obj43);
        java.util.Set<java.io.Serializable> serializableSet45 = serializableMap21.keySet();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap21);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap47.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection52 = serializableMap47.values();
        java.util.Set<java.io.Serializable> serializableSet53 = serializableMap47.keySet();
        boolean boolean54 = serializableMap21.containsValue((java.lang.Object) serializableSet53);
        java.util.Collection<java.lang.String> strCollection55 = serializableMap0.getCollection((java.lang.Object) serializableSet53);
        java.lang.String str56 = serializableMap0.toString();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor57 = serializableMap0.iterator();
        boolean boolean58 = serializableMap0.isEmpty();
        java.lang.Class<?> wildcardClass59 = serializableMap0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(serializableSet45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(serializableSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(strCollection55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{}" + "'", str56, "{}");
        org.junit.Assert.assertNotNull(serializableEntryItor57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test715");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj29 = serializableMap23.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj30 = serializableMap0.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int31 = serializableMap0.totalSize();
        java.lang.String str32 = serializableMap0.toString();
        int int33 = serializableMap0.size();
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>> wildcardClassMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>>();
        java.lang.Class<?> wildcardClass35 = wildcardClassMap34.getClass();
        boolean boolean36 = serializableMap0.containsKey((java.lang.Object) wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 1 + "'", obj30, (byte) 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{1=[100]}" + "'", str32, "{1=[100]}");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test716");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        java.lang.Object obj12 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj16 = serializableMap13.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection17 = serializableMap13.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap18 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.io.Serializable serializable19 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        java.lang.Object obj26 = serializableMap20.get((java.lang.Object) (-1.0d));
        java.lang.Object obj27 = serializableMap18.putIfAbsent(serializable19, obj26);
        boolean boolean28 = serializableMap18.isEmpty();
        boolean boolean29 = serializableMap0.containsValue(obj12, (java.lang.Object) serializableMap18);
        java.lang.String str30 = serializableMap18.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(serializableMap18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{null=[[null]]}" + "'", str30, "{null=[[null]]}");
    }

    @Test
    public void test717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test717");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        java.lang.String str24 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int30 = serializableMap26.totalSize();
        serializableMap25.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        boolean boolean35 = serializableMap26.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap36 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>> wildcardClassMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>>();
        java.lang.Object obj38 = serializableMap0.getOrDefault((java.lang.Object) serializableMap26, (java.lang.Object) wildcardClassMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap40 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean43 = serializableMap40.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int44 = serializableMap40.totalSize();
        serializableMap39.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap40);
        java.lang.Object obj48 = serializableMap40.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean57 = serializableMap49.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj67 = serializableMap59.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj68 = serializableMap49.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor69 = serializableMap40.iterator((java.lang.Object) serializableMap49);
        java.lang.Object obj70 = serializableMap26.get((java.lang.Object) serializableMap49);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor71 = serializableMap26.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor72 = serializableMap26.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(serializableMap36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(serializableEntryItor71);
        org.junit.Assert.assertNotNull(serializableEntryItor72);
    }

    @Test
    public void test718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test718");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        serializableMap23.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        int int47 = serializableMap37.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int53 = serializableMap49.totalSize();
        serializableMap48.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap49);
        java.lang.Object obj57 = serializableMap49.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap49);
        java.lang.Object obj59 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor60 = serializableMap37.iterator(obj59);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj67 = serializableMap61.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj69 = serializableMap61.get((java.lang.Object) 100.0d);
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap61);
        boolean boolean71 = serializableMap37.isEmpty();
        boolean boolean72 = serializableMap23.containsKey((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap73 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean76 = serializableMap73.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean79 = serializableMap73.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean81 = serializableMap73.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap83 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean86 = serializableMap83.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int87 = serializableMap83.totalSize();
        serializableMap82.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap83);
        java.lang.Object obj91 = serializableMap83.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj92 = serializableMap73.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> serializableMap93 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap73);
        java.lang.String str94 = serializableMap73.toString();
        java.lang.Object obj95 = serializableMap37.remove((java.lang.Object) str94);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap96 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap37);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertNotNull(strItor60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNotNull(serializableMap93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "{}" + "'", str94, "{}");
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(serializableMap96);
    }

    @Test
    public void test719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test719");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        java.lang.String str36 = serializableMap23.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj43 = serializableMap37.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        boolean boolean44 = serializableMap23.containsValue((java.lang.Object) serializableMap37);
        java.lang.String str45 = serializableMap37.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{}" + "'", str45, "{}");
    }

    @Test
    public void test720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test720");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        int int46 = serializableMap36.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int52 = serializableMap48.totalSize();
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj56 = serializableMap48.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean64 = serializableMap58.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean66 = serializableMap58.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj70 = serializableMap67.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap71.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection76 = serializableMap71.values();
        boolean boolean77 = serializableMap58.remove(obj70, (java.lang.Object) serializableMap71);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor78 = serializableMap58.iterator();
        int int79 = serializableMap58.size();
        java.lang.Object obj80 = serializableMap23.putIfAbsent((java.io.Serializable) serializableMap48, (java.lang.Object) int79);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean85 = serializableMap81.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection86 = serializableMap81.values();
        java.io.Serializable serializable87 = null;
        java.lang.Object obj89 = serializableMap81.putIfAbsent(serializable87, (java.lang.Object) 0);
        serializableMap81.clear();
        boolean boolean91 = serializableMap81.isEmpty();
        serializableMap81.clear();
        int int93 = serializableMap23.size((java.lang.Object) serializableMap81);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap94 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap23);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0 + "'", obj80, 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 0 + "'", obj89, 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(serializableMap94);
    }

    @Test
    public void test721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test721");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int7 = serializableMap0.size();
        java.util.Collection<java.lang.Object> objCollection8 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor10 = serializableMap9.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        boolean boolean32 = serializableMap22.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = serializableMap11.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj42 = serializableMap39.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap11.putAll((java.io.Serializable) serializableMap39, (java.util.Collection<java.lang.String>) strList45);
        java.lang.Object obj48 = serializableMap9.get((java.lang.Object) serializableMap39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int57 = serializableMap49.size((java.lang.Object) (short) -1);
        int int59 = serializableMap49.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int65 = serializableMap61.totalSize();
        serializableMap60.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap61);
        java.lang.Object obj69 = serializableMap61.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap61);
        java.lang.Object obj71 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor72 = serializableMap49.iterator(obj71);
        java.lang.Object obj73 = serializableMap9.remove(obj71);
        boolean boolean74 = serializableMap0.equals((java.lang.Object) serializableMap9);
        boolean boolean75 = serializableMap9.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(serializableItor10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 100L + "'", obj69, 100L);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test722");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean42 = serializableMap34.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap43.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection48 = serializableMap43.values();
        java.io.Serializable serializable49 = null;
        java.lang.Object obj51 = serializableMap43.putIfAbsent(serializable49, (java.lang.Object) 0);
        java.lang.Object obj52 = null;
        boolean boolean53 = serializableMap34.remove((java.lang.Object) 0, obj52);
        boolean boolean54 = serializableMap0.containsValue(obj52);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean61 = serializableMap55.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int63 = serializableMap55.size((java.lang.Object) (short) -1);
        boolean boolean65 = serializableMap55.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int74 = serializableMap66.size((java.lang.Object) (short) -1);
        boolean boolean76 = serializableMap66.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray79 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        boolean boolean82 = serializableMap55.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList80);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor83 = serializableMap55.iterator();
        boolean boolean84 = serializableMap0.containsKey((java.lang.Object) serializableEntryItor83);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(serializableEntryItor83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test723");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.io.Serializable serializable6 = null;
        java.lang.Object obj8 = serializableMap0.putIfAbsent(serializable6, (java.lang.Object) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean15 = serializableMap9.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int17 = serializableMap9.size((java.lang.Object) (short) -1);
        boolean boolean19 = serializableMap9.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap9.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        boolean boolean47 = serializableMap37.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap48.size((java.lang.Object) (short) -1);
        boolean boolean58 = serializableMap48.equals((java.lang.Object) (short) 1);
        serializableMap48.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int66 = serializableMap62.totalSize();
        serializableMap61.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj70 = serializableMap62.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj71 = serializableMap48.replace((java.io.Serializable) serializableMap60, (java.lang.Object) 1);
        boolean boolean72 = serializableMap37.equals((java.lang.Object) serializableMap60);
        boolean boolean74 = serializableMap9.containsValue((java.lang.Object) serializableMap37, (java.lang.Object) "");
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = serializableMap0.containsValue((java.lang.Object) serializableMap9, obj75);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap79 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean82 = serializableMap79.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int83 = serializableMap79.totalSize();
        serializableMap78.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap79);
        java.lang.Object obj87 = serializableMap79.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap79.clear();
        serializableMap79.clear();
        boolean boolean90 = serializableMap9.containsValue((java.lang.Object) serializableMap79);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet91 = serializableMap79.entrySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 100L + "'", obj87, 100L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet91);
    }

    @Test
    public void test724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test724");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.util.Collection<java.lang.Object> objCollection6 = serializableMap0.values();
        int int7 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.RandomAccess> objMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.RandomAccess>();
        java.lang.Class<?> wildcardClass9 = objMap8.getClass();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj16 = serializableMap10.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj18 = serializableMap10.get((java.lang.Object) 100.0d);
        java.lang.Object obj19 = serializableMap0.put((java.io.Serializable) wildcardClass9, (java.lang.Object) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj26 = serializableMap20.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean33 = serializableMap27.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int42 = serializableMap34.size((java.lang.Object) (short) -1);
        boolean boolean44 = serializableMap34.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean51 = serializableMap45.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int53 = serializableMap45.size((java.lang.Object) (short) -1);
        boolean boolean55 = serializableMap45.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = serializableMap34.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList59);
        boolean boolean62 = serializableMap20.putAll((java.io.Serializable) serializableMap27, (java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean66 = serializableMap63.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean69 = serializableMap63.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int71 = serializableMap63.size((java.lang.Object) (short) -1);
        int int73 = serializableMap63.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap74 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean78 = serializableMap75.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int79 = serializableMap75.totalSize();
        serializableMap74.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap75);
        java.lang.Object obj83 = serializableMap75.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap63.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap75);
        java.lang.Object obj85 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor86 = serializableMap63.iterator(obj85);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap87 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean90 = serializableMap87.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj93 = serializableMap87.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj95 = serializableMap87.get((java.lang.Object) 100.0d);
        serializableMap63.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap87);
        int int97 = serializableMap87.totalSize();
        java.lang.Object obj98 = serializableMap20.get((java.lang.Object) serializableMap87);
        boolean boolean99 = serializableMap10.containsValue((java.lang.Object) serializableMap87);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 100L + "'", obj83, 100L);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "[, hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test725");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.io.Serializable serializable34 = null;
        java.lang.Object obj36 = serializableMap0.put(serializable34, (java.lang.Object) (short) 100);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet37 = serializableMap0.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean44 = serializableMap38.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean46 = serializableMap38.containsKey((java.lang.Object) (byte) 10);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor47 = serializableMap38.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap48.size((java.lang.Object) (short) -1);
        boolean boolean58 = serializableMap48.equals((java.lang.Object) (short) 1);
        serializableMap48.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int66 = serializableMap62.totalSize();
        serializableMap61.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj70 = serializableMap62.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj71 = serializableMap48.replace((java.io.Serializable) serializableMap60, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor72 = serializableMap60.mapIterator();
        boolean boolean73 = serializableMap0.remove((java.lang.Object) serializableEntryItor47, (java.lang.Object) serializableMap60);
        java.util.Collection<java.lang.Object> objCollection74 = serializableMap60.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 100 + "'", obj36, (short) 100);
        org.junit.Assert.assertNotNull(serializableEntrySet37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(serializableItor72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objCollection74);
    }

    @Test
    public void test726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test726");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet36 = serializableMap23.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        boolean boolean47 = serializableMap37.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap48.size((java.lang.Object) (short) -1);
        boolean boolean58 = serializableMap48.equals((java.lang.Object) (short) 1);
        serializableMap48.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int66 = serializableMap62.totalSize();
        serializableMap61.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj70 = serializableMap62.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj71 = serializableMap48.replace((java.io.Serializable) serializableMap60, (java.lang.Object) 1);
        boolean boolean72 = serializableMap37.equals((java.lang.Object) serializableMap60);
        boolean boolean73 = serializableMap23.containsValue((java.lang.Object) boolean72);
        boolean boolean74 = serializableMap23.isEmpty();
        int int75 = serializableMap23.totalSize();
        java.util.Collection<java.lang.Object> objCollection76 = serializableMap23.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(serializableEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(objCollection76);
    }

    @Test
    public void test727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test727");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = serializableMap0.remove((java.lang.Object) serializableMap7, obj18);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet21 = serializableMap7.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>> serializableMap22 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap7);
        int int23 = serializableMap7.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet21);
        org.junit.Assert.assertNotNull(serializableMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test728");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj34 = null;
        java.util.Iterator<java.lang.String> strItor35 = serializableMap0.iterator(obj34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int40 = serializableMap36.totalSize();
        java.lang.Object obj42 = serializableMap36.get((java.lang.Object) (-1.0d));
        boolean boolean43 = serializableMap36.isEmpty();
        int int44 = serializableMap36.totalSize();
        serializableMap36.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor47 = serializableMap46.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet48 = serializableMap46.entrySet();
        boolean boolean49 = serializableMap0.containsValue((java.lang.Object) serializableMap36, (java.lang.Object) serializableEntrySet48);
        java.util.Iterator<java.lang.String> strItor51 = serializableMap36.iterator((java.lang.Object) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> objMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>>();
        java.lang.Object obj53 = serializableMap36.get((java.lang.Object) objMap52);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(serializableItor47);
        org.junit.Assert.assertNotNull(serializableEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test729");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj29 = serializableMap23.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj30 = serializableMap0.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int31 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor33 = serializableMap32.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int38 = serializableMap34.totalSize();
        java.lang.Object obj40 = serializableMap34.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean47 = serializableMap41.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int49 = serializableMap41.size((java.lang.Object) (short) -1);
        boolean boolean51 = serializableMap41.equals((java.lang.Object) (short) 1);
        int int52 = serializableMap34.size((java.lang.Object) boolean51);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int59 = serializableMap55.totalSize();
        serializableMap54.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap55);
        java.lang.Object obj63 = serializableMap54.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean67 = serializableMap64.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean70 = serializableMap64.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int72 = serializableMap64.size((java.lang.Object) (short) -1);
        boolean boolean73 = serializableMap54.containsValue((java.lang.Object) serializableMap64);
        boolean boolean74 = serializableMap34.containsValue((java.lang.Object) '4', (java.lang.Object) boolean73);
        boolean boolean75 = serializableMap0.removeMapping((java.lang.Object) serializableMap32, (java.lang.Object) boolean73);
        java.util.Collection<java.lang.Object> objCollection76 = serializableMap0.values();
        java.lang.Object obj77 = null;
        java.util.Iterator<java.lang.String> strItor78 = serializableMap0.iterator(obj77);
        serializableMap0.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 1 + "'", obj30, (byte) 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(serializableItor33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0d + "'", obj63, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertNotNull(strItor78);
    }

    @Test
    public void test730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test730");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap5 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor6 = serializableMap5.mapIterator();
        java.util.Set<java.io.Serializable> serializableSet7 = serializableMap5.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(serializableMap5);
        org.junit.Assert.assertNotNull(serializableItor6);
        org.junit.Assert.assertNotNull(serializableSet7);
    }

    @Test
    public void test731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test731");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor24 = serializableMap12.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        serializableMap25.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap38);
        java.lang.Object obj46 = serializableMap38.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean53 = serializableMap47.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean55 = serializableMap47.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj66 = serializableMap47.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor67 = serializableMap38.iterator((java.lang.Object) serializableMap47);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor68 = serializableMap38.iterator();
        java.lang.Object obj69 = serializableMap12.putIfAbsent((java.io.Serializable) serializableMap25, (java.lang.Object) serializableEntryItor68);
        java.lang.Object obj70 = null;
        boolean boolean71 = serializableMap25.containsKey(obj70);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(serializableEntryItor68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test732");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int42 = serializableMap34.size((java.lang.Object) (short) -1);
        int int44 = serializableMap34.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor45 = serializableMap34.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor46 = serializableMap34.mapIterator();
        serializableMap34.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet48 = serializableMap34.entrySet();
        java.lang.Object obj49 = serializableMap24.get((java.lang.Object) serializableEntrySet48);
        java.util.Collection<java.lang.Object> objCollection50 = serializableMap24.values();
        java.lang.String str51 = serializableMap24.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor45);
        org.junit.Assert.assertNotNull(serializableItor46);
        org.junit.Assert.assertNotNull(serializableEntrySet48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
    }

    @Test
    public void test733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test733");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        boolean boolean10 = serializableMap1.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap11 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.reflect.AnnotatedElement> serializableMap12 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap11);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serializableMap11);
        org.junit.Assert.assertNotNull(serializableMap12);
    }

    @Test
    public void test734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test734");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.String str7 = serializableMap0.toString();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor8 = serializableMap0.mapIterator();
        java.lang.String str9 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj16 = serializableMap10.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj18 = serializableMap10.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap19 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        serializableMap20.clear();
        java.util.Set<java.io.Serializable> serializableSet32 = serializableMap20.keySet();
        serializableMap20.clear();
        java.util.Collection<java.lang.String> strCollection34 = serializableMap10.getCollection((java.lang.Object) serializableMap20);
        java.util.Set<java.io.Serializable> serializableSet35 = serializableMap20.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        int int46 = serializableMap36.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int52 = serializableMap48.totalSize();
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj56 = serializableMap48.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj58 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor59 = serializableMap36.iterator(obj58);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap60.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj66 = serializableMap60.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj68 = serializableMap60.get((java.lang.Object) 100.0d);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap60);
        java.lang.Object obj70 = null;
        java.util.Iterator<java.lang.String> strItor71 = serializableMap36.iterator(obj70);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap72.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int76 = serializableMap72.totalSize();
        java.lang.Object obj78 = serializableMap72.get((java.lang.Object) (-1.0d));
        boolean boolean79 = serializableMap72.isEmpty();
        int int80 = serializableMap72.totalSize();
        serializableMap72.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor83 = serializableMap82.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet84 = serializableMap82.entrySet();
        boolean boolean85 = serializableMap36.containsValue((java.lang.Object) serializableMap72, (java.lang.Object) serializableEntrySet84);
        java.util.Set<java.io.Serializable> serializableSet86 = serializableMap36.keySet();
        java.lang.Object obj87 = serializableMap0.replace((java.io.Serializable) serializableMap20, (java.lang.Object) serializableSet86);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(serializableMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serializableSet32);
        org.junit.Assert.assertNull(strCollection34);
        org.junit.Assert.assertNotNull(serializableSet35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(serializableItor83);
        org.junit.Assert.assertNotNull(serializableEntrySet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(serializableSet86);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test735");
        org.apache.commons.collections4.map.MultiValueMap<java.util.ArrayList<java.lang.String>, org.apache.commons.collections4.Put<java.io.Serializable, java.lang.Object>> strListMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.util.ArrayList<java.lang.String>, org.apache.commons.collections4.Put<java.io.Serializable, java.lang.Object>>();
    }

    @Test
    public void test736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test736");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.String str7 = serializableMap0.toString();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor8 = serializableMap0.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet9 = serializableMap0.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        boolean boolean20 = serializableMap10.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        boolean boolean31 = serializableMap21.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = serializableMap10.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList35);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj41 = serializableMap38.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        boolean boolean46 = serializableMap10.putAll((java.io.Serializable) serializableMap38, (java.util.Collection<java.lang.String>) strList44);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor47 = serializableMap10.iterator();
        java.lang.Object obj48 = serializableMap0.get((java.lang.Object) serializableEntryItor47);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertNotNull(serializableEntrySet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(serializableEntryItor47);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test737");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        java.util.Set<java.io.Serializable> serializableSet12 = serializableMap0.keySet();
        serializableMap0.clear();
        int int14 = serializableMap0.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test738");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        int int18 = serializableMap0.size((java.lang.Object) boolean17);
        java.util.Collection<java.lang.Object> objCollection19 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        java.lang.Object obj26 = serializableMap20.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean33 = serializableMap27.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int35 = serializableMap27.size((java.lang.Object) (short) -1);
        boolean boolean37 = serializableMap27.equals((java.lang.Object) (short) 1);
        int int38 = serializableMap20.size((java.lang.Object) boolean37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap39 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap40 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean43 = serializableMap40.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int44 = serializableMap40.totalSize();
        serializableMap39.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap40);
        java.lang.Object obj48 = serializableMap40.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        boolean boolean50 = serializableMap20.containsValue((java.lang.Object) 1, (java.lang.Object) true);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor51 = serializableMap20.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean58 = serializableMap52.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean60 = serializableMap52.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap61.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection66 = serializableMap61.values();
        java.io.Serializable serializable67 = null;
        java.lang.Object obj69 = serializableMap61.putIfAbsent(serializable67, (java.lang.Object) 0);
        java.lang.Object obj70 = null;
        boolean boolean71 = serializableMap52.remove((java.lang.Object) 0, obj70);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor73 = serializableMap72.mapIterator();
        boolean boolean74 = serializableMap52.containsKey((java.lang.Object) serializableItor73);
        java.lang.Class<?> wildcardClass75 = serializableMap52.getClass();
        boolean boolean76 = serializableMap0.removeMapping((java.lang.Object) serializableMap20, (java.lang.Object) serializableMap52);
        int int77 = serializableMap0.totalSize();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor78 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0 + "'", obj69, 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(serializableItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor78);
    }

    @Test
    public void test739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test739");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        java.lang.String str36 = serializableMap23.toString();
        java.lang.Object obj37 = null;
        java.lang.Object obj38 = serializableMap23.get(obj37);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test740");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        boolean boolean19 = serializableMap10.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap20.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean48 = serializableMap0.putAll((java.io.Serializable) serializableMap10, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean49 = serializableMap10.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test741");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        boolean boolean19 = serializableMap10.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap20.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean48 = serializableMap0.putAll((java.io.Serializable) serializableMap10, (java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap49.size();
        java.util.Collection<java.lang.Object> objCollection57 = serializableMap49.values();
        boolean boolean58 = serializableMap10.containsValue((java.lang.Object) serializableMap49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap59.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection64 = serializableMap59.values();
        java.util.Set<java.io.Serializable> serializableSet65 = serializableMap59.keySet();
        boolean boolean66 = serializableMap10.containsKey((java.lang.Object) serializableMap59);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap67 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj68 = null;
        int int69 = serializableMap10.size(obj68);
        boolean boolean70 = serializableMap10.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNotNull(serializableSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(serializableMap67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test742");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        boolean boolean27 = serializableMap0.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj31 = serializableMap28.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap0.putAll((java.io.Serializable) serializableMap28, (java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int41 = serializableMap37.totalSize();
        java.util.Collection<java.lang.String> strCollection42 = serializableMap28.getCollection((java.lang.Object) int41);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj46 = serializableMap43.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection47 = serializableMap43.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap48 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap43);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int53 = serializableMap49.totalSize();
        java.lang.Object obj55 = serializableMap49.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean59 = serializableMap56.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean62 = serializableMap56.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int64 = serializableMap56.size((java.lang.Object) (short) -1);
        boolean boolean66 = serializableMap56.equals((java.lang.Object) (short) 1);
        int int67 = serializableMap49.size((java.lang.Object) boolean66);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap69 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean72 = serializableMap69.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int73 = serializableMap69.totalSize();
        serializableMap68.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap69);
        java.lang.Object obj77 = serializableMap69.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        boolean boolean79 = serializableMap49.containsValue((java.lang.Object) 1, (java.lang.Object) true);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor80 = serializableMap49.iterator();
        boolean boolean81 = serializableMap43.containsKey((java.lang.Object) serializableMap49);
        java.lang.String str82 = serializableMap43.toString();
        int int83 = serializableMap28.size((java.lang.Object) serializableMap43);
        java.lang.String str84 = serializableMap28.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(strCollection42);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(serializableMap48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 100L + "'", obj77, 100L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{}" + "'", str82, "{}");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{}" + "'", str84, "{}");
    }

    @Test
    public void test743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test743");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        java.util.Set<java.io.Serializable> serializableSet12 = serializableMap0.keySet();
        java.util.Set<java.io.Serializable> serializableSet13 = serializableMap0.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertNotNull(serializableSet13);
    }

    @Test
    public void test744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test744");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        int int18 = serializableMap0.size((java.lang.Object) boolean17);
        java.util.Collection<java.lang.Object> objCollection19 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.ArrayList<java.lang.String>> serializableMap20 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor21 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj28 = serializableMap22.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj30 = serializableMap22.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap31 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor33 = serializableMap32.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet34 = serializableMap32.entrySet();
        int int35 = serializableMap32.totalSize();
        java.util.Set<java.io.Serializable> serializableSet36 = serializableMap32.keySet();
        boolean boolean37 = serializableMap22.containsKey((java.lang.Object) serializableSet36);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap43.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection48 = serializableMap43.values();
        java.io.Serializable serializable49 = null;
        java.lang.Object obj51 = serializableMap43.putIfAbsent(serializable49, (java.lang.Object) 0);
        serializableMap43.clear();
        boolean boolean53 = serializableMap43.isEmpty();
        java.util.Collection<java.lang.String> strCollection54 = serializableMap38.getCollection((java.lang.Object) serializableMap43);
        int int55 = serializableMap43.size();
        org.apache.commons.collections4.map.MultiValueMap<java.util.AbstractList<java.lang.String>, org.apache.commons.collections4.IterableGet<java.io.Serializable, java.lang.Object>> strListMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.util.AbstractList<java.lang.String>, org.apache.commons.collections4.IterableGet<java.io.Serializable, java.lang.Object>>();
        java.lang.Object obj57 = serializableMap22.replace((java.io.Serializable) serializableMap43, (java.lang.Object) strListMap56);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor58 = serializableMap43.iterator();
        boolean boolean59 = serializableMap43.isEmpty();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap43);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(serializableMap20);
        org.junit.Assert.assertNotNull(serializableItor21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(serializableMap31);
        org.junit.Assert.assertNotNull(serializableItor33);
        org.junit.Assert.assertNotNull(serializableEntrySet34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strCollection54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(serializableEntryItor58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test745");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        boolean boolean46 = serializableMap36.equals((java.lang.Object) (short) 1);
        serializableMap36.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int54 = serializableMap50.totalSize();
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        java.lang.Object obj58 = serializableMap50.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj59 = serializableMap36.replace((java.io.Serializable) serializableMap48, (java.lang.Object) 1);
        boolean boolean60 = serializableMap25.equals((java.lang.Object) serializableMap48);
        java.lang.Object obj62 = serializableMap25.remove((java.lang.Object) (-1.0d));
        java.lang.Object obj63 = serializableMap0.replace((java.io.Serializable) (-1.0d), (java.lang.Object) serializableMap25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        boolean boolean74 = serializableMap65.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap75 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        serializableMap0.clear();
        java.util.Set<java.io.Serializable> serializableSet78 = serializableMap0.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(serializableMap75);
        org.junit.Assert.assertNotNull(serializableSet78);
    }

    @Test
    public void test746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test746");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        boolean boolean46 = serializableMap36.equals((java.lang.Object) (short) 1);
        serializableMap36.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int54 = serializableMap50.totalSize();
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        java.lang.Object obj58 = serializableMap50.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj59 = serializableMap36.replace((java.io.Serializable) serializableMap48, (java.lang.Object) 1);
        boolean boolean60 = serializableMap25.equals((java.lang.Object) serializableMap48);
        java.lang.Object obj62 = serializableMap25.remove((java.lang.Object) (-1.0d));
        java.lang.Object obj63 = serializableMap0.replace((java.io.Serializable) (-1.0d), (java.lang.Object) serializableMap25);
        serializableMap25.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test747");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int7 = serializableMap0.size();
        java.util.Collection<java.lang.Object> objCollection8 = serializableMap0.values();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor9 = serializableMap0.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj13 = serializableMap10.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection14 = serializableMap10.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap15 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor16 = serializableMap15.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean24 = serializableMap18.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int26 = serializableMap18.size((java.lang.Object) (short) -1);
        int int28 = serializableMap18.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor29 = serializableMap18.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap30.equals((java.lang.Object) (short) 10);
        int int33 = serializableMap30.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean50 = serializableMap44.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean52 = serializableMap44.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int58 = serializableMap54.totalSize();
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap54);
        java.lang.Object obj62 = serializableMap54.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj63 = serializableMap44.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor64 = serializableMap35.iterator((java.lang.Object) serializableMap44);
        java.lang.Object obj65 = serializableMap18.putIfAbsent((java.io.Serializable) int33, (java.lang.Object) strItor64);
        java.lang.Object obj66 = serializableMap15.putIfAbsent((java.io.Serializable) (short) 10, (java.lang.Object) serializableMap18);
        int int67 = serializableMap0.size((java.lang.Object) serializableMap15);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean72 = serializableMap68.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Set<java.io.Serializable> serializableSet73 = serializableMap68.keySet();
        boolean boolean74 = serializableMap0.containsValue((java.lang.Object) serializableMap68);
        int int75 = serializableMap68.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(serializableEntryItor9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(serializableMap15);
        org.junit.Assert.assertNotNull(serializableItor16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(serializableSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test748");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = serializableMap0.remove((java.lang.Object) serializableMap7, obj18);
        java.util.Collection<java.lang.Object> objCollection21 = serializableMap7.values();
        java.lang.Class<?> wildcardClass22 = serializableMap7.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test749");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor12 = serializableMap0.mapIterator();
        serializableMap0.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet14 = serializableMap0.entrySet();
        serializableMap0.clear();
        java.lang.Class<?> wildcardClass16 = serializableMap0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
        org.junit.Assert.assertNotNull(serializableItor12);
        org.junit.Assert.assertNotNull(serializableEntrySet14);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test750");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.io.Serializable serializable6 = null;
        java.lang.Object obj8 = serializableMap0.putIfAbsent(serializable6, (java.lang.Object) 0);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        boolean boolean20 = serializableMap10.equals((java.lang.Object) (short) 1);
        serializableMap10.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int28 = serializableMap24.totalSize();
        serializableMap23.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj32 = serializableMap24.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj33 = serializableMap10.replace((java.io.Serializable) serializableMap22, (java.lang.Object) 1);
        java.lang.Object obj34 = serializableMap0.remove((java.lang.Object) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        int int46 = serializableMap36.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int52 = serializableMap48.totalSize();
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj56 = serializableMap48.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj58 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor59 = serializableMap36.iterator(obj58);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap60.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj66 = serializableMap60.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj68 = serializableMap60.get((java.lang.Object) 100.0d);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap60);
        int int70 = serializableMap35.size((java.lang.Object) serializableMap60);
        boolean boolean71 = serializableMap35.isEmpty();
        int int72 = serializableMap35.totalSize();
        boolean boolean73 = serializableMap0.equals((java.lang.Object) serializableMap35);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet74 = serializableMap35.entrySet();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor75 = serializableMap35.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(serializableEntrySet74);
        org.junit.Assert.assertNotNull(serializableItor75);
    }

    @Test
    public void test751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test751");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap5 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap6 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean9 = serializableMap6.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int10 = serializableMap6.totalSize();
        java.lang.Object obj12 = serializableMap6.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        boolean boolean23 = serializableMap13.equals((java.lang.Object) (short) 1);
        int int24 = serializableMap6.size((java.lang.Object) boolean23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int30 = serializableMap26.totalSize();
        serializableMap25.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        java.lang.Object obj34 = serializableMap26.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        boolean boolean36 = serializableMap6.containsValue((java.lang.Object) 1, (java.lang.Object) true);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor37 = serializableMap6.iterator();
        boolean boolean38 = serializableMap0.containsKey((java.lang.Object) serializableMap6);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.MultiMap<java.io.Serializable, java.lang.String>> serializableMap39 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        boolean boolean40 = serializableMap0.isEmpty();
        java.lang.String str41 = serializableMap0.toString();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(serializableMap5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(serializableMap39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{}" + "'", str41, "{}");
    }

    @Test
    public void test752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test752");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        java.lang.String str36 = serializableMap23.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj43 = serializableMap37.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        boolean boolean44 = serializableMap23.containsValue((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor45 = serializableMap23.mapIterator();
        java.util.Collection<java.lang.Object> objCollection46 = serializableMap23.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(serializableItor45);
        org.junit.Assert.assertNotNull(objCollection46);
    }

    @Test
    public void test753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test753");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        int int9 = serializableMap0.size();
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int15 = serializableMap11.totalSize();
        java.lang.Object obj17 = serializableMap11.get((java.lang.Object) (-1.0d));
        boolean boolean18 = serializableMap11.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean33 = serializableMap30.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean36 = serializableMap30.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int38 = serializableMap30.size((java.lang.Object) (short) -1);
        boolean boolean40 = serializableMap30.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        boolean boolean46 = serializableMap19.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList44);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj50 = serializableMap47.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = serializableMap19.putAll((java.io.Serializable) serializableMap47, (java.util.Collection<java.lang.String>) strList53);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj63 = serializableMap11.replace((java.io.Serializable) serializableMap19, (java.lang.Object) serializableMap56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        boolean boolean74 = serializableMap65.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        boolean boolean76 = serializableMap0.containsValue((java.lang.Object) serializableMap11);
        java.util.Collection<java.lang.Object> objCollection77 = serializableMap11.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objCollection77);
    }

    @Test
    public void test754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test754");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean2 = serializableMap0.equals((java.lang.Object) (short) 10);
        int int3 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap4 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int9 = serializableMap5.totalSize();
        serializableMap4.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap5);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj14 = serializableMap11.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection15 = serializableMap11.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap16 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean19 = serializableMap16.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean22 = serializableMap16.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int24 = serializableMap16.size((java.lang.Object) (short) -1);
        int int26 = serializableMap16.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap29 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap29.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int33 = serializableMap29.totalSize();
        serializableMap28.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap29);
        java.lang.Object obj37 = serializableMap29.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean44 = serializableMap38.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean46 = serializableMap38.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int52 = serializableMap48.totalSize();
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj56 = serializableMap48.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj57 = serializableMap38.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor58 = serializableMap29.iterator((java.lang.Object) serializableMap38);
        java.lang.Object obj59 = serializableMap16.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor58);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean67 = serializableMap61.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int68 = serializableMap61.size();
        boolean boolean69 = serializableMap11.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap61);
        serializableMap4.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap61);
        boolean boolean71 = serializableMap0.containsKey((java.lang.Object) serializableMap61);
        java.util.Set<java.io.Serializable> serializableSet72 = serializableMap0.keySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(serializableSet72);
    }

    @Test
    public void test755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test755");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        serializableMap0.clear();
        int int10 = serializableMap0.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test756");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor12 = serializableMap0.mapIterator();
        boolean boolean13 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj20 = serializableMap14.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj22 = serializableMap14.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection23 = serializableMap14.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean30 = serializableMap24.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int32 = serializableMap24.size((java.lang.Object) (short) -1);
        int int34 = serializableMap24.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int40 = serializableMap36.totalSize();
        serializableMap35.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap36);
        java.lang.Object obj44 = serializableMap36.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap36);
        java.lang.Object obj46 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor47 = serializableMap24.iterator(obj46);
        java.util.Set<java.io.Serializable> serializableSet48 = serializableMap24.keySet();
        serializableMap14.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj50 = null;
        int int51 = serializableMap14.size(obj50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean58 = serializableMap52.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean60 = serializableMap52.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj64 = serializableMap61.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap65.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection70 = serializableMap65.values();
        boolean boolean71 = serializableMap52.remove(obj64, (java.lang.Object) serializableMap65);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor72 = serializableMap52.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor73 = serializableMap52.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor74 = serializableMap52.mapIterator();
        java.lang.Object obj75 = serializableMap14.remove((java.lang.Object) serializableItor74);
        java.lang.Object obj76 = serializableMap0.remove(obj75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
        org.junit.Assert.assertNotNull(serializableItor12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(serializableSet48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor72);
        org.junit.Assert.assertNotNull(serializableEntryItor73);
        org.junit.Assert.assertNotNull(serializableItor74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test757");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.io.Serializable serializable6 = null;
        java.lang.Object obj8 = serializableMap0.putIfAbsent(serializable6, (java.lang.Object) 0);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        boolean boolean20 = serializableMap10.equals((java.lang.Object) (short) 1);
        serializableMap10.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int28 = serializableMap24.totalSize();
        serializableMap23.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj32 = serializableMap24.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj33 = serializableMap10.replace((java.io.Serializable) serializableMap22, (java.lang.Object) 1);
        java.lang.Object obj34 = serializableMap0.remove((java.lang.Object) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        int int46 = serializableMap36.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int52 = serializableMap48.totalSize();
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj56 = serializableMap48.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj58 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor59 = serializableMap36.iterator(obj58);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap60.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj66 = serializableMap60.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj68 = serializableMap60.get((java.lang.Object) 100.0d);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap60);
        int int70 = serializableMap35.size((java.lang.Object) serializableMap60);
        boolean boolean71 = serializableMap35.isEmpty();
        int int72 = serializableMap35.totalSize();
        boolean boolean73 = serializableMap0.equals((java.lang.Object) serializableMap35);
        java.lang.Class<?> wildcardClass74 = serializableMap35.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test758");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        boolean boolean27 = serializableMap0.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj31 = serializableMap28.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap0.putAll((java.io.Serializable) serializableMap28, (java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean42 = serializableMap38.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int44 = serializableMap38.size((java.lang.Object) 10);
        java.lang.Object obj45 = serializableMap28.putIfAbsent((java.io.Serializable) (short) -1, (java.lang.Object) serializableMap38);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor46 = serializableMap28.mapIterator();
        java.lang.String str47 = serializableMap28.toString();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet48 = serializableMap28.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{}");
        org.junit.Assert.assertNotNull(serializableItor46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{-1=[{}]}" + "'", str47, "{-1=[{}]}");
        org.junit.Assert.assertNotNull(serializableEntrySet48);
    }

    @Test
    public void test759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test759");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj12 = serializableMap9.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap13.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection18 = serializableMap13.values();
        boolean boolean19 = serializableMap0.remove(obj12, (java.lang.Object) serializableMap13);
        java.io.Serializable serializable20 = null;
        java.lang.Object obj22 = serializableMap0.put(serializable20, (java.lang.Object) (byte) 0);
        java.lang.Object obj23 = null;
        java.lang.Object obj24 = serializableMap0.get(obj23);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 0 + "'", obj22, (byte) 0);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[0]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[0]");
    }

    @Test
    public void test760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test760");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        java.lang.String str24 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int30 = serializableMap26.totalSize();
        serializableMap25.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        boolean boolean35 = serializableMap26.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap36 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap26);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>> wildcardClassMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Class<?>, org.apache.commons.collections4.IterableMap<java.io.Serializable, java.lang.Object>>();
        java.lang.Object obj38 = serializableMap0.getOrDefault((java.lang.Object) serializableMap26, (java.lang.Object) wildcardClassMap37);
        boolean boolean40 = serializableMap26.equals((java.lang.Object) 10L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(serializableMap36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test761");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet7 = serializableMap0.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean15 = serializableMap9.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int17 = serializableMap9.size((java.lang.Object) (short) -1);
        int int19 = serializableMap9.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int25 = serializableMap21.totalSize();
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap21);
        java.lang.Object obj29 = serializableMap21.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap21);
        java.lang.Object obj31 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor32 = serializableMap9.iterator(obj31);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj39 = serializableMap33.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj41 = serializableMap33.get((java.lang.Object) 100.0d);
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        int int43 = serializableMap8.size((java.lang.Object) serializableMap33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean50 = serializableMap44.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int52 = serializableMap44.size((java.lang.Object) (short) -1);
        int int54 = serializableMap44.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean74 = serializableMap66.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int80 = serializableMap76.totalSize();
        serializableMap75.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap76);
        java.lang.Object obj84 = serializableMap76.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj85 = serializableMap66.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor86 = serializableMap57.iterator((java.lang.Object) serializableMap66);
        java.lang.Object obj87 = serializableMap44.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor86);
        java.util.Iterator<java.lang.String> strItor88 = serializableMap8.iterator((java.lang.Object) serializableMap44);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor89 = serializableMap44.iterator();
        java.lang.Object obj91 = serializableMap0.put((java.io.Serializable) serializableMap44, (java.lang.Object) (short) 10);
        java.util.Set<java.io.Serializable> serializableSet92 = serializableMap44.keySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(serializableEntrySet7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(serializableEntryItor89);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertNotNull(serializableSet92);
    }

    @Test
    public void test762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test762");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap9 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        boolean boolean20 = serializableMap10.equals((java.lang.Object) (short) 1);
        serializableMap10.clear();
        java.util.Set<java.io.Serializable> serializableSet22 = serializableMap10.keySet();
        serializableMap10.clear();
        java.util.Collection<java.lang.String> strCollection24 = serializableMap0.getCollection((java.lang.Object) serializableMap10);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet25 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(serializableMap9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serializableSet22);
        org.junit.Assert.assertNull(strCollection24);
        org.junit.Assert.assertNotNull(serializableEntrySet25);
    }

    @Test
    public void test763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test763");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.io.Serializable serializable6 = null;
        java.lang.Object obj8 = serializableMap0.putIfAbsent(serializable6, (java.lang.Object) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean15 = serializableMap9.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int17 = serializableMap9.size((java.lang.Object) (short) -1);
        boolean boolean19 = serializableMap9.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap9.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        boolean boolean47 = serializableMap37.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap48.size((java.lang.Object) (short) -1);
        boolean boolean58 = serializableMap48.equals((java.lang.Object) (short) 1);
        serializableMap48.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int66 = serializableMap62.totalSize();
        serializableMap61.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj70 = serializableMap62.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj71 = serializableMap48.replace((java.io.Serializable) serializableMap60, (java.lang.Object) 1);
        boolean boolean72 = serializableMap37.equals((java.lang.Object) serializableMap60);
        boolean boolean74 = serializableMap9.containsValue((java.lang.Object) serializableMap37, (java.lang.Object) "");
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = serializableMap0.containsValue((java.lang.Object) serializableMap9, obj75);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap79 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean82 = serializableMap79.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int83 = serializableMap79.totalSize();
        serializableMap78.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap79);
        java.lang.Object obj87 = serializableMap79.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap79.clear();
        serializableMap79.clear();
        boolean boolean90 = serializableMap9.containsValue((java.lang.Object) serializableMap79);
        java.lang.Object obj91 = null;
        java.lang.Object obj92 = serializableMap9.get(obj91);
        java.util.Set<java.io.Serializable> serializableSet93 = serializableMap9.keySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 100L + "'", obj87, 100L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNotNull(serializableSet93);
    }

    @Test
    public void test764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test764");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.util.Set<java.io.Serializable> serializableSet6 = serializableMap0.keySet();
        java.util.Set<java.io.Serializable> serializableSet7 = serializableMap0.keySet();
        int int9 = serializableMap0.size((java.lang.Object) 0);
        boolean boolean10 = serializableMap0.isEmpty();
        serializableMap0.clear();
        boolean boolean12 = serializableMap0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test765");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj19 = serializableMap0.get((java.lang.Object) 1);
        int int20 = serializableMap0.size();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int27 = serializableMap23.totalSize();
        serializableMap22.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap23);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet29 = serializableMap22.entrySet();
        boolean boolean30 = serializableMap0.containsValue((java.lang.Object) 100.0f, (java.lang.Object) serializableMap22);
        int int31 = serializableMap0.size();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj35 = serializableMap32.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection36 = serializableMap32.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        int int47 = serializableMap37.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int54 = serializableMap50.totalSize();
        serializableMap49.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        java.lang.Object obj58 = serializableMap50.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean65 = serializableMap59.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean67 = serializableMap59.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap69 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean72 = serializableMap69.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int73 = serializableMap69.totalSize();
        serializableMap68.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap69);
        java.lang.Object obj77 = serializableMap69.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj78 = serializableMap59.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor79 = serializableMap50.iterator((java.lang.Object) serializableMap59);
        java.lang.Object obj80 = serializableMap37.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor79);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean85 = serializableMap82.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean88 = serializableMap82.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int89 = serializableMap82.size();
        boolean boolean90 = serializableMap32.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap82);
        java.lang.Object obj91 = null;
        java.lang.Object obj92 = serializableMap0.putIfAbsent((java.io.Serializable) boolean90, obj91);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableEntrySet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 100L + "'", obj77, 100L);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(strItor79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test766");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        boolean boolean18 = serializableMap8.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = serializableMap8.putAll((java.io.Serializable) serializableMap36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj52 = serializableMap0.replace((java.io.Serializable) serializableMap8, (java.lang.Object) serializableMap45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean59 = serializableMap53.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int61 = serializableMap53.size((java.lang.Object) (short) -1);
        int int63 = serializableMap53.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        java.lang.Object obj73 = serializableMap65.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap53.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj82 = serializableMap76.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj83 = serializableMap53.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int84 = serializableMap8.size(obj83);
        boolean boolean85 = serializableMap8.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object>> serializableMap86 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap8);
        boolean boolean87 = serializableMap86.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 1 + "'", obj83, (byte) 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(serializableMap86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test767");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor12 = serializableMap0.mapIterator();
        serializableMap0.clear();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet14 = serializableMap0.entrySet();
        java.lang.Object obj15 = null;
        java.util.Collection<java.lang.String> strCollection16 = serializableMap0.getCollection(obj15);
        boolean boolean17 = serializableMap0.isEmpty();
        serializableMap0.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
        org.junit.Assert.assertNotNull(serializableItor12);
        org.junit.Assert.assertNotNull(serializableEntrySet14);
        org.junit.Assert.assertNull(strCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test768");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        boolean boolean19 = serializableMap10.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap20.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean48 = serializableMap0.putAll((java.io.Serializable) serializableMap10, (java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap49.size();
        java.util.Collection<java.lang.Object> objCollection57 = serializableMap49.values();
        boolean boolean58 = serializableMap10.containsValue((java.lang.Object) serializableMap49);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor59 = serializableMap49.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(serializableItor59);
    }

    @Test
    public void test769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test769");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.RandomAccess> serializableMap9 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableMap9);
    }

    @Test
    public void test770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test770");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean7 = serializableMap1.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int9 = serializableMap1.size((java.lang.Object) (short) -1);
        int int11 = serializableMap1.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int17 = serializableMap13.totalSize();
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj21 = serializableMap13.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj23 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor24 = serializableMap1.iterator(obj23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj31 = serializableMap25.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj33 = serializableMap25.get((java.lang.Object) 100.0d);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        int int35 = serializableMap0.size((java.lang.Object) serializableMap25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        int int46 = serializableMap36.size((java.lang.Object) (byte) 1);
        boolean boolean49 = serializableMap36.remove((java.lang.Object) (short) 100, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj56 = serializableMap50.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj58 = serializableMap50.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection59 = serializableMap50.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap60.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean66 = serializableMap60.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int68 = serializableMap60.size((java.lang.Object) (short) -1);
        int int70 = serializableMap60.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean75 = serializableMap72.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int76 = serializableMap72.totalSize();
        serializableMap71.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap72);
        java.lang.Object obj80 = serializableMap72.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap60.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap72);
        java.lang.Object obj82 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor83 = serializableMap60.iterator(obj82);
        java.util.Set<java.io.Serializable> serializableSet84 = serializableMap60.keySet();
        serializableMap50.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap60);
        java.lang.Object obj86 = serializableMap0.put((java.io.Serializable) serializableMap36, (java.lang.Object) serializableMap60);
        int int87 = serializableMap60.totalSize();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertNotNull(strItor83);
        org.junit.Assert.assertNotNull(serializableSet84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{1=[100]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{1=[100]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{1=[100]}");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test771");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        boolean boolean19 = serializableMap10.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap20.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean48 = serializableMap0.putAll((java.io.Serializable) serializableMap10, (java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap49.size();
        java.util.Collection<java.lang.Object> objCollection57 = serializableMap49.values();
        boolean boolean58 = serializableMap10.containsValue((java.lang.Object) serializableMap49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap59.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection64 = serializableMap59.values();
        java.util.Set<java.io.Serializable> serializableSet65 = serializableMap59.keySet();
        boolean boolean66 = serializableMap10.containsKey((java.lang.Object) serializableMap59);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap67 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int76 = serializableMap68.size((java.lang.Object) (short) -1);
        int int78 = serializableMap68.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap79 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean83 = serializableMap80.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int84 = serializableMap80.totalSize();
        serializableMap79.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap80);
        java.lang.Object obj88 = serializableMap80.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap68.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap80);
        java.lang.Object obj90 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor91 = serializableMap68.iterator(obj90);
        java.lang.Object obj92 = null;
        java.lang.Object obj93 = serializableMap67.replace((java.io.Serializable) serializableMap68, obj92);
        java.util.Set<java.io.Serializable> serializableSet94 = serializableMap67.keySet();
        java.lang.String str95 = serializableMap67.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNotNull(serializableSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(serializableMap67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 100L + "'", obj88, 100L);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(serializableSet94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "{}" + "'", str95, "{}");
    }

    @Test
    public void test772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test772");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        boolean boolean11 = serializableMap0.isEmpty();
        int int12 = serializableMap0.size();
        boolean boolean13 = serializableMap0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test773");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.lang.Object obj34 = null;
        java.util.Iterator<java.lang.String> strItor35 = serializableMap0.iterator(obj34);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor36 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertNotNull(serializableEntryItor36);
    }

    @Test
    public void test774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test774");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj19 = serializableMap0.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> serializableMap20 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor21 = serializableMap20.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        int int23 = serializableMap22.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(serializableMap20);
        org.junit.Assert.assertNotNull(serializableItor21);
        org.junit.Assert.assertNotNull(serializableMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test775");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean16 = serializableMap8.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int22 = serializableMap18.totalSize();
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap18);
        java.lang.Object obj26 = serializableMap17.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean33 = serializableMap27.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int35 = serializableMap27.size((java.lang.Object) (short) -1);
        boolean boolean36 = serializableMap17.containsValue((java.lang.Object) serializableMap27);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap38);
        java.lang.Object obj46 = serializableMap38.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean53 = serializableMap47.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean55 = serializableMap47.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj66 = serializableMap47.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor67 = serializableMap38.iterator((java.lang.Object) serializableMap47);
        serializableMap38.clear();
        boolean boolean69 = serializableMap0.replace((java.io.Serializable) boolean16, (java.lang.Object) serializableMap27, (java.lang.Object) serializableMap38);
        java.util.Collection<java.lang.Object> objCollection70 = serializableMap38.values();
        boolean boolean71 = serializableMap38.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10.0d + "'", obj26, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test776");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int10 = serializableMap2.size((java.lang.Object) (short) -1);
        boolean boolean12 = serializableMap2.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        boolean boolean23 = serializableMap13.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = serializableMap2.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList27);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj33 = serializableMap30.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = serializableMap2.putAll((java.io.Serializable) serializableMap30, (java.util.Collection<java.lang.String>) strList36);
        java.lang.Object obj39 = serializableMap0.get((java.lang.Object) serializableMap30);
        serializableMap30.clear();
        java.util.Collection<java.lang.String> strCollection42 = serializableMap30.getCollection((java.lang.Object) 10L);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet43 = serializableMap30.entrySet();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(strCollection42);
        org.junit.Assert.assertNotNull(serializableEntrySet43);
    }

    @Test
    public void test777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test777");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor24 = serializableMap12.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        serializableMap25.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap38);
        java.lang.Object obj46 = serializableMap38.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean53 = serializableMap47.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean55 = serializableMap47.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj66 = serializableMap47.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor67 = serializableMap38.iterator((java.lang.Object) serializableMap47);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor68 = serializableMap38.iterator();
        java.lang.Object obj69 = serializableMap12.putIfAbsent((java.io.Serializable) serializableMap25, (java.lang.Object) serializableEntryItor68);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean73 = serializableMap70.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean76 = serializableMap70.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int78 = serializableMap70.size((java.lang.Object) (short) -1);
        int int80 = serializableMap70.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean85 = serializableMap82.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int86 = serializableMap82.totalSize();
        serializableMap81.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap82);
        java.lang.Object obj90 = serializableMap82.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap70.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap82);
        boolean boolean93 = serializableMap25.containsValue((java.lang.Object) serializableMap82, (java.lang.Object) 1.0f);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet94 = serializableMap25.entrySet();
        java.lang.Object obj95 = null;
        int int96 = serializableMap25.size(obj95);
        org.apache.commons.collections4.map.MultiValueMap<java.util.AbstractCollection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionMap97 = new org.apache.commons.collections4.map.MultiValueMap<java.util.AbstractCollection<java.lang.String>, java.util.AbstractList<java.lang.String>>();
        boolean boolean98 = serializableMap25.containsValue((java.lang.Object) strCollectionMap97);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Cloneable> serializableMap99 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(serializableEntryItor68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(serializableMap99);
    }

    @Test
    public void test778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test778");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor5 = serializableMap0.mapIterator();
        serializableMap0.clear();
        java.lang.String str7 = serializableMap0.toString();
        boolean boolean8 = serializableMap0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serializableItor5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test779");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.String str4 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor6 = serializableMap5.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean24 = serializableMap18.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int26 = serializableMap18.size((java.lang.Object) (short) -1);
        boolean boolean28 = serializableMap18.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        boolean boolean34 = serializableMap7.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList32);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj38 = serializableMap35.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        boolean boolean43 = serializableMap7.putAll((java.io.Serializable) serializableMap35, (java.util.Collection<java.lang.String>) strList41);
        java.lang.Object obj44 = serializableMap5.get((java.lang.Object) serializableMap35);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean51 = serializableMap45.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int53 = serializableMap45.size((java.lang.Object) (short) -1);
        int int55 = serializableMap45.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj67 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor68 = serializableMap45.iterator(obj67);
        java.lang.Object obj69 = serializableMap5.remove(obj67);
        int int70 = serializableMap5.size();
        boolean boolean71 = serializableMap0.containsValue((java.lang.Object) serializableMap5);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet72 = serializableMap0.entrySet();
        int int73 = serializableMap0.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(serializableItor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test780");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap9 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        boolean boolean20 = serializableMap10.equals((java.lang.Object) (short) 1);
        serializableMap10.clear();
        java.util.Set<java.io.Serializable> serializableSet22 = serializableMap10.keySet();
        serializableMap10.clear();
        java.util.Collection<java.lang.String> strCollection24 = serializableMap0.getCollection((java.lang.Object) serializableMap10);
        java.util.Set<java.io.Serializable> serializableSet25 = serializableMap10.keySet();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor26 = serializableMap10.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(serializableMap9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serializableSet22);
        org.junit.Assert.assertNull(strCollection24);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertNotNull(serializableEntryItor26);
    }

    @Test
    public void test781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test781");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap5 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor6 = serializableMap5.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        int int18 = serializableMap8.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor19 = serializableMap8.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap20.equals((java.lang.Object) (short) 10);
        int int23 = serializableMap20.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean42 = serializableMap34.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int48 = serializableMap44.totalSize();
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj52 = serializableMap44.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj53 = serializableMap34.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor54 = serializableMap25.iterator((java.lang.Object) serializableMap34);
        java.lang.Object obj55 = serializableMap8.putIfAbsent((java.io.Serializable) int23, (java.lang.Object) strItor54);
        java.lang.Object obj56 = serializableMap5.putIfAbsent((java.io.Serializable) (short) 10, (java.lang.Object) serializableMap8);
        boolean boolean57 = serializableMap8.isEmpty();
        java.util.Collection<java.lang.Object> objCollection58 = serializableMap8.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(serializableMap5);
        org.junit.Assert.assertNotNull(serializableItor6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
    }

    @Test
    public void test782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test782");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj12 = serializableMap9.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap13.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection18 = serializableMap13.values();
        boolean boolean19 = serializableMap0.remove(obj12, (java.lang.Object) serializableMap13);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor20 = serializableMap0.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor21 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor22 = serializableMap0.mapIterator();
        java.lang.Object obj23 = null;
        boolean boolean24 = serializableMap0.containsValue(obj23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap25.equals((java.lang.Object) (short) 10);
        java.util.Set<java.io.Serializable> serializableSet28 = serializableMap25.keySet();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor29 = serializableMap25.mapIterator();
        boolean boolean30 = serializableMap0.equals((java.lang.Object) serializableMap25);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor20);
        org.junit.Assert.assertNotNull(serializableEntryItor21);
        org.junit.Assert.assertNotNull(serializableItor22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(serializableSet28);
        org.junit.Assert.assertNotNull(serializableItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test783");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap5 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        java.io.Serializable serializable6 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int11 = serializableMap7.totalSize();
        java.lang.Object obj13 = serializableMap7.get((java.lang.Object) (-1.0d));
        java.lang.Object obj14 = serializableMap5.putIfAbsent(serializable6, obj13);
        java.util.Set<java.io.Serializable> serializableSet15 = serializableMap5.keySet();
        boolean boolean16 = serializableMap5.isEmpty();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(serializableMap5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test784");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int11 = serializableMap7.totalSize();
        java.lang.Object obj13 = serializableMap7.get((java.lang.Object) (-1.0d));
        boolean boolean14 = serializableMap7.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap15 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean18 = serializableMap15.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean21 = serializableMap15.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int23 = serializableMap15.size((java.lang.Object) (short) -1);
        boolean boolean25 = serializableMap15.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean32 = serializableMap26.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int34 = serializableMap26.size((java.lang.Object) (short) -1);
        boolean boolean36 = serializableMap26.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = serializableMap15.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList40);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj46 = serializableMap43.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        boolean boolean51 = serializableMap15.putAll((java.io.Serializable) serializableMap43, (java.util.Collection<java.lang.String>) strList49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap53 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean56 = serializableMap53.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int57 = serializableMap53.totalSize();
        serializableMap52.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap53);
        java.lang.Object obj59 = serializableMap7.replace((java.io.Serializable) serializableMap15, (java.lang.Object) serializableMap52);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap61.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int65 = serializableMap61.totalSize();
        serializableMap60.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap61);
        boolean boolean70 = serializableMap61.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        serializableMap7.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap61);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet72 = serializableMap7.entrySet();
        java.lang.Object obj73 = serializableMap0.get((java.lang.Object) serializableMap7);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor74 = serializableMap0.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(serializableItor74);
    }

    @Test
    public void test785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test785");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Set<java.io.Serializable> serializableSet5 = serializableMap0.keySet();
        java.util.Collection<java.lang.Object> objCollection6 = serializableMap0.values();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertNotNull(objCollection6);
    }

    @Test
    public void test786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test786");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        int int18 = serializableMap0.size((java.lang.Object) boolean17);
        java.util.Collection<java.lang.Object> objCollection19 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.ArrayList<java.lang.String>> serializableMap20 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        int int21 = serializableMap0.size();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor22 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(serializableMap20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor22);
    }

    @Test
    public void test787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test787");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        int int18 = serializableMap0.size((java.lang.Object) boolean17);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int25 = serializableMap21.totalSize();
        serializableMap20.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap21);
        java.lang.Object obj29 = serializableMap20.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean33 = serializableMap30.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean36 = serializableMap30.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int38 = serializableMap30.size((java.lang.Object) (short) -1);
        boolean boolean39 = serializableMap20.containsValue((java.lang.Object) serializableMap30);
        boolean boolean40 = serializableMap0.containsValue((java.lang.Object) '4', (java.lang.Object) boolean39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean47 = serializableMap41.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int48 = serializableMap41.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor49 = serializableMap41.mapIterator();
        boolean boolean50 = serializableMap0.containsValue((java.lang.Object) serializableMap41);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor51 = serializableMap0.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0d + "'", obj29, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(serializableItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(serializableItor51);
    }

    @Test
    public void test788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test788");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.String str7 = serializableMap0.toString();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor8 = serializableMap0.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet9 = serializableMap0.entrySet();
        java.lang.Class<?> wildcardClass10 = serializableMap0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertNotNull(serializableEntrySet9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test789");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int7 = serializableMap0.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor8 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean15 = serializableMap9.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap9.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor17 = serializableMap9.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean24 = serializableMap18.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int25 = serializableMap18.size();
        java.util.Collection<java.lang.Object> objCollection26 = serializableMap18.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean31 = serializableMap27.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection32 = serializableMap27.values();
        java.io.Serializable serializable33 = null;
        java.lang.Object obj35 = serializableMap27.putIfAbsent(serializable33, (java.lang.Object) 0);
        serializableMap27.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int45 = serializableMap37.size((java.lang.Object) (short) -1);
        boolean boolean47 = serializableMap37.equals((java.lang.Object) (short) 1);
        serializableMap37.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean54 = serializableMap51.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int55 = serializableMap51.totalSize();
        serializableMap50.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap51);
        java.lang.Object obj59 = serializableMap51.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj60 = serializableMap37.replace((java.io.Serializable) serializableMap49, (java.lang.Object) 1);
        java.lang.Object obj61 = serializableMap27.remove((java.lang.Object) serializableMap37);
        java.util.Iterator<java.lang.String> strItor62 = serializableMap18.iterator(obj61);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet63 = serializableMap18.entrySet();
        boolean boolean64 = serializableMap0.removeMapping((java.lang.Object) serializableItor17, (java.lang.Object) serializableMap18);
        int int65 = serializableMap18.size();
        java.lang.String str66 = serializableMap18.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean70 = serializableMap67.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj73 = serializableMap67.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.String str74 = serializableMap67.toString();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor75 = serializableMap67.mapIterator();
        java.lang.String str76 = serializableMap67.toString();
        serializableMap67.clear();
        serializableMap18.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap67);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(serializableItor17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(serializableEntrySet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{}" + "'", str74, "{}");
        org.junit.Assert.assertNotNull(serializableItor75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{}" + "'", str76, "{}");
    }

    @Test
    public void test790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test790");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap9.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection14 = serializableMap9.values();
        java.io.Serializable serializable15 = null;
        java.lang.Object obj17 = serializableMap9.putIfAbsent(serializable15, (java.lang.Object) 0);
        java.lang.Object obj18 = null;
        boolean boolean19 = serializableMap0.remove((java.lang.Object) 0, obj18);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        int int30 = serializableMap20.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int37 = serializableMap33.totalSize();
        serializableMap32.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj41 = serializableMap33.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean45 = serializableMap42.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean48 = serializableMap42.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean50 = serializableMap42.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int56 = serializableMap52.totalSize();
        serializableMap51.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        java.lang.Object obj60 = serializableMap52.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj61 = serializableMap42.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor62 = serializableMap33.iterator((java.lang.Object) serializableMap42);
        java.lang.Object obj63 = serializableMap20.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor62);
        int int64 = serializableMap0.size((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj68 = serializableMap65.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        boolean boolean69 = serializableMap0.equals((java.lang.Object) 0.0f);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor71 = serializableMap70.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet72 = serializableMap70.entrySet();
        int int73 = serializableMap70.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap70);
        org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.RandomAccess> objMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.lang.Object, java.util.RandomAccess>();
        java.lang.Class<?> wildcardClass76 = objMap75.getClass();
        java.util.Iterator<java.lang.String> strItor77 = serializableMap70.iterator((java.lang.Object) objMap75);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Iterable<java.lang.Object>> serializableMap78 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap70);
        java.lang.Class<?> wildcardClass79 = serializableMap78.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(serializableItor71);
        org.junit.Assert.assertNotNull(serializableEntrySet72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strItor77);
        org.junit.Assert.assertNotNull(serializableMap78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test791");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj29 = serializableMap23.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj30 = serializableMap0.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int31 = serializableMap0.totalSize();
        java.lang.String str32 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.io.Serializable> serializableMap33 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 1 + "'", obj30, (byte) 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{1=[100]}" + "'", str32, "{1=[100]}");
        org.junit.Assert.assertNotNull(serializableMap33);
    }

    @Test
    public void test792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test792");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean30 = serializableMap24.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int32 = serializableMap24.size((java.lang.Object) (short) -1);
        int int34 = serializableMap24.size((java.lang.Object) (byte) 1);
        java.lang.Object obj35 = serializableMap0.remove((java.lang.Object) serializableMap24);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object>> serializableMap36 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor37 = serializableMap24.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(serializableMap36);
        org.junit.Assert.assertNotNull(serializableItor37);
    }

    @Test
    public void test793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test793");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean10 = serializableMap2.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj21 = serializableMap2.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        boolean boolean32 = serializableMap22.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int41 = serializableMap33.size((java.lang.Object) (short) -1);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = serializableMap22.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj53 = serializableMap50.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        boolean boolean58 = serializableMap22.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap60.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int66 = serializableMap60.size((java.lang.Object) 10);
        java.lang.Object obj67 = serializableMap50.putIfAbsent((java.io.Serializable) (short) -1, (java.lang.Object) serializableMap60);
        java.lang.Object obj68 = serializableMap0.replace((java.io.Serializable) serializableMap2, (java.lang.Object) serializableMap50);
        java.lang.String str69 = serializableMap0.toString();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet70 = serializableMap0.entrySet();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet71 = serializableMap0.entrySet();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
        org.junit.Assert.assertNotNull(serializableEntrySet70);
        org.junit.Assert.assertNotNull(serializableEntrySet71);
    }

    @Test
    public void test794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test794");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean10 = serializableMap2.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj21 = serializableMap2.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        boolean boolean32 = serializableMap22.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int41 = serializableMap33.size((java.lang.Object) (short) -1);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = serializableMap22.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj53 = serializableMap50.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        boolean boolean58 = serializableMap22.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap60.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int66 = serializableMap60.size((java.lang.Object) 10);
        java.lang.Object obj67 = serializableMap50.putIfAbsent((java.io.Serializable) (short) -1, (java.lang.Object) serializableMap60);
        java.lang.Object obj68 = serializableMap0.replace((java.io.Serializable) serializableMap2, (java.lang.Object) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap69 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean72 = serializableMap69.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean75 = serializableMap69.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean77 = serializableMap69.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj81 = serializableMap78.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean86 = serializableMap82.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection87 = serializableMap82.values();
        boolean boolean88 = serializableMap69.remove(obj81, (java.lang.Object) serializableMap82);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor89 = serializableMap69.iterator();
        java.util.Collection<java.lang.String> strCollection90 = serializableMap0.getCollection((java.lang.Object) serializableEntryItor89);
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objCollection87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor89);
        org.junit.Assert.assertNull(strCollection90);
    }

    @Test
    public void test795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test795");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor24 = serializableMap12.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        serializableMap25.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap38);
        java.lang.Object obj46 = serializableMap38.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean53 = serializableMap47.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean55 = serializableMap47.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj66 = serializableMap47.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor67 = serializableMap38.iterator((java.lang.Object) serializableMap47);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor68 = serializableMap38.iterator();
        java.lang.Object obj69 = serializableMap12.putIfAbsent((java.io.Serializable) serializableMap25, (java.lang.Object) serializableEntryItor68);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean73 = serializableMap70.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean76 = serializableMap70.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int78 = serializableMap70.size((java.lang.Object) (short) -1);
        int int80 = serializableMap70.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean85 = serializableMap82.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int86 = serializableMap82.totalSize();
        serializableMap81.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap82);
        java.lang.Object obj90 = serializableMap82.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap70.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap82);
        boolean boolean93 = serializableMap25.containsValue((java.lang.Object) serializableMap82, (java.lang.Object) 1.0f);
        java.util.Collection<java.lang.Object> objCollection94 = serializableMap82.values();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet95 = serializableMap82.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(serializableEntryItor68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objCollection94);
        org.junit.Assert.assertNotNull(serializableEntrySet95);
    }

    @Test
    public void test796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test796");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int10 = serializableMap2.size((java.lang.Object) (short) -1);
        boolean boolean12 = serializableMap2.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        boolean boolean23 = serializableMap13.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = serializableMap2.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList27);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj33 = serializableMap30.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = serializableMap2.putAll((java.io.Serializable) serializableMap30, (java.util.Collection<java.lang.String>) strList36);
        java.lang.Object obj39 = serializableMap0.get((java.lang.Object) serializableMap30);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap40 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean43 = serializableMap40.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean46 = serializableMap40.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int48 = serializableMap40.size((java.lang.Object) (short) -1);
        int int50 = serializableMap40.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int56 = serializableMap52.totalSize();
        serializableMap51.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        java.lang.Object obj60 = serializableMap52.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap40.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        java.lang.Object obj62 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor63 = serializableMap40.iterator(obj62);
        java.lang.Object obj64 = serializableMap0.remove(obj62);
        java.util.Set<java.io.Serializable> serializableSet65 = serializableMap0.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap66.equals((java.lang.Object) (short) 10);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet69 = serializableMap66.entrySet();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor70 = serializableMap66.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.reflect.Type> serializableMap71 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap66);
        java.lang.Object obj72 = serializableMap0.get((java.lang.Object) serializableMap71);
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(serializableSet65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet69);
        org.junit.Assert.assertNotNull(serializableItor70);
        org.junit.Assert.assertNotNull(serializableMap71);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test797");
        org.apache.commons.collections4.map.MultiValueMap<java.util.Collection<java.lang.Object>, java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>>> objCollectionMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.util.Collection<java.lang.Object>, java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>>>();
    }

    @Test
    public void test798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test798");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        serializableMap19.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj28 = serializableMap20.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj29 = serializableMap10.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor30 = serializableMap1.iterator((java.lang.Object) serializableMap10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        serializableMap31.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj40 = serializableMap31.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean47 = serializableMap41.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int49 = serializableMap41.size((java.lang.Object) (short) -1);
        boolean boolean50 = serializableMap31.containsValue((java.lang.Object) serializableMap41);
        boolean boolean51 = serializableMap41.isEmpty();
        java.util.Iterator<java.lang.String> strItor52 = serializableMap1.iterator((java.lang.Object) boolean51);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor53 = serializableMap1.iterator();
        org.apache.commons.collections4.map.MultiValueMap<org.apache.commons.collections4.Put<java.io.Serializable, java.lang.Object>, java.lang.Class<?>> serializablePutMap54 = new org.apache.commons.collections4.map.MultiValueMap<org.apache.commons.collections4.Put<java.io.Serializable, java.lang.Object>, java.lang.Class<?>>();
        boolean boolean55 = serializableMap1.equals((java.lang.Object) serializablePutMap54);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0d + "'", obj40, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertNotNull(serializableEntryItor53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test799");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.String str7 = serializableMap0.toString();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor8 = serializableMap0.mapIterator();
        java.lang.String str9 = serializableMap0.toString();
        serializableMap0.clear();
        java.util.Set<java.io.Serializable> serializableSet11 = serializableMap0.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertNotNull(serializableSet11);
    }

    @Test
    public void test800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test800");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean11 = serializableMap5.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int13 = serializableMap5.size((java.lang.Object) (short) -1);
        int int15 = serializableMap5.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int22 = serializableMap18.totalSize();
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap18);
        java.lang.Object obj26 = serializableMap18.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean33 = serializableMap27.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean35 = serializableMap27.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int41 = serializableMap37.totalSize();
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap37);
        java.lang.Object obj45 = serializableMap37.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj46 = serializableMap27.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor47 = serializableMap18.iterator((java.lang.Object) serializableMap27);
        java.lang.Object obj48 = serializableMap5.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean56 = serializableMap50.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int57 = serializableMap50.size();
        boolean boolean58 = serializableMap0.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean65 = serializableMap59.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int67 = serializableMap59.size((java.lang.Object) (short) -1);
        int int69 = serializableMap59.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor70 = serializableMap59.iterator();
        boolean boolean71 = serializableMap0.containsKey((java.lang.Object) serializableMap59);
        java.util.Collection<java.lang.Object> objCollection72 = serializableMap0.values();
        java.util.Collection<java.lang.Object> objCollection73 = serializableMap0.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(objCollection73);
    }

    @Test
    public void test801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test801");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        boolean boolean19 = serializableMap10.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap20.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean48 = serializableMap0.putAll((java.io.Serializable) serializableMap10, (java.util.Collection<java.lang.String>) strList45);
        java.util.Set<java.io.Serializable> serializableSet49 = serializableMap0.keySet();
        java.util.Collection<java.lang.Object> objCollection50 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int56 = serializableMap52.totalSize();
        serializableMap51.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        boolean boolean61 = serializableMap52.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap62 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap52);
        int int63 = serializableMap52.totalSize();
        java.lang.Object obj64 = serializableMap0.remove((java.lang.Object) int63);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(serializableSet49);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(serializableMap62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(obj64);
    }

    @Test
    public void test802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test802");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.io.Serializable serializable34 = null;
        java.lang.Object obj36 = serializableMap0.put(serializable34, (java.lang.Object) (short) 100);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean45 = serializableMap37.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int51 = serializableMap47.totalSize();
        serializableMap46.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        java.lang.Object obj55 = serializableMap47.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj56 = serializableMap37.get((java.lang.Object) 1);
        int int57 = serializableMap0.size((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.util.Set<java.io.Serializable> serializableSet62 = serializableMap58.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean66 = serializableMap63.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean69 = serializableMap63.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int71 = serializableMap63.size((java.lang.Object) (short) -1);
        boolean boolean73 = serializableMap63.equals((java.lang.Object) (short) 1);
        serializableMap63.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap77 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean80 = serializableMap77.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int81 = serializableMap77.totalSize();
        serializableMap76.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap77);
        java.lang.Object obj85 = serializableMap77.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj86 = serializableMap63.replace((java.io.Serializable) serializableMap75, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap87 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap75);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Cloneable> serializableMap88 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap87);
        java.lang.String str89 = serializableMap88.toString();
        java.lang.Object obj90 = serializableMap37.putIfAbsent((java.io.Serializable) serializableMap58, (java.lang.Object) serializableMap88);
        java.lang.String str91 = serializableMap88.toString();
        int int92 = serializableMap88.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 100 + "'", obj36, (short) 100);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(serializableSet62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 100L + "'", obj85, 100L);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(serializableMap87);
        org.junit.Assert.assertNotNull(serializableMap88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "{}" + "'", str89, "{}");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{}");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "{}" + "'", str91, "{}");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test803");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap8 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean11 = serializableMap8.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean14 = serializableMap8.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int16 = serializableMap8.size((java.lang.Object) (short) -1);
        boolean boolean18 = serializableMap8.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = serializableMap8.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = serializableMap8.putAll((java.io.Serializable) serializableMap36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int50 = serializableMap46.totalSize();
        serializableMap45.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap46);
        java.lang.Object obj52 = serializableMap0.replace((java.io.Serializable) serializableMap8, (java.lang.Object) serializableMap45);
        java.lang.Object obj55 = serializableMap45.putIfAbsent((java.io.Serializable) 0.0d, (java.lang.Object) (-1));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean74 = serializableMap66.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int80 = serializableMap76.totalSize();
        serializableMap75.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap76);
        java.lang.Object obj84 = serializableMap76.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj85 = serializableMap66.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor86 = serializableMap57.iterator((java.lang.Object) serializableMap66);
        serializableMap57.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap88 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean91 = serializableMap88.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj94 = serializableMap88.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj96 = serializableMap88.get((java.lang.Object) (short) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractList<java.lang.String>> serializableMap97 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap88);
        java.lang.Object obj98 = serializableMap45.putIfAbsent((java.io.Serializable) serializableMap57, (java.lang.Object) serializableMap88);
        int int99 = serializableMap45.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (-1) + "'", obj55, (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNotNull(serializableMap97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "{}");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 2 + "'", int99 == 2);
    }

    @Test
    public void test804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test804");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap2 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean5 = serializableMap2.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean8 = serializableMap2.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean10 = serializableMap2.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj21 = serializableMap2.get((java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap22.size((java.lang.Object) (short) -1);
        boolean boolean32 = serializableMap22.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean39 = serializableMap33.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int41 = serializableMap33.size((java.lang.Object) (short) -1);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = serializableMap22.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj53 = serializableMap50.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        boolean boolean58 = serializableMap22.putAll((java.io.Serializable) serializableMap50, (java.util.Collection<java.lang.String>) strList56);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean64 = serializableMap60.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        int int66 = serializableMap60.size((java.lang.Object) 10);
        java.lang.Object obj67 = serializableMap50.putIfAbsent((java.io.Serializable) (short) -1, (java.lang.Object) serializableMap60);
        java.lang.Object obj68 = serializableMap0.replace((java.io.Serializable) serializableMap2, (java.lang.Object) serializableMap50);
        java.lang.String str69 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean73 = serializableMap70.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj76 = serializableMap70.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj78 = serializableMap70.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.String> strCollection79 = serializableMap0.getCollection(obj78);
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(strCollection79);
    }

    @Test
    public void test805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test805");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        boolean boolean12 = serializableMap0.equals((java.lang.Object) ' ');
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet13 = serializableMap0.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean20 = serializableMap14.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap14.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor22 = serializableMap14.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean29 = serializableMap23.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int30 = serializableMap23.size();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor31 = serializableMap23.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean38 = serializableMap32.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap32.size();
        java.util.Collection<java.lang.Object> objCollection40 = serializableMap32.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean45 = serializableMap41.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection46 = serializableMap41.values();
        java.io.Serializable serializable47 = null;
        java.lang.Object obj49 = serializableMap41.putIfAbsent(serializable47, (java.lang.Object) 0);
        serializableMap41.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean54 = serializableMap51.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean57 = serializableMap51.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int59 = serializableMap51.size((java.lang.Object) (short) -1);
        boolean boolean61 = serializableMap51.equals((java.lang.Object) (short) 1);
        serializableMap51.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean68 = serializableMap65.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int69 = serializableMap65.totalSize();
        serializableMap64.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        java.lang.Object obj73 = serializableMap65.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj74 = serializableMap51.replace((java.io.Serializable) serializableMap63, (java.lang.Object) 1);
        java.lang.Object obj75 = serializableMap41.remove((java.lang.Object) serializableMap51);
        java.util.Iterator<java.lang.String> strItor76 = serializableMap32.iterator(obj75);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet77 = serializableMap32.entrySet();
        boolean boolean78 = serializableMap14.removeMapping((java.lang.Object) serializableItor31, (java.lang.Object) serializableMap32);
        boolean boolean79 = serializableMap32.isEmpty();
        java.util.Set<java.io.Serializable> serializableSet80 = serializableMap32.keySet();
        java.util.Iterator<java.lang.String> strItor81 = serializableMap0.iterator((java.lang.Object) serializableSet80);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableItor22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(serializableItor31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0 + "'", obj49, 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertNotNull(serializableEntrySet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(serializableSet80);
        org.junit.Assert.assertNotNull(strItor81);
    }

    @Test
    public void test806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test806");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean11 = serializableMap5.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int13 = serializableMap5.size((java.lang.Object) (short) -1);
        int int15 = serializableMap5.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int22 = serializableMap18.totalSize();
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap18);
        java.lang.Object obj26 = serializableMap18.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap27 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean30 = serializableMap27.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean33 = serializableMap27.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean35 = serializableMap27.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int41 = serializableMap37.totalSize();
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap37);
        java.lang.Object obj45 = serializableMap37.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj46 = serializableMap27.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor47 = serializableMap18.iterator((java.lang.Object) serializableMap27);
        java.lang.Object obj48 = serializableMap5.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor47);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean53 = serializableMap50.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean56 = serializableMap50.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int57 = serializableMap50.size();
        boolean boolean58 = serializableMap0.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap50);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.map.AbstractMapDecorator<java.io.Serializable, java.lang.Object>> serializableMap59 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap50);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor60 = serializableMap50.iterator();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(serializableMap59);
        org.junit.Assert.assertNotNull(serializableEntryItor60);
    }

    @Test
    public void test807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test807");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = serializableMap0.remove((java.lang.Object) serializableMap7, obj18);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean29 = serializableMap21.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap30 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int35 = serializableMap31.totalSize();
        serializableMap30.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap31);
        java.lang.Object obj39 = serializableMap31.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj40 = serializableMap21.get((java.lang.Object) 1);
        java.lang.Object obj41 = serializableMap0.get(obj40);
        boolean boolean42 = serializableMap0.isEmpty();
        int int43 = serializableMap0.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test808");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj8 = serializableMap5.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection9 = serializableMap5.values();
        java.util.Iterator<java.lang.String> strItor10 = serializableMap0.iterator((java.lang.Object) serializableMap5);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap11.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap11.containsValue((java.lang.Object) serializableMap21);
        boolean boolean31 = serializableMap21.isEmpty();
        boolean boolean32 = serializableMap21.isEmpty();
        serializableMap21.clear();
        boolean boolean34 = serializableMap0.containsValue((java.lang.Object) serializableMap21);
        java.util.Collection<java.lang.Object> objCollection35 = serializableMap0.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 10.0d + "'", obj20, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
    }

    @Test
    public void test809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test809");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = serializableMap0.remove((java.lang.Object) serializableMap7, obj18);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap21 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean24 = serializableMap21.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean27 = serializableMap21.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int29 = serializableMap21.size((java.lang.Object) (short) -1);
        boolean boolean31 = serializableMap21.equals((java.lang.Object) (short) 1);
        serializableMap21.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj44 = serializableMap21.replace((java.io.Serializable) serializableMap33, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor45 = serializableMap33.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean49 = serializableMap46.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean52 = serializableMap46.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int54 = serializableMap46.size((java.lang.Object) (short) -1);
        boolean boolean56 = serializableMap46.equals((java.lang.Object) (short) 1);
        serializableMap46.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj67 = serializableMap59.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean76 = serializableMap68.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap77 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap78 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean81 = serializableMap78.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int82 = serializableMap78.totalSize();
        serializableMap77.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap78);
        java.lang.Object obj86 = serializableMap78.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj87 = serializableMap68.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor88 = serializableMap59.iterator((java.lang.Object) serializableMap68);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor89 = serializableMap59.iterator();
        java.lang.Object obj90 = serializableMap33.putIfAbsent((java.io.Serializable) serializableMap46, (java.lang.Object) serializableEntryItor89);
        boolean boolean91 = serializableMap33.isEmpty();
        int int92 = serializableMap0.size((java.lang.Object) serializableMap33);
        java.lang.String str93 = serializableMap0.toString();
        java.util.Set<java.io.Serializable> serializableSet94 = serializableMap0.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(serializableItor45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(serializableEntryItor89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "{}" + "'", str93, "{}");
        org.junit.Assert.assertNotNull(serializableSet94);
    }

    @Test
    public void test810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test810");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        boolean boolean17 = serializableMap7.equals((java.lang.Object) (short) 1);
        int int18 = serializableMap0.size((java.lang.Object) boolean17);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap20.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj51 = serializableMap48.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        boolean boolean56 = serializableMap20.putAll((java.io.Serializable) serializableMap48, (java.util.Collection<java.lang.String>) strList54);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor57 = serializableMap20.iterator();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(serializableEntryItor57);
    }

    @Test
    public void test811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test811");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor24 = serializableMap12.mapIterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean31 = serializableMap25.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int33 = serializableMap25.size((java.lang.Object) (short) -1);
        boolean boolean35 = serializableMap25.equals((java.lang.Object) (short) 1);
        serializableMap25.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int42 = serializableMap38.totalSize();
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap38);
        java.lang.Object obj46 = serializableMap38.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean53 = serializableMap47.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean55 = serializableMap47.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int61 = serializableMap57.totalSize();
        serializableMap56.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap57);
        java.lang.Object obj65 = serializableMap57.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj66 = serializableMap47.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor67 = serializableMap38.iterator((java.lang.Object) serializableMap47);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor68 = serializableMap38.iterator();
        java.lang.Object obj69 = serializableMap12.putIfAbsent((java.io.Serializable) serializableMap25, (java.lang.Object) serializableEntryItor68);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean73 = serializableMap70.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean76 = serializableMap70.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int78 = serializableMap70.size((java.lang.Object) (short) -1);
        int int80 = serializableMap70.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap81 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean85 = serializableMap82.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int86 = serializableMap82.totalSize();
        serializableMap81.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap82);
        java.lang.Object obj90 = serializableMap82.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap70.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap82);
        boolean boolean93 = serializableMap25.containsValue((java.lang.Object) serializableMap82, (java.lang.Object) 1.0f);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet94 = serializableMap25.entrySet();
        java.lang.Object obj95 = null;
        int int96 = serializableMap25.size(obj95);
        org.apache.commons.collections4.map.MultiValueMap<java.util.AbstractCollection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionMap97 = new org.apache.commons.collections4.map.MultiValueMap<java.util.AbstractCollection<java.lang.String>, java.util.AbstractList<java.lang.String>>();
        boolean boolean98 = serializableMap25.containsValue((java.lang.Object) strCollectionMap97);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet99 = serializableMap25.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(serializableEntryItor68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet99);
    }

    @Test
    public void test812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test812");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        boolean boolean27 = serializableMap0.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj31 = serializableMap28.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap0.putAll((java.io.Serializable) serializableMap28, (java.util.Collection<java.lang.String>) strList34);
        int int37 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor39 = serializableMap38.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet40 = serializableMap38.entrySet();
        int int41 = serializableMap38.totalSize();
        java.util.Set<java.io.Serializable> serializableSet42 = serializableMap38.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean49 = serializableMap43.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int51 = serializableMap43.size((java.lang.Object) (short) -1);
        int int53 = serializableMap43.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap55.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int59 = serializableMap55.totalSize();
        serializableMap54.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap55);
        java.lang.Object obj63 = serializableMap55.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap55);
        java.lang.Object obj65 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor66 = serializableMap43.iterator(obj65);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean70 = serializableMap67.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj73 = serializableMap67.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj75 = serializableMap67.get((java.lang.Object) 100.0d);
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap67);
        java.lang.Object obj77 = null;
        java.util.Iterator<java.lang.String> strItor78 = serializableMap43.iterator(obj77);
        java.lang.Object obj79 = serializableMap38.get((java.lang.Object) strItor78);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean82 = serializableMap80.equals((java.lang.Object) (short) 10);
        java.util.Set<java.io.Serializable> serializableSet83 = serializableMap80.keySet();
        java.lang.Object obj84 = serializableMap0.put((java.io.Serializable) serializableMap38, (java.lang.Object) serializableMap80);
        java.util.Collection<java.lang.Object> objCollection85 = serializableMap38.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertNotNull(serializableItor39);
        org.junit.Assert.assertNotNull(serializableEntrySet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(serializableSet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(serializableSet83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "{}");
        org.junit.Assert.assertNotNull(objCollection85);
    }

    @Test
    public void test813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test813");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int17 = serializableMap13.totalSize();
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj21 = serializableMap13.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean25 = serializableMap22.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean28 = serializableMap22.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean30 = serializableMap22.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        serializableMap31.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap32);
        java.lang.Object obj40 = serializableMap32.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj41 = serializableMap22.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor42 = serializableMap13.iterator((java.lang.Object) serializableMap22);
        java.lang.Object obj43 = serializableMap0.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor42);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap44.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection49 = serializableMap44.values();
        java.io.Serializable serializable50 = null;
        java.lang.Object obj52 = serializableMap44.putIfAbsent(serializable50, (java.lang.Object) 0);
        serializableMap44.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean58 = serializableMap54.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection59 = serializableMap54.values();
        boolean boolean60 = serializableMap0.containsValue((java.lang.Object) serializableMap44, (java.lang.Object) objCollection59);
        int int61 = serializableMap44.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strItor42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test814");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        boolean boolean7 = serializableMap0.isEmpty();
        int int8 = serializableMap0.totalSize();
        int int9 = serializableMap0.size();
        serializableMap0.clear();
        java.util.Set<java.io.Serializable> serializableSet11 = serializableMap0.keySet();
        int int12 = serializableMap0.size();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int21 = serializableMap13.size((java.lang.Object) (short) -1);
        int int23 = serializableMap13.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean39 = serializableMap36.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean42 = serializableMap36.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int44 = serializableMap36.size((java.lang.Object) (short) -1);
        int int46 = serializableMap36.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int52 = serializableMap48.totalSize();
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj56 = serializableMap48.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap48);
        java.lang.Object obj58 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor59 = serializableMap36.iterator(obj58);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap60 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap60.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj66 = serializableMap60.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj68 = serializableMap60.get((java.lang.Object) 100.0d);
        serializableMap36.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap60);
        int int70 = serializableMap35.size((java.lang.Object) serializableMap60);
        java.util.Collection<java.lang.String> strCollection71 = serializableMap13.getCollection((java.lang.Object) serializableMap35);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.ArrayList<java.lang.String>> serializableMap72 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Object> serializableMap73 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap72);
        org.apache.commons.collections4.map.MultiValueMap<org.apache.commons.collections4.IterableGet<java.io.Serializable, java.lang.Object>, org.apache.commons.collections4.MultiMap<java.io.Serializable, java.lang.String>> serializableIterableGetMap74 = new org.apache.commons.collections4.map.MultiValueMap<org.apache.commons.collections4.IterableGet<java.io.Serializable, java.lang.Object>, org.apache.commons.collections4.MultiMap<java.io.Serializable, java.lang.String>>();
        java.lang.Object obj75 = serializableMap0.putIfAbsent((java.io.Serializable) serializableMap73, (java.lang.Object) serializableIterableGetMap74);
        int int76 = serializableMap73.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(strCollection71);
        org.junit.Assert.assertNotNull(serializableMap72);
        org.junit.Assert.assertNotNull(serializableMap73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
    }

    @Test
    public void test815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test815");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor11 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor12 = serializableMap0.mapIterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor13 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor11);
        org.junit.Assert.assertNotNull(serializableItor12);
        org.junit.Assert.assertNotNull(serializableEntryItor13);
    }

    @Test
    public void test816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test816");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap24 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = serializableMap24.remove(obj25);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableMap24);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test817");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj29 = serializableMap23.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj30 = serializableMap0.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) (byte) 1);
        int int31 = serializableMap0.totalSize();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor32 = serializableMap0.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor33 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 1 + "'", obj30, (byte) 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(serializableEntryItor32);
        org.junit.Assert.assertNotNull(serializableEntryItor33);
    }

    @Test
    public void test818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test818");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj10 = serializableMap7.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection11 = serializableMap7.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int20 = serializableMap12.size((java.lang.Object) (short) -1);
        int int22 = serializableMap12.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean42 = serializableMap34.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int48 = serializableMap44.totalSize();
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj52 = serializableMap44.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj53 = serializableMap34.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor54 = serializableMap25.iterator((java.lang.Object) serializableMap34);
        java.lang.Object obj55 = serializableMap12.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean63 = serializableMap57.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int64 = serializableMap57.size();
        boolean boolean65 = serializableMap7.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap57);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int74 = serializableMap66.size((java.lang.Object) (short) -1);
        int int76 = serializableMap66.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor77 = serializableMap66.iterator();
        boolean boolean78 = serializableMap7.containsKey((java.lang.Object) serializableMap66);
        boolean boolean79 = serializableMap0.equals((java.lang.Object) serializableMap7);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet80 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(serializableEntrySet80);
    }

    @Test
    public void test819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test819");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        serializableMap24.clear();
        java.lang.String str35 = serializableMap24.toString();
        java.lang.String str36 = serializableMap24.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{}" + "'", str35, "{}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
    }

    @Test
    public void test820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test820");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor1 = serializableMap0.mapIterator();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet2 = serializableMap0.entrySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap3 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean6 = serializableMap3.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int7 = serializableMap3.totalSize();
        java.lang.Object obj9 = serializableMap3.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int18 = serializableMap10.size((java.lang.Object) (short) -1);
        int int20 = serializableMap10.size((java.lang.Object) (byte) 1);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = serializableMap3.remove((java.lang.Object) serializableMap10, obj21);
        java.lang.Object obj24 = serializableMap0.remove((java.lang.Object) serializableMap3);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet25 = serializableMap3.entrySet();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet26 = serializableMap3.entrySet();
        org.junit.Assert.assertNotNull(serializableItor1);
        org.junit.Assert.assertNotNull(serializableEntrySet2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(serializableEntrySet25);
        org.junit.Assert.assertNotNull(serializableEntrySet26);
    }

    @Test
    public void test821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test821");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean10 = serializableMap7.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean13 = serializableMap7.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int15 = serializableMap7.size((java.lang.Object) (short) -1);
        int int17 = serializableMap7.size((java.lang.Object) (byte) 1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = serializableMap0.remove((java.lang.Object) serializableMap7, obj18);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet21 = serializableMap0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet21);
    }

    @Test
    public void test822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test822");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj12 = serializableMap9.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap13.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection18 = serializableMap13.values();
        boolean boolean19 = serializableMap0.remove(obj12, (java.lang.Object) serializableMap13);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor20 = serializableMap0.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor21 = serializableMap0.iterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor22 = serializableMap0.mapIterator();
        java.lang.Object obj23 = null;
        java.util.Iterator<java.lang.String> strItor24 = serializableMap0.iterator(obj23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj28 = serializableMap25.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection29 = serializableMap25.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap30 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.io.Serializable serializable31 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int36 = serializableMap32.totalSize();
        java.lang.Object obj38 = serializableMap32.get((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = serializableMap30.putIfAbsent(serializable31, obj38);
        java.util.Set<java.io.Serializable> serializableSet40 = serializableMap30.keySet();
        java.util.Collection<java.lang.String> strCollection41 = serializableMap0.getCollection((java.lang.Object) serializableSet40);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor20);
        org.junit.Assert.assertNotNull(serializableEntryItor21);
        org.junit.Assert.assertNotNull(serializableItor22);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(serializableMap30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(serializableSet40);
        org.junit.Assert.assertNull(strCollection41);
    }

    @Test
    public void test823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test823");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        boolean boolean19 = serializableMap10.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap20.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean48 = serializableMap0.putAll((java.io.Serializable) serializableMap10, (java.util.Collection<java.lang.String>) strList45);
        java.util.Set<java.io.Serializable> serializableSet49 = serializableMap0.keySet();
        java.util.Collection<java.lang.Object> objCollection50 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap51.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection56 = serializableMap51.values();
        java.util.Set<java.io.Serializable> serializableSet57 = serializableMap51.keySet();
        java.util.Set<java.io.Serializable> serializableSet58 = serializableMap51.keySet();
        int int59 = serializableMap0.size((java.lang.Object) serializableSet58);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(serializableSet49);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNotNull(serializableSet57);
        org.junit.Assert.assertNotNull(serializableSet58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test824");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        java.lang.Object obj6 = serializableMap0.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap7 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj10 = serializableMap7.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection11 = serializableMap7.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean18 = serializableMap12.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int20 = serializableMap12.size((java.lang.Object) (short) -1);
        int int22 = serializableMap12.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean40 = serializableMap34.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean42 = serializableMap34.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap44 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean47 = serializableMap44.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int48 = serializableMap44.totalSize();
        serializableMap43.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap44);
        java.lang.Object obj52 = serializableMap44.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj53 = serializableMap34.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor54 = serializableMap25.iterator((java.lang.Object) serializableMap34);
        java.lang.Object obj55 = serializableMap12.getOrDefault((java.lang.Object) 1, (java.lang.Object) strItor54);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean63 = serializableMap57.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int64 = serializableMap57.size();
        boolean boolean65 = serializableMap7.replace((java.io.Serializable) 1, (java.lang.Object) 0, (java.lang.Object) serializableMap57);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean69 = serializableMap66.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean72 = serializableMap66.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int74 = serializableMap66.size((java.lang.Object) (short) -1);
        int int76 = serializableMap66.size((java.lang.Object) (byte) 1);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor77 = serializableMap66.iterator();
        boolean boolean78 = serializableMap7.containsKey((java.lang.Object) serializableMap66);
        boolean boolean79 = serializableMap0.equals((java.lang.Object) serializableMap7);
        java.util.Set<java.io.Serializable> serializableSet80 = serializableMap7.keySet();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor81 = serializableMap7.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor82 = serializableMap7.iterator();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap83 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap84 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean87 = serializableMap84.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int88 = serializableMap84.totalSize();
        serializableMap83.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap84);
        boolean boolean90 = serializableMap7.containsValue((java.lang.Object) serializableMap84);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(serializableSet80);
        org.junit.Assert.assertNotNull(serializableEntryItor81);
        org.junit.Assert.assertNotNull(serializableEntryItor82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test825");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap6 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean9 = serializableMap6.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean12 = serializableMap6.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int14 = serializableMap6.size((java.lang.Object) (short) -1);
        int int16 = serializableMap6.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap17 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap18 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean21 = serializableMap18.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int22 = serializableMap18.totalSize();
        serializableMap17.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap18);
        java.lang.Object obj26 = serializableMap18.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap6.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap18);
        java.lang.Object obj28 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor29 = serializableMap6.iterator(obj28);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean45 = serializableMap42.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean48 = serializableMap42.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int50 = serializableMap42.size((java.lang.Object) (short) -1);
        boolean boolean52 = serializableMap42.equals((java.lang.Object) (short) 1);
        serializableMap42.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap55 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap56 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean59 = serializableMap56.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int60 = serializableMap56.totalSize();
        serializableMap55.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap56);
        java.lang.Object obj64 = serializableMap56.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj65 = serializableMap42.replace((java.io.Serializable) serializableMap54, (java.lang.Object) 1);
        boolean boolean66 = serializableMap31.equals((java.lang.Object) serializableMap54);
        java.lang.Object obj68 = serializableMap31.remove((java.lang.Object) (-1.0d));
        java.lang.Object obj69 = serializableMap6.replace((java.io.Serializable) (-1.0d), (java.lang.Object) serializableMap31);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap70 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean74 = serializableMap71.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int75 = serializableMap71.totalSize();
        serializableMap70.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap71);
        boolean boolean80 = serializableMap71.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap81 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap71);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap82 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean84 = serializableMap82.equals((java.lang.Object) (short) 10);
        int int85 = serializableMap82.totalSize();
        java.lang.Object obj86 = serializableMap31.putIfAbsent((java.io.Serializable) serializableMap71, (java.lang.Object) int85);
        java.util.Collection<java.lang.String> strCollection87 = serializableMap0.getCollection(obj86);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor88 = serializableMap0.mapIterator();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor89 = serializableMap0.mapIterator();
        java.util.Set<java.io.Serializable> serializableSet90 = serializableMap0.keySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 100L + "'", obj64, 100L);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(serializableMap81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0 + "'", obj86, 0);
        org.junit.Assert.assertNull(strCollection87);
        org.junit.Assert.assertNotNull(serializableItor88);
        org.junit.Assert.assertNotNull(serializableItor89);
        org.junit.Assert.assertNotNull(serializableSet90);
    }

    @Test
    public void test826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test826");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean7 = serializableMap1.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int9 = serializableMap1.size((java.lang.Object) (short) -1);
        int int11 = serializableMap1.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int17 = serializableMap13.totalSize();
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj21 = serializableMap13.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj23 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor24 = serializableMap1.iterator(obj23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj31 = serializableMap25.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj33 = serializableMap25.get((java.lang.Object) 100.0d);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        int int35 = serializableMap0.size((java.lang.Object) serializableMap25);
        boolean boolean36 = serializableMap0.isEmpty();
        java.util.Collection<java.lang.Object> objCollection37 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap38 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean41 = serializableMap38.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean44 = serializableMap38.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean46 = serializableMap38.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj50 = serializableMap47.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap51 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap51.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection56 = serializableMap51.values();
        boolean boolean57 = serializableMap38.remove(obj50, (java.lang.Object) serializableMap51);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor58 = serializableMap38.iterator();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor59 = serializableMap38.iterator();
        java.util.Set<java.io.Serializable> serializableSet60 = serializableMap38.keySet();
        java.lang.Object obj61 = serializableMap0.remove((java.lang.Object) serializableMap38);
        boolean boolean62 = serializableMap0.isEmpty();
        int int63 = serializableMap0.size();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor58);
        org.junit.Assert.assertNotNull(serializableEntryItor59);
        org.junit.Assert.assertNotNull(serializableSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test827");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int7 = serializableMap0.size();
        java.util.Collection<java.lang.Object> objCollection8 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap9.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection14 = serializableMap9.values();
        java.io.Serializable serializable15 = null;
        java.lang.Object obj17 = serializableMap9.putIfAbsent(serializable15, (java.lang.Object) 0);
        serializableMap9.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int27 = serializableMap19.size((java.lang.Object) (short) -1);
        boolean boolean29 = serializableMap19.equals((java.lang.Object) (short) 1);
        serializableMap19.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int37 = serializableMap33.totalSize();
        serializableMap32.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj41 = serializableMap33.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj42 = serializableMap19.replace((java.io.Serializable) serializableMap31, (java.lang.Object) 1);
        java.lang.Object obj43 = serializableMap9.remove((java.lang.Object) serializableMap19);
        java.util.Iterator<java.lang.String> strItor44 = serializableMap0.iterator(obj43);
        java.lang.Object obj45 = null;
        boolean boolean46 = serializableMap0.equals(obj45);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor47 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor47);
    }

    @Test
    public void test828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test828");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        serializableMap19.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj28 = serializableMap20.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj29 = serializableMap10.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor30 = serializableMap1.iterator((java.lang.Object) serializableMap10);
        serializableMap1.clear();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor32 = serializableMap1.mapIterator();
        int int33 = serializableMap1.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean37 = serializableMap34.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int38 = serializableMap34.totalSize();
        java.lang.Object obj40 = serializableMap34.get((java.lang.Object) (-1.0d));
        boolean boolean41 = serializableMap34.isEmpty();
        int int42 = serializableMap34.totalSize();
        serializableMap34.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.AbstractCollection<java.lang.String>> serializableMap44 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap45 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean48 = serializableMap45.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int49 = serializableMap45.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap50 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean54 = serializableMap50.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection55 = serializableMap50.values();
        java.io.Serializable serializable56 = null;
        java.lang.Object obj58 = serializableMap50.putIfAbsent(serializable56, (java.lang.Object) 0);
        serializableMap50.clear();
        boolean boolean60 = serializableMap50.isEmpty();
        java.util.Collection<java.lang.String> strCollection61 = serializableMap45.getCollection((java.lang.Object) serializableMap50);
        int int62 = serializableMap50.size();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean66 = serializableMap63.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean69 = serializableMap63.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean71 = serializableMap63.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap72 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj75 = serializableMap72.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean80 = serializableMap76.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection81 = serializableMap76.values();
        boolean boolean82 = serializableMap63.remove(obj75, (java.lang.Object) serializableMap76);
        int int83 = serializableMap50.size((java.lang.Object) serializableMap76);
        java.lang.Object obj84 = serializableMap34.remove((java.lang.Object) int83);
        java.util.Iterator<java.lang.String> strItor85 = serializableMap1.iterator((java.lang.Object) serializableMap34);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertNotNull(serializableItor32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(serializableMap44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0 + "'", obj58, 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strCollection61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objCollection81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(strItor85);
    }

    @Test
    public void test829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test829");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean29 = serializableMap23.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int31 = serializableMap23.size((java.lang.Object) (short) -1);
        int int33 = serializableMap23.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap34 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap35 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean38 = serializableMap35.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int39 = serializableMap35.totalSize();
        serializableMap34.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj43 = serializableMap35.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap23.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap35);
        java.lang.Object obj45 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor46 = serializableMap23.iterator(obj45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj53 = serializableMap47.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj55 = serializableMap47.get((java.lang.Object) 100.0d);
        serializableMap23.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        int int57 = serializableMap22.size((java.lang.Object) serializableMap47);
        java.util.Collection<java.lang.String> strCollection58 = serializableMap0.getCollection((java.lang.Object) serializableMap22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.ArrayList<java.lang.String>> serializableMap59 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Object> serializableMap60 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor61 = serializableMap60.mapIterator();
        java.lang.Class<?> wildcardClass62 = serializableItor61.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(strCollection58);
        org.junit.Assert.assertNotNull(serializableMap59);
        org.junit.Assert.assertNotNull(serializableMap60);
        org.junit.Assert.assertNotNull(serializableItor61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test830");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap14 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean17 = serializableMap14.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int18 = serializableMap14.totalSize();
        serializableMap13.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap14);
        java.lang.Object obj22 = serializableMap14.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj23 = serializableMap0.replace((java.io.Serializable) serializableMap12, (java.lang.Object) 1);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor24 = serializableMap12.mapIterator();
        int int25 = serializableMap12.totalSize();
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor26 = serializableMap12.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(serializableItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(serializableEntryItor26);
    }

    @Test
    public void test831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test831");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap5 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap6 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean9 = serializableMap6.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj12 = serializableMap6.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.String str13 = serializableMap6.toString();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor14 = serializableMap6.mapIterator();
        java.util.Collection<java.lang.Object> objCollection15 = serializableMap6.values();
        java.lang.Class<?> wildcardClass16 = serializableMap6.getClass();
        boolean boolean17 = serializableMap5.equals((java.lang.Object) serializableMap6);
        boolean boolean18 = serializableMap6.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serializableMap5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertNotNull(serializableItor14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test832");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj6 = serializableMap0.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj8 = serializableMap0.get((java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean12 = serializableMap9.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int13 = serializableMap9.totalSize();
        java.lang.Object obj15 = serializableMap9.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap16 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean19 = serializableMap16.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean22 = serializableMap16.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int24 = serializableMap16.size((java.lang.Object) (short) -1);
        boolean boolean26 = serializableMap16.equals((java.lang.Object) (short) 1);
        int int27 = serializableMap9.size((java.lang.Object) boolean26);
        java.util.Collection<java.lang.Object> objCollection28 = serializableMap9.values();
        boolean boolean30 = serializableMap0.removeMapping((java.lang.Object) serializableMap9, (java.lang.Object) 100);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.ArrayList<java.lang.String>> serializableMap31 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap9);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap33 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean36 = serializableMap33.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int37 = serializableMap33.totalSize();
        serializableMap32.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap33);
        java.lang.Object obj41 = serializableMap33.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        boolean boolean43 = serializableMap33.equals((java.lang.Object) (-1));
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor44 = serializableMap33.mapIterator();
        boolean boolean45 = serializableMap9.containsValue((java.lang.Object) serializableItor44);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object>> serializableMap46 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serializableMap31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(serializableItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(serializableMap46);
    }

    @Test
    public void test833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test833");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int5 = serializableMap1.totalSize();
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.lang.Object obj9 = serializableMap1.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean16 = serializableMap10.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean18 = serializableMap10.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int24 = serializableMap20.totalSize();
        serializableMap19.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap20);
        java.lang.Object obj28 = serializableMap20.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj29 = serializableMap10.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor30 = serializableMap1.iterator((java.lang.Object) serializableMap10);
        serializableMap1.clear();
        java.util.Set<java.io.Serializable> serializableSet32 = serializableMap1.keySet();
        int int33 = serializableMap1.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.Map<java.io.Serializable, java.lang.Object>> serializableMap34 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap1);
        java.util.Collection<java.lang.Object> objCollection35 = serializableMap1.values();
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet36 = serializableMap1.entrySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertNotNull(serializableSet32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(serializableMap34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(serializableEntrySet36);
    }

    @Test
    public void test834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test834");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        java.io.Serializable serializable34 = null;
        java.lang.Object obj36 = serializableMap0.put(serializable34, (java.lang.Object) (short) 100);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean45 = serializableMap37.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int51 = serializableMap47.totalSize();
        serializableMap46.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        java.lang.Object obj55 = serializableMap47.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj56 = serializableMap37.get((java.lang.Object) 1);
        int int57 = serializableMap0.size((java.lang.Object) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean61 = serializableMap58.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.util.Set<java.io.Serializable> serializableSet62 = serializableMap58.keySet();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap63 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean66 = serializableMap63.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean69 = serializableMap63.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int71 = serializableMap63.size((java.lang.Object) (short) -1);
        boolean boolean73 = serializableMap63.equals((java.lang.Object) (short) 1);
        serializableMap63.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap75 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap77 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean80 = serializableMap77.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int81 = serializableMap77.totalSize();
        serializableMap76.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap77);
        java.lang.Object obj85 = serializableMap77.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj86 = serializableMap63.replace((java.io.Serializable) serializableMap75, (java.lang.Object) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.CharSequence> serializableMap87 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap75);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Cloneable> serializableMap88 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap87);
        java.lang.String str89 = serializableMap88.toString();
        java.lang.Object obj90 = serializableMap37.putIfAbsent((java.io.Serializable) serializableMap58, (java.lang.Object) serializableMap88);
        boolean boolean91 = serializableMap88.isEmpty();
        boolean boolean92 = serializableMap88.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 100 + "'", obj36, (short) 100);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(serializableSet62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 100L + "'", obj85, 100L);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(serializableMap87);
        org.junit.Assert.assertNotNull(serializableMap88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "{}" + "'", str89, "{}");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{}");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test835");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int4 = serializableMap0.totalSize();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap5 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean8 = serializableMap5.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int9 = serializableMap5.totalSize();
        java.lang.Object obj11 = serializableMap5.get((java.lang.Object) (-1.0d));
        boolean boolean12 = serializableMap5.isEmpty();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean19 = serializableMap13.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean21 = serializableMap13.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap22 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean26 = serializableMap23.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int27 = serializableMap23.totalSize();
        serializableMap22.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap23);
        java.lang.Object obj31 = serializableMap22.put((java.io.Serializable) 0.0f, (java.lang.Object) 10.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap32 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean35 = serializableMap32.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean38 = serializableMap32.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int40 = serializableMap32.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap22.containsValue((java.lang.Object) serializableMap32);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap42 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int47 = serializableMap43.totalSize();
        serializableMap42.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap43);
        java.lang.Object obj51 = serializableMap43.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap52 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean55 = serializableMap52.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean58 = serializableMap52.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean60 = serializableMap52.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap61 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap62 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean65 = serializableMap62.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int66 = serializableMap62.totalSize();
        serializableMap61.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap62);
        java.lang.Object obj70 = serializableMap62.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj71 = serializableMap52.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor72 = serializableMap43.iterator((java.lang.Object) serializableMap52);
        serializableMap43.clear();
        boolean boolean74 = serializableMap5.replace((java.io.Serializable) boolean21, (java.lang.Object) serializableMap32, (java.lang.Object) serializableMap43);
        int int75 = serializableMap5.size();
        java.util.Set<java.io.Serializable> serializableSet76 = serializableMap5.keySet();
        boolean boolean77 = serializableMap0.containsValue((java.lang.Object) serializableSet76);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor78 = serializableMap0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0d + "'", obj31, 10.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 100L + "'", obj51, 100L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(serializableSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor78);
    }

    @Test
    public void test836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test836");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        serializableMap0.clear();
        java.util.Set<java.io.Serializable> serializableSet12 = serializableMap0.keySet();
        java.lang.String str13 = serializableMap0.toString();
        java.util.Collection<java.lang.Object> objCollection14 = serializableMap0.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertNotNull(objCollection14);
    }

    @Test
    public void test837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test837");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap6 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean9 = serializableMap6.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean12 = serializableMap6.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int14 = serializableMap6.size((java.lang.Object) (short) -1);
        boolean boolean16 = serializableMap6.equals((java.lang.Object) (short) 1);
        serializableMap6.clear();
        java.lang.Object obj18 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj22 = serializableMap19.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection23 = serializableMap19.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap24 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap19);
        java.io.Serializable serializable25 = null;
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap26 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean29 = serializableMap26.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int30 = serializableMap26.totalSize();
        java.lang.Object obj32 = serializableMap26.get((java.lang.Object) (-1.0d));
        java.lang.Object obj33 = serializableMap24.putIfAbsent(serializable25, obj32);
        boolean boolean34 = serializableMap24.isEmpty();
        boolean boolean35 = serializableMap6.containsValue(obj18, (java.lang.Object) serializableMap24);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj43 = serializableMap37.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj45 = serializableMap37.get((java.lang.Object) 100.0d);
        java.util.Collection<java.lang.Object> objCollection46 = serializableMap37.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean53 = serializableMap47.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int55 = serializableMap47.size((java.lang.Object) (short) -1);
        int int57 = serializableMap47.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap58 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean62 = serializableMap59.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int63 = serializableMap59.totalSize();
        serializableMap58.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj67 = serializableMap59.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap47.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap59);
        java.lang.Object obj69 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor70 = serializableMap47.iterator(obj69);
        java.util.Set<java.io.Serializable> serializableSet71 = serializableMap47.keySet();
        serializableMap37.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        java.lang.Object obj73 = null;
        int int74 = serializableMap37.size(obj73);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.List<java.lang.String>> serializableMap75 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap37);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap76 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean79 = serializableMap76.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj82 = serializableMap76.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj84 = serializableMap76.get((java.lang.Object) 100.0d);
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor85 = serializableMap76.mapIterator();
        java.lang.Object obj86 = serializableMap37.get((java.lang.Object) serializableItor85);
        java.lang.Object obj87 = serializableMap24.get(obj86);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(serializableMap24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertNotNull(serializableSet71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(serializableMap75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(serializableItor85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "[[null]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "[[null]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "[[null]]");
    }

    @Test
    public void test838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test838");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj3 = serializableMap0.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection4 = serializableMap0.values();
        int int5 = serializableMap0.size();
        int int6 = serializableMap0.size();
        int int7 = serializableMap0.size();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test839");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        serializableMap11.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap23 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int29 = serializableMap25.totalSize();
        serializableMap24.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        java.lang.Object obj33 = serializableMap25.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj34 = serializableMap11.replace((java.io.Serializable) serializableMap23, (java.lang.Object) 1);
        boolean boolean35 = serializableMap0.equals((java.lang.Object) serializableMap23);
        serializableMap23.clear();
        java.util.Collection<java.lang.Object> objCollection37 = serializableMap23.values();
        org.apache.commons.collections4.MapIterator<java.io.Serializable, java.lang.Object> serializableItor38 = serializableMap23.mapIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNotNull(serializableItor38);
    }

    @Test
    public void test840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test840");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean2 = serializableMap0.equals((java.lang.Object) (short) 10);
        int int3 = serializableMap0.totalSize();
        boolean boolean4 = serializableMap0.isEmpty();
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection5);
    }

    @Test
    public void test841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test841");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap0.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection5 = serializableMap0.values();
        java.io.Serializable serializable6 = null;
        java.lang.Object obj8 = serializableMap0.putIfAbsent(serializable6, (java.lang.Object) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        java.lang.Object obj18 = serializableMap10.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap19 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean22 = serializableMap19.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean25 = serializableMap19.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean27 = serializableMap19.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap29 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean32 = serializableMap29.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int33 = serializableMap29.totalSize();
        serializableMap28.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap29);
        java.lang.Object obj37 = serializableMap29.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj38 = serializableMap19.get((java.lang.Object) 1);
        java.util.Iterator<java.lang.String> strItor39 = serializableMap10.iterator((java.lang.Object) serializableMap19);
        boolean boolean40 = serializableMap0.containsValue((java.lang.Object) strItor39);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap41 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean44 = serializableMap41.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int45 = serializableMap41.totalSize();
        java.lang.Object obj47 = serializableMap41.get((java.lang.Object) (-1.0d));
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap48 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean51 = serializableMap48.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean54 = serializableMap48.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap48.size((java.lang.Object) (short) -1);
        boolean boolean58 = serializableMap48.equals((java.lang.Object) (short) 1);
        int int59 = serializableMap41.size((java.lang.Object) boolean58);
        java.util.Collection<java.lang.Object> objCollection60 = serializableMap41.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.util.ArrayList<java.lang.String>> serializableMap61 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap41);
        boolean boolean63 = serializableMap41.equals((java.lang.Object) (short) 0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap64 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap65 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj68 = serializableMap65.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection69 = serializableMap65.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap70 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap65);
        boolean boolean71 = serializableMap0.replace((java.io.Serializable) serializableMap41, (java.lang.Object) serializableMap64, (java.lang.Object) serializableMap65);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor72 = serializableMap41.iterator();
        java.lang.String str73 = serializableMap41.toString();
        java.util.Collection<java.lang.Object> objCollection74 = serializableMap41.values();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(serializableMap61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertNotNull(serializableMap70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{}" + "'", str73, "{}");
        org.junit.Assert.assertNotNull(objCollection74);
    }

    @Test
    public void test842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test842");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean8 = serializableMap0.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap9 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap10 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean13 = serializableMap10.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int14 = serializableMap10.totalSize();
        serializableMap9.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap10);
        boolean boolean19 = serializableMap10.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap20 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean23 = serializableMap20.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean26 = serializableMap20.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int28 = serializableMap20.size((java.lang.Object) (short) -1);
        boolean boolean30 = serializableMap20.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap31 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean34 = serializableMap31.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean37 = serializableMap31.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int39 = serializableMap31.size((java.lang.Object) (short) -1);
        boolean boolean41 = serializableMap31.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = serializableMap20.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean48 = serializableMap0.putAll((java.io.Serializable) serializableMap10, (java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap49 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean52 = serializableMap49.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean55 = serializableMap49.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int56 = serializableMap49.size();
        java.util.Collection<java.lang.Object> objCollection57 = serializableMap49.values();
        boolean boolean58 = serializableMap10.containsValue((java.lang.Object) serializableMap49);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap59 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean63 = serializableMap59.replace((java.io.Serializable) 100.0d, (java.lang.Object) (-1), (java.lang.Object) 1L);
        java.util.Collection<java.lang.Object> objCollection64 = serializableMap59.values();
        java.util.Set<java.io.Serializable> serializableSet65 = serializableMap59.keySet();
        boolean boolean66 = serializableMap10.containsKey((java.lang.Object) serializableMap59);
        java.util.Set<java.util.Map.Entry<java.io.Serializable, java.lang.Object>> serializableEntrySet67 = serializableMap59.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNotNull(serializableSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(serializableEntrySet67);
    }

    @Test
    public void test843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test843");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap1 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean4 = serializableMap1.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean7 = serializableMap1.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int9 = serializableMap1.size((java.lang.Object) (short) -1);
        int int11 = serializableMap1.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap13 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean16 = serializableMap13.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int17 = serializableMap13.totalSize();
        serializableMap12.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj21 = serializableMap13.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap13);
        java.lang.Object obj23 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor24 = serializableMap1.iterator(obj23);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap25 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean28 = serializableMap25.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj31 = serializableMap25.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj33 = serializableMap25.get((java.lang.Object) 100.0d);
        serializableMap1.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap25);
        int int35 = serializableMap0.size((java.lang.Object) serializableMap25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap36 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj39 = serializableMap36.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection40 = serializableMap36.values();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Class<?>> serializableMap41 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap36);
        serializableMap25.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap41);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean49 = serializableMap43.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int51 = serializableMap43.size((java.lang.Object) (short) -1);
        boolean boolean53 = serializableMap43.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean60 = serializableMap54.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int62 = serializableMap54.size((java.lang.Object) (short) -1);
        boolean boolean64 = serializableMap54.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        boolean boolean70 = serializableMap43.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList68);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap71 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj74 = serializableMap71.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        boolean boolean79 = serializableMap43.putAll((java.io.Serializable) serializableMap71, (java.util.Collection<java.lang.String>) strList77);
        int int80 = serializableMap43.totalSize();
        serializableMap25.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap43);
        java.util.Collection<java.lang.Object> objCollection82 = serializableMap25.values();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(serializableMap41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertNotNull(objCollection82);
    }

    @Test
    public void test844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test844");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        int int10 = serializableMap0.size((java.lang.Object) (byte) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap12 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean15 = serializableMap12.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int16 = serializableMap12.totalSize();
        serializableMap11.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj20 = serializableMap12.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap12);
        java.lang.Object obj22 = new java.lang.Object();
        java.util.Iterator<java.lang.String> strItor23 = serializableMap0.iterator(obj22);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap24 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean27 = serializableMap24.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj30 = serializableMap24.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        java.lang.Object obj32 = serializableMap24.get((java.lang.Object) 100.0d);
        serializableMap0.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap24);
        boolean boolean34 = serializableMap0.isEmpty();
        java.lang.String str35 = serializableMap0.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.Comparable<java.lang.String>> serializableMap36 = org.apache.commons.collections4.map.MultiValueMap.multiValueMap((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap0);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean43 = serializableMap37.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        boolean boolean45 = serializableMap37.containsKey((java.lang.Object) (byte) 10);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap46 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap47 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean50 = serializableMap47.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int51 = serializableMap47.totalSize();
        serializableMap46.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap47);
        boolean boolean56 = serializableMap47.replace((java.io.Serializable) (short) -1, (java.lang.Object) "", (java.lang.Object) 100.0d);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap57 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean60 = serializableMap57.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean63 = serializableMap57.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int65 = serializableMap57.size((java.lang.Object) (short) -1);
        boolean boolean67 = serializableMap57.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean74 = serializableMap68.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int76 = serializableMap68.size((java.lang.Object) (short) -1);
        boolean boolean78 = serializableMap68.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray81 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        boolean boolean84 = serializableMap57.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList82);
        boolean boolean85 = serializableMap37.putAll((java.io.Serializable) serializableMap47, (java.util.Collection<java.lang.String>) strList82);
        java.util.Set<java.io.Serializable> serializableSet86 = serializableMap37.keySet();
        java.util.Collection<java.lang.Object> objCollection87 = serializableMap37.values();
        boolean boolean88 = serializableMap0.containsKey((java.lang.Object) objCollection87);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{1=[100]}" + "'", str35, "{1=[100]}");
        org.junit.Assert.assertNotNull(serializableMap36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(serializableSet86);
        org.junit.Assert.assertNotNull(objCollection87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test845");
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap0 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean3 = serializableMap0.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean6 = serializableMap0.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int8 = serializableMap0.size((java.lang.Object) (short) -1);
        boolean boolean10 = serializableMap0.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap11 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean14 = serializableMap11.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean17 = serializableMap11.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int19 = serializableMap11.size((java.lang.Object) (short) -1);
        boolean boolean21 = serializableMap11.equals((java.lang.Object) (short) 1);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        boolean boolean27 = serializableMap0.putAll((java.io.Serializable) (short) 1, (java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap28 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        java.lang.Object obj31 = serializableMap28.replace((java.io.Serializable) 0.0f, (java.lang.Object) (-1.0d));
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = serializableMap0.putAll((java.io.Serializable) serializableMap28, (java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap37 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean40 = serializableMap37.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int41 = serializableMap37.totalSize();
        java.util.Collection<java.lang.String> strCollection42 = serializableMap28.getCollection((java.lang.Object) int41);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap43 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean46 = serializableMap43.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean49 = serializableMap43.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int51 = serializableMap43.size((java.lang.Object) (short) -1);
        boolean boolean53 = serializableMap43.equals((java.lang.Object) (short) 1);
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap54 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean57 = serializableMap54.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        boolean boolean60 = serializableMap54.containsValue((java.lang.Object) 10L, (java.lang.Object) 100.0f);
        int int62 = serializableMap54.size((java.lang.Object) (short) -1);
        boolean boolean64 = serializableMap54.equals((java.lang.Object) (short) 1);
        serializableMap54.clear();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap66 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap67 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap68 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean71 = serializableMap68.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        int int72 = serializableMap68.totalSize();
        serializableMap67.putAll((java.util.Map<java.io.Serializable, java.lang.Object>) serializableMap68);
        java.lang.Object obj76 = serializableMap68.putIfAbsent((java.io.Serializable) 1, (java.lang.Object) 100L);
        java.lang.Object obj77 = serializableMap54.replace((java.io.Serializable) serializableMap66, (java.lang.Object) 1);
        boolean boolean78 = serializableMap43.equals((java.lang.Object) serializableMap66);
        java.lang.String str79 = serializableMap66.toString();
        org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String> serializableMap80 = new org.apache.commons.collections4.map.MultiValueMap<java.io.Serializable, java.lang.String>();
        boolean boolean83 = serializableMap80.removeMapping((java.lang.Object) 100, (java.lang.Object) (short) 100);
        java.lang.Object obj86 = serializableMap80.replace((java.io.Serializable) (byte) 1, (java.lang.Object) 100.0f);
        boolean boolean87 = serializableMap66.containsValue((java.lang.Object) serializableMap80);
        boolean boolean88 = serializableMap28.containsValue((java.lang.Object) serializableMap66);
        java.util.Iterator<java.util.Map.Entry<java.io.Serializable, java.lang.String>> serializableEntryItor89 = serializableMap28.iterator();
        boolean boolean90 = serializableMap28.isEmpty();
        int int91 = serializableMap28.totalSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(strCollection42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "{}" + "'", str79, "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(serializableEntryItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }
}

