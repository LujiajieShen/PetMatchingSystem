/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 03:51:24 GMT 2024
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.AggregateTranslator;
import org.apache.commons.lang3.text.translate.CharSequenceTranslator;
import org.apache.commons.lang3.text.translate.NumericEntityEscaper;
import org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
import org.apache.commons.lang3.text.translate.OctalUnescaper;
import org.apache.commons.lang3.text.translate.UnicodeEscaper;
import org.apache.commons.lang3.text.translate.UnicodeUnescaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharSequenceTranslator_ESTest extends CharSequenceTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharSequenceTranslator.hex(395);
      AggregateTranslator aggregateTranslator0 = new AggregateTranslator((CharSequenceTranslator[]) null);
      int int0 = 2;
      StringWriter stringWriter0 = new StringWriter(2459);
      // Undeclared exception!
      try { 
        aggregateTranslator0.translate((CharSequence) "18B", (Writer) stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = (-440);
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.above((-440));
      CharSequence[][] charSequenceArray0 = new CharSequence[9][0];
      CharSequence[] charSequenceArray1 = new CharSequence[6];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharBuffer charBuffer1 = CharBuffer.wrap(charSequenceArray1[0]);
      charSequenceArray1[1] = (CharSequence) charBuffer1;
      CharBuffer charBuffer2 = CharBuffer.allocate(2265);
      String string0 = unicodeEscaper0.translate((CharSequence) charBuffer2);
      charSequenceArray1[2] = (CharSequence) string0;
      CharBuffer charBuffer3 = CharBuffer.wrap(charArray0);
      charSequenceArray1[3] = (CharSequence) charBuffer3;
      CharBuffer charBuffer4 = CharBuffer.wrap(charArray0);
      charSequenceArray1[4] = (CharSequence) charBuffer4;
      // Undeclared exception!
      unicodeEscaper0.translate((CharSequence) string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnicodeUnescaper unicodeUnescaper0 = new UnicodeUnescaper();
      int int0 = 1306;
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.between((-46), 1306);
      int int1 = 3171;
      UnicodeEscaper unicodeEscaper1 = UnicodeEscaper.outsideOf((-1977), 3171);
      NumericEntityUnescaper.OPTION[] numericEntityUnescaper_OPTIONArray0 = new NumericEntityUnescaper.OPTION[4];
      NumericEntityUnescaper.OPTION numericEntityUnescaper_OPTION0 = NumericEntityUnescaper.OPTION.semiColonRequired;
      numericEntityUnescaper_OPTIONArray0[0] = numericEntityUnescaper_OPTION0;
      NumericEntityUnescaper.OPTION numericEntityUnescaper_OPTION1 = NumericEntityUnescaper.OPTION.errorIfNoSemiColon;
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[3];
      charSequenceTranslatorArray0[0] = (CharSequenceTranslator) unicodeEscaper0;
      charSequenceTranslatorArray0[1] = (CharSequenceTranslator) unicodeEscaper1;
      // Undeclared exception!
      try { 
        charSequenceTranslatorArray0[0].translate((CharSequence) null, (-1977), (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Character", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.outsideOf(1074, 1074);
      CharSequenceTranslator.hex(1074);
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.outsideOf(1074, 1074);
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer charBuffer0 = CharBuffer.allocate(1074);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) charBuffer1);
      stringWriter1.append((CharSequence) charBuffer0, 1074, 1074);
      unicodeEscaper0.translate(1074, (Writer) stringWriter1);
      unicodeEscaper0.translate((CharSequence) charBuffer1, (Writer) stringWriter0);
      charBuffer0.put('F');
      UnicodeEscaper unicodeEscaper1 = UnicodeEscaper.above(1074);
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[2];
      charSequenceTranslatorArray0[0] = (CharSequenceTranslator) unicodeEscaper0;
      charSequenceTranslatorArray0[1] = (CharSequenceTranslator) numericEntityEscaper0;
      unicodeEscaper1.with(charSequenceTranslatorArray0);
      UnicodeEscaper.outsideOf((-520), 0);
      NumericEntityEscaper.above((-2671));
      CharSequenceTranslator[] charSequenceTranslatorArray1 = new CharSequenceTranslator[0];
      unicodeEscaper1.with(charSequenceTranslatorArray1);
      NumericEntityEscaper.below(0);
      // Undeclared exception!
      try { 
        charSequenceTranslatorArray0[0].translate((CharSequence) charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      CharSequenceTranslator.hex(92);
      AggregateTranslator aggregateTranslator0 = new AggregateTranslator((CharSequenceTranslator[]) null);
      // Undeclared exception!
      try { 
        aggregateTranslator0.translate((CharSequence) "5C");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.above(429);
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[5];
      charSequenceTranslatorArray0[0] = (CharSequenceTranslator) numericEntityEscaper0;
      charSequenceTranslatorArray0[1] = (CharSequenceTranslator) numericEntityEscaper0;
      charSequenceTranslatorArray0[2] = (CharSequenceTranslator) numericEntityEscaper0;
      charSequenceTranslatorArray0[3] = (CharSequenceTranslator) numericEntityEscaper0;
      charSequenceTranslatorArray0[4] = (CharSequenceTranslator) numericEntityEscaper0;
      CharSequenceTranslator charSequenceTranslator0 = numericEntityEscaper0.with(charSequenceTranslatorArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(429);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) charBuffer0, 59, 429);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) charBuffer0);
      StringWriter stringWriter3 = stringWriter2.append('p');
      // Undeclared exception!
      try { 
        charSequenceTranslator0.translate((CharSequence) charBuffer0, 429, (Writer) stringWriter3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = new UnicodeEscaper();
      StringWriter stringWriter0 = new StringWriter();
      unicodeEscaper0.translate(88, (Writer) stringWriter0);
      stringWriter0.close();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        unicodeEscaper0.translate((CharSequence) stringBuffer0, 88, (Writer) stringWriter0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = new UnicodeEscaper();
      char[] charArray0 = new char[9];
      charArray0[0] = ' ';
      charArray0[1] = '';
      charArray0[2] = '3';
      charArray0[3] = 'A';
      charArray0[4] = 'N';
      charArray0[5] = ',';
      charArray0[6] = 'P';
      charArray0[7] = '_';
      charArray0[8] = '-';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        unicodeEscaper0.translate((CharSequence) charBuffer0, (Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Writer must not be null
         //
         verifyException("org.apache.commons.lang3.text.translate.CharSequenceTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.below(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('K');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) null);
      unicodeEscaper0.translate((CharSequence) null, (Writer) stringWriter2);
      OctalUnescaper octalUnescaper0 = new OctalUnescaper();
      // Undeclared exception!
      try { 
        octalUnescaper0.translate((CharSequence) null, (-1639), (Writer) stringWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.text.translate.OctalUnescaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharSequenceTranslator.hex(818);
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[0];
      AggregateTranslator aggregateTranslator0 = new AggregateTranslator(charSequenceTranslatorArray0);
      CharSequenceTranslator.hex(0);
      StringWriter stringWriter0 = new StringWriter(0);
      aggregateTranslator0.translate((CharSequence) "332", (-2917), (Writer) stringWriter0);
      aggregateTranslator0.translate((CharSequence) "332", 415, (Writer) stringWriter0);
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.below(2);
      numericEntityEscaper0.translate(415, (Writer) stringWriter0);
      NumericEntityUnescaper numericEntityUnescaper0 = null;
      try {
        numericEntityUnescaper0 = new NumericEntityUnescaper((NumericEntityUnescaper.OPTION[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.text.translate.NumericEntityUnescaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NumericEntityEscaper.outsideOf((-1597), (-530));
      CharSequenceTranslator.hex((-530));
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.above((-1597));
      StringWriter stringWriter0 = new StringWriter(57);
      numericEntityEscaper0.translate((CharSequence) "FFFFFDEE", (Writer) stringWriter0);
      OctalUnescaper octalUnescaper0 = new OctalUnescaper();
      // Undeclared exception!
      try { 
        octalUnescaper0.translate((CharSequence) "FFFFFDEE", 57, (Writer) stringWriter0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = new NumericEntityEscaper();
      int int0 = 138;
      NumericEntityEscaper.above(138);
      CharSequenceTranslator.hex(138);
      numericEntityEscaper0.translate((CharSequence) "8A");
      int int1 = 0;
      // Undeclared exception!
      try { 
        numericEntityEscaper0.with((CharSequenceTranslator[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.text.translate.CharSequenceTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = new NumericEntityEscaper();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      numericEntityEscaper0.translate((CharSequence) charBuffer0, (Writer) stringWriter0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'V';
      charArray0[1] = 'A';
      charArray0[2] = 'S';
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0, 0, 0);
      String string0 = numericEntityEscaper0.translate((CharSequence) charBuffer1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = new NumericEntityEscaper();
      CharSequenceTranslator.hex(0);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = numericEntityEscaper0.translate((CharSequence) "0", 0, (Writer) stringWriter0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = new NumericEntityEscaper();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('u');
      CharSequenceTranslator.hex(0);
      numericEntityEscaper0.translate((CharSequence) "0");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "&#48;");
      StringBuffer stringBuffer0 = stringWriter2.getBuffer();
      int int0 = numericEntityEscaper0.translate((CharSequence) stringBuffer0, 0, (Writer) stringWriter0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UnicodeUnescaper unicodeUnescaper0 = new UnicodeUnescaper();
      CharBuffer charBuffer0 = CharBuffer.allocate(4095);
      StringWriter stringWriter0 = new StringWriter();
      unicodeUnescaper0.translate((CharSequence) charBuffer0, 2, (Writer) stringWriter0);
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[2];
      charSequenceTranslatorArray0[0] = (CharSequenceTranslator) unicodeUnescaper0;
      charSequenceTranslatorArray0[1] = (CharSequenceTranslator) unicodeUnescaper0;
      CharSequenceTranslator charSequenceTranslator0 = unicodeUnescaper0.with(charSequenceTranslatorArray0);
      // Undeclared exception!
      charSequenceTranslator0.translate((CharSequence) charBuffer0, (Writer) stringWriter0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NumericEntityEscaper.below(2);
      UnicodeUnescaper unicodeUnescaper0 = new UnicodeUnescaper();
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      unicodeUnescaper0.translate((CharSequence) charBuffer0);
      StringWriter stringWriter0 = new StringWriter(788);
      // Undeclared exception!
      try { 
        unicodeUnescaper0.translate((CharSequence) "\u0000\u0000", (-622), (Writer) stringWriter0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OctalUnescaper octalUnescaper0 = new OctalUnescaper();
      CharSequence[][] charSequenceArray0 = new CharSequence[9][7];
      CharSequence[] charSequenceArray1 = new CharSequence[9];
      octalUnescaper0.translate((CharSequence) null);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.below((-1));
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[0];
      CharSequenceTranslator charSequenceTranslator0 = unicodeEscaper0.with(charSequenceTranslatorArray0);
      assertNotNull(charSequenceTranslator0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[0];
      AggregateTranslator aggregateTranslator0 = new AggregateTranslator(charSequenceTranslatorArray0);
      CharSequenceTranslator.hex(2206);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "89E");
      StringWriter stringWriter0 = new StringWriter();
      aggregateTranslator0.translate((CharSequence) charBuffer0, (Writer) stringWriter0);
      assertEquals("89E", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharSequenceTranslator.hex(145);
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.outsideOf(145, 145);
      assertNotNull(numericEntityEscaper0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NumericEntityUnescaper.OPTION[] numericEntityUnescaper_OPTIONArray0 = new NumericEntityUnescaper.OPTION[8];
      NumericEntityUnescaper.OPTION numericEntityUnescaper_OPTION0 = NumericEntityUnescaper.OPTION.semiColonOptional;
      numericEntityUnescaper_OPTIONArray0[0] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[1] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[2] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[3] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[4] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[5] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[6] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[7] = numericEntityUnescaper_OPTION0;
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper(numericEntityUnescaper_OPTIONArray0);
      StringWriter stringWriter0 = new StringWriter(29);
      numericEntityUnescaper0.translate((CharSequence) null, (Writer) stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OctalUnescaper octalUnescaper0 = new OctalUnescaper();
      octalUnescaper0.translate((CharSequence) null);
      // Undeclared exception!
      try { 
        octalUnescaper0.translate((CharSequence) null, (Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Writer must not be null
         //
         verifyException("org.apache.commons.lang3.text.translate.CharSequenceTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.above((-1620));
      CharSequenceTranslator.hex((-1620));
      StringWriter stringWriter0 = new StringWriter();
      numericEntityEscaper0.translate((CharSequence) "FFFFF9AC", (Writer) stringWriter0);
      assertEquals("&#70;&#70;&#70;&#70;&#70;&#57;&#65;&#67;", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[4];
      UnicodeEscaper unicodeEscaper0 = new UnicodeEscaper();
      CharSequenceTranslator charSequenceTranslator0 = unicodeEscaper0.with(charSequenceTranslatorArray0);
      assertNotNull(charSequenceTranslator0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.above(395);
      String string0 = CharSequenceTranslator.hex(395);
      String string1 = numericEntityEscaper0.translate((CharSequence) "18B");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
  }
}
