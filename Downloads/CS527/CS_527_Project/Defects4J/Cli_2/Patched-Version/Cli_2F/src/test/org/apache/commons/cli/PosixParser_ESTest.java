/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 23:20:35 GMT 2024
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.PosixParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PosixParser_ESTest extends PosixParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-";
      PosixParser posixParser0 = new PosixParser();
      // Undeclared exception!
      try { 
        posixParser0.flatten(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-1";
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
      assertEquals(2, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "- :: ";
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
      String[] stringArray2 = posixParser0.flatten(options0, stringArray1, true);
      assertEquals(12, stringArray2.length);
      assertEquals(11, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")GWY!0p";
      stringArray0[1] = "7rdxzpk_hw1K=g";
      stringArray0[2] = "org.apache.commons.cli.OptionGroup";
      stringArray0[3] = "--7rdxzpk_hw1K=g";
      // Undeclared exception!
      try { 
        posixParser0.flatten(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-1";
      stringArray0[1] = "1";
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("1", "--jU0sb}/r");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      posixParser0.flatten(options0, stringArray0, true);
      posixParser0.burstToken("-1", false);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-1";
      // Undeclared exception!
      try { 
        posixParser0.flatten(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-1";
      stringArray0[1] = "1";
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("1", "--jU0sb}/r");
      option0.setArgs(2);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      stringArray0[2] = "-jU0sb}/r";
      posixParser0.flatten(options0, stringArray0, true);
      posixParser0.burstToken("-1", false);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option(" ", "1");
      option0.setArgs(2);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      String[] stringArray0 = new String[0];
      posixParser0.flatten(options1, stringArray0, false);
      posixParser0.burstToken("6*$X<{MB\"9*J kk+wr.", true);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[0];
      posixParser0.parse(options0, stringArray0);
      posixParser0.burstToken("Dm>a WA<{Ux.oV ", false);
  }
}
