import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        boolean boolean25 = caverphone17.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.encode("hi!");
        java.lang.String str33 = caverphone26.caverphone("1111111111");
        java.lang.String str35 = caverphone26.encode("1111111111");
        java.lang.Object obj36 = caverphone17.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.String str47 = caverphone37.encode("1111111111");
        java.lang.Object obj48 = caverphone17.encode((java.lang.Object) str47);
        boolean boolean51 = caverphone17.isCaverphoneEqual("", "1111111111");
        java.lang.String str53 = caverphone17.caverphone("AA11111111");
        boolean boolean56 = caverphone17.isCaverphoneEqual("AA11111111", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = caverphone0.encode((java.lang.Object) boolean56);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        java.lang.String str35 = caverphone0.encode("hi!");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass38 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        java.lang.String str12 = caverphone0.encode("hi!");
        boolean boolean15 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass35 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.caverphone("hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.caverphone("");
        boolean boolean29 = caverphone21.isCaverphoneEqual("AA11111111", "");
        java.lang.String str31 = caverphone21.caverphone("AA11111111");
        boolean boolean34 = caverphone21.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone21.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        boolean boolean43 = caverphone37.isCaverphoneEqual("", "hi!");
        java.lang.String str45 = caverphone37.caverphone("");
        boolean boolean48 = caverphone37.isCaverphoneEqual("", "1111111111");
        boolean boolean51 = caverphone37.isCaverphoneEqual("", "");
        java.lang.String str53 = caverphone37.caverphone("hi!");
        java.lang.String str55 = caverphone37.caverphone("");
        java.lang.String str57 = caverphone37.caverphone("hi!");
        java.lang.String str59 = caverphone37.encode("");
        java.lang.String str61 = caverphone37.caverphone("AA11111111");
        java.lang.Object obj62 = caverphone21.encode((java.lang.Object) str61);
        java.lang.Object obj63 = caverphone0.encode(obj62);
        org.apache.commons.codec.language.Caverphone caverphone64 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean67 = caverphone64.isCaverphoneEqual("hi!", "");
        java.lang.String str69 = caverphone64.caverphone("");
        boolean boolean72 = caverphone64.isCaverphoneEqual("AA11111111", "");
        java.lang.String str74 = caverphone64.caverphone("AA11111111");
        java.lang.String str76 = caverphone64.caverphone("hi!");
        java.lang.String str78 = caverphone64.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone79 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean82 = caverphone79.isCaverphoneEqual("hi!", "");
        java.lang.String str84 = caverphone79.encode("hi!");
        java.lang.String str86 = caverphone79.caverphone("");
        java.lang.Object obj87 = caverphone64.encode((java.lang.Object) "");
        java.lang.String str89 = caverphone64.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = caverphone0.encode((java.lang.Object) caverphone64);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "AA11111111" + "'", obj62, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "AA11111111" + "'", obj63, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "AA11111111" + "'", str74, "AA11111111");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "AA11111111" + "'", str76, "AA11111111");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "1111111111" + "'", str78, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "AA11111111" + "'", str84, "AA11111111");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "1111111111" + "'", str86, "1111111111");
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "1111111111" + "'", obj87, "1111111111");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "AA11111111" + "'", str89, "AA11111111");
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        java.lang.String str18 = caverphone11.caverphone("");
        java.lang.String str20 = caverphone11.encode("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        boolean boolean31 = caverphone25.isCaverphoneEqual("", "hi!");
        boolean boolean34 = caverphone25.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Class<?> wildcardClass35 = caverphone25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = caverphone0.encode((java.lang.Object) wildcardClass35);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("");
        boolean boolean37 = caverphone26.isCaverphoneEqual("", "1111111111");
        boolean boolean40 = caverphone26.isCaverphoneEqual("", "");
        java.lang.String str42 = caverphone26.caverphone("hi!");
        java.lang.String str44 = caverphone26.caverphone("");
        java.lang.String str46 = caverphone26.caverphone("hi!");
        boolean boolean49 = caverphone26.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass50 = caverphone26.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) wildcardClass50);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.Object obj14 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "AA11111111" + "'", obj14, "AA11111111");
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.caverphone("AA11111111");
        java.lang.String str43 = caverphone31.caverphone("AA11111111");
        java.lang.String str45 = caverphone31.caverphone("AA11111111");
        boolean boolean48 = caverphone31.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("hi!", "");
        boolean boolean55 = caverphone49.isCaverphoneEqual("", "hi!");
        java.lang.String str57 = caverphone49.caverphone("");
        boolean boolean60 = caverphone49.isCaverphoneEqual("", "1111111111");
        boolean boolean63 = caverphone49.isCaverphoneEqual("", "");
        java.lang.Object obj64 = caverphone31.encode((java.lang.Object) "");
        boolean boolean67 = caverphone31.isCaverphoneEqual("1111111111", "hi!");
        boolean boolean70 = caverphone31.isCaverphoneEqual("hi!", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = caverphone0.encode((java.lang.Object) boolean70);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "1111111111" + "'", obj64, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str29 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass30 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.encode("1111111111");
        boolean boolean37 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone24.caverphone("AA11111111");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) str39);
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("");
        boolean boolean49 = caverphone41.isCaverphoneEqual("AA11111111", "");
        java.lang.String str51 = caverphone41.encode("1111111111");
        boolean boolean54 = caverphone41.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str56 = caverphone41.caverphone("hi!");
        java.lang.String str58 = caverphone41.encode("1111111111");
        boolean boolean61 = caverphone41.isCaverphoneEqual("", "AA11111111");
        boolean boolean64 = caverphone41.isCaverphoneEqual("AA11111111", "");
        boolean boolean67 = caverphone41.isCaverphoneEqual("1111111111", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = caverphone0.encode((java.lang.Object) boolean67);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        java.lang.String str17 = caverphone12.caverphone("");
        boolean boolean20 = caverphone12.isCaverphoneEqual("AA11111111", "");
        boolean boolean23 = caverphone12.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.Class<?> wildcardClass24 = caverphone12.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = caverphone0.encode((java.lang.Object) caverphone12);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        java.lang.String str6 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass11 = caverphone7.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = caverphone0.encode((java.lang.Object) wildcardClass11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AA11111111" + "'", str6, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass30 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone27.caverphone("");
        boolean boolean38 = caverphone27.isCaverphoneEqual("", "1111111111");
        java.lang.String str40 = caverphone27.encode("hi!");
        java.lang.String str42 = caverphone27.encode("");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("hi!", "");
        java.lang.String str48 = caverphone43.caverphone("");
        boolean boolean51 = caverphone43.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj52 = caverphone27.encode((java.lang.Object) "AA11111111");
        boolean boolean55 = caverphone27.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str57 = caverphone27.encode("AA11111111");
        java.lang.Object obj58 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass59 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "AA11111111" + "'", obj52, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("", "hi!");
        java.lang.String str25 = caverphone17.caverphone("");
        boolean boolean28 = caverphone17.isCaverphoneEqual("", "1111111111");
        java.lang.String str30 = caverphone17.encode("hi!");
        java.lang.String str32 = caverphone17.encode("");
        java.lang.String str34 = caverphone17.caverphone("hi!");
        java.lang.String str36 = caverphone17.encode("");
        boolean boolean39 = caverphone17.isCaverphoneEqual("", "hi!");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("AA11111111");
        boolean boolean24 = caverphone16.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone16.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.encode("1111111111");
        java.lang.Object obj47 = caverphone16.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode(obj47);
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str51 = caverphone49.caverphone("1111111111");
        java.lang.Object obj52 = caverphone0.encode((java.lang.Object) str51);
        java.lang.String str54 = caverphone0.encode("hi!");
        boolean boolean57 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.caverphone("AA11111111");
        boolean boolean41 = caverphone28.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean44 = caverphone28.isCaverphoneEqual("1111111111", "");
        java.lang.String str46 = caverphone28.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone47 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean50 = caverphone47.isCaverphoneEqual("1111111111", "");
        boolean boolean53 = caverphone47.isCaverphoneEqual("hi!", "hi!");
        boolean boolean56 = caverphone47.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str58 = caverphone47.caverphone("");
        java.lang.String str60 = caverphone47.encode("");
        java.lang.String str62 = caverphone47.encode("1111111111");
        java.lang.Object obj63 = caverphone28.encode((java.lang.Object) str62);
        boolean boolean66 = caverphone28.isCaverphoneEqual("", "hi!");
        java.lang.Object obj67 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "1111111111" + "'", obj63, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "1111111111" + "'", obj67, "1111111111");
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone8.encode("hi!");
        java.lang.String str23 = caverphone8.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("1111111111", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone24.encode("AA11111111");
        java.lang.Object obj33 = caverphone8.encode((java.lang.Object) "AA11111111");
        java.lang.String str35 = caverphone8.encode("");
        boolean boolean38 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone8.encode("hi!");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean44 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone45 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean48 = caverphone45.isCaverphoneEqual("hi!", "");
        java.lang.String str50 = caverphone45.caverphone("AA11111111");
        boolean boolean53 = caverphone45.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone54 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean57 = caverphone54.isCaverphoneEqual("hi!", "");
        java.lang.String str59 = caverphone54.encode("hi!");
        java.lang.String str61 = caverphone54.caverphone("1111111111");
        java.lang.String str63 = caverphone54.encode("1111111111");
        java.lang.Object obj64 = caverphone45.encode((java.lang.Object) "1111111111");
        java.lang.String str66 = caverphone45.caverphone("1111111111");
        boolean boolean69 = caverphone45.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone70 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean73 = caverphone70.isCaverphoneEqual("hi!", "");
        java.lang.String str75 = caverphone70.caverphone("");
        boolean boolean78 = caverphone70.isCaverphoneEqual("AA11111111", "");
        java.lang.String str80 = caverphone70.caverphone("AA11111111");
        java.lang.String str82 = caverphone70.caverphone("AA11111111");
        java.lang.String str84 = caverphone70.caverphone("hi!");
        java.lang.String str86 = caverphone70.encode("1111111111");
        java.lang.Object obj87 = caverphone45.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass88 = caverphone45.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = caverphone0.encode((java.lang.Object) caverphone45);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "1111111111" + "'", obj64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "1111111111" + "'", str75, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "AA11111111" + "'", str80, "AA11111111");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "AA11111111" + "'", str82, "AA11111111");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "AA11111111" + "'", str84, "AA11111111");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "1111111111" + "'", str86, "1111111111");
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "1111111111" + "'", obj87, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("hi!");
        java.lang.String str21 = caverphone0.encode("hi!");
        java.lang.String str23 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.Object obj12 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("AA11111111");
        java.lang.String str20 = caverphone13.caverphone("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        java.lang.Object obj22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = caverphone0.encode(obj22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "1111111111" + "'", obj12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        boolean boolean27 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str29 = caverphone0.encode("");
        boolean boolean32 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.Class<?> wildcardClass33 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass20 = caverphone16.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("");
        boolean boolean35 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean38 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass38 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str25 = caverphone0.encode("AA11111111");
        java.lang.String str27 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        boolean boolean40 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean43 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("AA11111111");
        boolean boolean32 = caverphone24.isCaverphoneEqual("", "hi!");
        boolean boolean35 = caverphone24.isCaverphoneEqual("1111111111", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = caverphone0.encode((java.lang.Object) caverphone24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        boolean boolean35 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str37 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass38 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone0.caverphone("");
        boolean boolean41 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("1111111111", "");
        boolean boolean48 = caverphone42.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str50 = caverphone42.encode("AA11111111");
        java.lang.String str52 = caverphone42.encode("");
        java.lang.String str54 = caverphone42.caverphone("");
        java.lang.String str56 = caverphone42.caverphone("1111111111");
        java.lang.String str58 = caverphone42.encode("1111111111");
        java.lang.String str60 = caverphone42.encode("AA11111111");
        java.lang.Object obj61 = caverphone0.encode((java.lang.Object) str60);
        java.lang.String str63 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "AA11111111" + "'", obj61, "AA11111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("1111111111", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone24.encode("AA11111111");
        java.lang.String str34 = caverphone24.encode("");
        java.lang.String str36 = caverphone24.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = caverphone0.encode((java.lang.Object) caverphone24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("", "hi!");
        java.lang.String str36 = caverphone28.caverphone("");
        boolean boolean39 = caverphone28.isCaverphoneEqual("", "1111111111");
        java.lang.String str41 = caverphone28.encode("hi!");
        java.lang.String str43 = caverphone28.encode("");
        org.apache.commons.codec.language.Caverphone caverphone44 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean47 = caverphone44.isCaverphoneEqual("hi!", "");
        java.lang.String str49 = caverphone44.caverphone("");
        boolean boolean52 = caverphone44.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj53 = caverphone28.encode((java.lang.Object) "AA11111111");
        boolean boolean56 = caverphone28.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str58 = caverphone28.caverphone("hi!");
        boolean boolean61 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str63 = caverphone28.caverphone("");
        java.lang.String str65 = caverphone28.caverphone("");
        java.lang.Object obj66 = caverphone0.encode((java.lang.Object) str65);
        org.apache.commons.codec.language.Caverphone caverphone67 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean70 = caverphone67.isCaverphoneEqual("hi!", "");
        boolean boolean73 = caverphone67.isCaverphoneEqual("", "hi!");
        java.lang.String str75 = caverphone67.caverphone("");
        boolean boolean78 = caverphone67.isCaverphoneEqual("", "1111111111");
        java.lang.String str80 = caverphone67.encode("hi!");
        java.lang.String str82 = caverphone67.encode("");
        boolean boolean85 = caverphone67.isCaverphoneEqual("hi!", "hi!");
        java.lang.Object obj86 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "AA11111111" + "'", obj53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "1111111111" + "'", obj66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "1111111111" + "'", str75, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "AA11111111" + "'", str80, "AA11111111");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "1111111111" + "'", str82, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "AA11111111" + "'", obj86, "AA11111111");
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("1111111111", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str23 = caverphone15.encode("");
        java.lang.String str25 = caverphone15.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("AA11111111");
        java.lang.String str33 = caverphone26.caverphone("");
        java.lang.String str35 = caverphone26.encode("hi!");
        java.lang.Object obj36 = caverphone15.encode((java.lang.Object) str35);
        java.lang.Object obj37 = caverphone0.encode(obj36);
        java.lang.String str39 = caverphone0.caverphone("");
        boolean boolean42 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "AA11111111" + "'", obj36, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "AA11111111" + "'", obj37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone0.caverphone("1111111111");
        java.lang.String str40 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str23 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj29 = caverphone16.encode((java.lang.Object) "");
        java.lang.Object obj30 = caverphone0.encode(obj29);
        java.lang.String str32 = caverphone0.encode("1111111111");
        java.lang.String str34 = caverphone0.encode("hi!");
        boolean boolean37 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "1111111111" + "'", obj29, "1111111111");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "1111111111" + "'", obj30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("");
        boolean boolean25 = caverphone17.isCaverphoneEqual("AA11111111", "");
        java.lang.String str27 = caverphone17.encode("1111111111");
        boolean boolean30 = caverphone17.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str32 = caverphone17.caverphone("hi!");
        java.lang.String str34 = caverphone17.encode("1111111111");
        boolean boolean37 = caverphone17.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass38 = caverphone17.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = caverphone0.encode((java.lang.Object) wildcardClass38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = caverphone0.encode(obj18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("AA11111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str38 = caverphone36.caverphone("1111111111");
        java.lang.String str40 = caverphone36.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        boolean boolean44 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone47 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean50 = caverphone47.isCaverphoneEqual("1111111111", "");
        boolean boolean53 = caverphone47.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str55 = caverphone47.encode("AA11111111");
        java.lang.String str57 = caverphone47.encode("");
        java.lang.String str59 = caverphone47.caverphone("");
        java.lang.String str61 = caverphone47.caverphone("hi!");
        java.lang.Class<?> wildcardClass62 = caverphone47.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = caverphone0.encode((java.lang.Object) wildcardClass62);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone21.caverphone("1111111111");
        java.lang.String str28 = caverphone21.encode("");
        java.lang.String str30 = caverphone21.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.encode("1111111111");
        boolean boolean44 = caverphone31.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str46 = caverphone31.encode("AA11111111");
        java.lang.Object obj47 = caverphone21.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) str46);
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        java.lang.String str35 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass36 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str30 = caverphone0.encode("hi!");
        java.lang.String str32 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass43 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str35 = caverphone0.encode("1111111111");
        java.lang.String str37 = caverphone0.encode("hi!");
        java.lang.String str39 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.encode("hi!");
        java.lang.String str30 = caverphone23.caverphone("hi!");
        java.lang.String str32 = caverphone23.caverphone("hi!");
        boolean boolean35 = caverphone23.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str37 = caverphone23.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = caverphone0.encode((java.lang.Object) caverphone23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone27.caverphone("");
        boolean boolean38 = caverphone27.isCaverphoneEqual("", "1111111111");
        boolean boolean41 = caverphone27.isCaverphoneEqual("", "");
        boolean boolean44 = caverphone27.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str46 = caverphone27.encode("AA11111111");
        java.lang.String str48 = caverphone27.encode("1111111111");
        java.lang.String str50 = caverphone27.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) caverphone27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass39 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str25 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("");
        boolean boolean37 = caverphone26.isCaverphoneEqual("", "1111111111");
        boolean boolean40 = caverphone26.isCaverphoneEqual("", "");
        java.lang.String str42 = caverphone26.caverphone("hi!");
        java.lang.String str44 = caverphone26.caverphone("");
        java.lang.String str46 = caverphone26.caverphone("hi!");
        java.lang.String str48 = caverphone26.encode("1111111111");
        java.lang.String str50 = caverphone26.encode("hi!");
        java.lang.Class<?> wildcardClass51 = caverphone26.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = caverphone0.encode((java.lang.Object) wildcardClass51);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        boolean boolean10 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        boolean boolean15 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.encode("hi!");
        java.lang.String str30 = caverphone23.caverphone("1111111111");
        java.lang.Object obj31 = caverphone16.encode((java.lang.Object) str30);
        java.lang.String str33 = caverphone16.caverphone("1111111111");
        boolean boolean36 = caverphone16.isCaverphoneEqual("", "");
        java.lang.String str38 = caverphone16.caverphone("hi!");
        boolean boolean41 = caverphone16.isCaverphoneEqual("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("1111111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        boolean boolean32 = caverphone19.isCaverphoneEqual("", "");
        boolean boolean35 = caverphone19.isCaverphoneEqual("AA11111111", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = caverphone0.encode((java.lang.Object) caverphone19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("", "hi!");
        java.lang.String str25 = caverphone17.caverphone("");
        boolean boolean28 = caverphone17.isCaverphoneEqual("", "1111111111");
        java.lang.String str30 = caverphone17.encode("hi!");
        java.lang.String str32 = caverphone17.encode("");
        org.apache.commons.codec.language.Caverphone caverphone33 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean36 = caverphone33.isCaverphoneEqual("hi!", "");
        java.lang.String str38 = caverphone33.caverphone("");
        boolean boolean41 = caverphone33.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj42 = caverphone17.encode((java.lang.Object) "AA11111111");
        boolean boolean45 = caverphone17.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str47 = caverphone17.caverphone("hi!");
        boolean boolean50 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str52 = caverphone17.caverphone("");
        java.lang.String str54 = caverphone17.caverphone("");
        java.lang.String str56 = caverphone17.encode("AA11111111");
        java.lang.Object obj57 = caverphone0.encode((java.lang.Object) str56);
        boolean boolean60 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "AA11111111" + "'", obj42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "AA11111111" + "'", obj57, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str25 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        java.lang.String str37 = caverphone0.encode("");
        java.lang.String str39 = caverphone0.caverphone("hi!");
        boolean boolean42 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.encode("1111111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj45 = caverphone27.encode((java.lang.Object) "");
        java.lang.String str47 = caverphone27.caverphone("hi!");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) str47);
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("hi!", "");
        boolean boolean55 = caverphone49.isCaverphoneEqual("", "hi!");
        java.lang.String str57 = caverphone49.caverphone("");
        boolean boolean60 = caverphone49.isCaverphoneEqual("", "1111111111");
        java.lang.String str62 = caverphone49.encode("hi!");
        java.lang.String str64 = caverphone49.encode("");
        org.apache.commons.codec.language.Caverphone caverphone65 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean68 = caverphone65.isCaverphoneEqual("hi!", "");
        java.lang.String str70 = caverphone65.caverphone("");
        boolean boolean73 = caverphone65.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj74 = caverphone49.encode((java.lang.Object) "AA11111111");
        boolean boolean77 = caverphone49.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str79 = caverphone49.caverphone("hi!");
        boolean boolean82 = caverphone49.isCaverphoneEqual("hi!", "");
        java.lang.String str84 = caverphone49.caverphone("");
        java.lang.String str86 = caverphone49.caverphone("");
        java.lang.Class<?> wildcardClass87 = caverphone49.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = caverphone0.encode((java.lang.Object) wildcardClass87);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "AA11111111" + "'", obj74, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "AA11111111" + "'", str79, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "1111111111" + "'", str84, "1111111111");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "1111111111" + "'", str86, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        java.lang.String str37 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.String str48 = caverphone38.caverphone("AA11111111");
        java.lang.String str50 = caverphone38.caverphone("AA11111111");
        java.lang.String str52 = caverphone38.caverphone("AA11111111");
        boolean boolean55 = caverphone38.isCaverphoneEqual("", "1111111111");
        java.lang.String str57 = caverphone38.encode("AA11111111");
        java.lang.String str59 = caverphone38.encode("hi!");
        java.lang.String str61 = caverphone38.caverphone("");
        java.lang.Class<?> wildcardClass62 = caverphone38.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = caverphone0.encode((java.lang.Object) wildcardClass62);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.caverphone("");
        boolean boolean17 = caverphone9.isCaverphoneEqual("AA11111111", "");
        java.lang.String str19 = caverphone9.encode("1111111111");
        boolean boolean22 = caverphone9.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str24 = caverphone9.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("AA11111111");
        boolean boolean33 = caverphone25.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.encode("hi!");
        java.lang.String str41 = caverphone34.caverphone("1111111111");
        java.lang.String str43 = caverphone34.encode("1111111111");
        java.lang.Object obj44 = caverphone25.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone45 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean48 = caverphone45.isCaverphoneEqual("hi!", "");
        java.lang.String str50 = caverphone45.caverphone("");
        boolean boolean53 = caverphone45.isCaverphoneEqual("AA11111111", "");
        java.lang.String str55 = caverphone45.encode("1111111111");
        java.lang.Object obj56 = caverphone25.encode((java.lang.Object) str55);
        java.lang.Object obj57 = caverphone9.encode(obj56);
        org.apache.commons.codec.language.Caverphone caverphone58 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str60 = caverphone58.caverphone("1111111111");
        java.lang.Object obj61 = caverphone9.encode((java.lang.Object) str60);
        java.lang.String str63 = caverphone9.encode("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = caverphone0.encode((java.lang.Object) caverphone9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "1111111111" + "'", obj44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "1111111111" + "'", obj56, "1111111111");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "1111111111" + "'", obj57, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "1111111111" + "'", obj61, "1111111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("", "hi!");
        java.lang.String str25 = caverphone17.caverphone("");
        boolean boolean28 = caverphone17.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str30 = caverphone17.encode("hi!");
        java.lang.Class<?> wildcardClass31 = caverphone17.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = caverphone0.encode((java.lang.Object) wildcardClass31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        boolean boolean15 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.encode("1111111111");
        boolean boolean29 = caverphone16.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str31 = caverphone16.caverphone("hi!");
        java.lang.String str33 = caverphone16.encode("1111111111");
        boolean boolean36 = caverphone16.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("1111111111", "");
        java.lang.String str42 = caverphone37.caverphone("1111111111");
        java.lang.String str44 = caverphone37.encode("");
        boolean boolean47 = caverphone37.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str49 = caverphone37.caverphone("1111111111");
        java.lang.Object obj50 = caverphone16.encode((java.lang.Object) str49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "1111111111" + "'", obj50, "1111111111");
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.encode("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("1111111111", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str36 = caverphone28.encode("");
        boolean boolean39 = caverphone28.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "1111111111" + "'", obj40, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str22 = caverphone0.caverphone("");
        java.lang.String str24 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.encode("hi!");
        java.lang.String str23 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.encode("1111111111");
        boolean boolean37 = caverphone24.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj42 = caverphone24.encode((java.lang.Object) "");
        java.lang.String str44 = caverphone24.caverphone("1111111111");
        java.lang.String str46 = caverphone24.encode("hi!");
        java.lang.Class<?> wildcardClass47 = caverphone24.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = caverphone0.encode((java.lang.Object) caverphone24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "1111111111" + "'", obj42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        java.lang.String str40 = caverphone0.caverphone("1111111111");
        java.lang.String str42 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("hi!", "");
        java.lang.String str48 = caverphone43.encode("hi!");
        java.lang.String str50 = caverphone43.caverphone("hi!");
        java.lang.String str52 = caverphone43.caverphone("hi!");
        boolean boolean55 = caverphone43.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Class<?> wildcardClass56 = caverphone43.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = caverphone0.encode((java.lang.Object) wildcardClass56);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        boolean boolean35 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Object obj36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = caverphone0.encode(obj36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str26 = caverphone0.caverphone("1111111111");
        java.lang.String str28 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("AA11111111");
        java.lang.String str36 = caverphone29.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("AA11111111");
        boolean boolean45 = caverphone37.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.encode("hi!");
        java.lang.String str53 = caverphone46.caverphone("1111111111");
        java.lang.String str55 = caverphone46.encode("1111111111");
        java.lang.Object obj56 = caverphone37.encode((java.lang.Object) "1111111111");
        java.lang.String str58 = caverphone37.caverphone("1111111111");
        boolean boolean61 = caverphone37.isCaverphoneEqual("", "hi!");
        java.lang.Object obj62 = caverphone29.encode((java.lang.Object) "hi!");
        boolean boolean65 = caverphone29.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean68 = caverphone29.isCaverphoneEqual("", "");
        boolean boolean71 = caverphone29.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj72 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "1111111111" + "'", obj56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "AA11111111" + "'", obj62, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "AA11111111" + "'", obj72, "AA11111111");
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        boolean boolean41 = caverphone35.isCaverphoneEqual("", "hi!");
        java.lang.String str43 = caverphone35.caverphone("");
        boolean boolean46 = caverphone35.isCaverphoneEqual("", "1111111111");
        boolean boolean49 = caverphone35.isCaverphoneEqual("", "");
        java.lang.String str51 = caverphone35.caverphone("hi!");
        java.lang.String str53 = caverphone35.caverphone("");
        java.lang.String str55 = caverphone35.caverphone("hi!");
        java.lang.String str57 = caverphone35.encode("hi!");
        java.lang.Class<?> wildcardClass58 = caverphone35.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = caverphone0.encode((java.lang.Object) wildcardClass58);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.caverphone("AA11111111");
        boolean boolean13 = caverphone5.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("1111111111");
        java.lang.Object obj24 = caverphone5.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone5.caverphone("1111111111");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("hi!");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass9 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.encode("hi!");
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone0.encode("hi!");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str32 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str18 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        boolean boolean41 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.encode("hi!");
        java.lang.String str13 = caverphone6.caverphone("hi!");
        java.lang.String str15 = caverphone6.caverphone("hi!");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) str15);
        java.lang.String str18 = caverphone0.encode("hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "AA11111111" + "'", obj16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass35 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.caverphone("");
        boolean boolean30 = caverphone22.isCaverphoneEqual("AA11111111", "");
        java.lang.String str32 = caverphone22.caverphone("AA11111111");
        java.lang.String str34 = caverphone22.caverphone("AA11111111");
        java.lang.String str36 = caverphone22.caverphone("hi!");
        java.lang.String str38 = caverphone22.encode("1111111111");
        java.lang.String str40 = caverphone22.caverphone("AA11111111");
        java.lang.String str42 = caverphone22.encode("AA11111111");
        java.lang.String str44 = caverphone22.caverphone("");
        boolean boolean47 = caverphone22.isCaverphoneEqual("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = caverphone0.encode((java.lang.Object) boolean47);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        java.lang.String str41 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.encode("hi!");
        java.lang.String str13 = caverphone6.caverphone("1111111111");
        java.lang.String str15 = caverphone6.encode("1111111111");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("1111111111", "");
        boolean boolean26 = caverphone20.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str28 = caverphone20.caverphone("AA11111111");
        java.lang.String str30 = caverphone20.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "1111111111" + "'", obj16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = caverphone0.encode(obj22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        java.lang.String str35 = caverphone0.encode("AA11111111");
        boolean boolean38 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        java.lang.String str6 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        boolean boolean13 = caverphone7.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str15 = caverphone7.encode("");
        java.lang.String str17 = caverphone7.encode("hi!");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("AA11111111");
        java.lang.String str26 = caverphone19.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone27.caverphone("");
        boolean boolean38 = caverphone27.isCaverphoneEqual("", "1111111111");
        java.lang.String str40 = caverphone27.encode("hi!");
        java.lang.String str42 = caverphone27.encode("");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("1111111111", "");
        boolean boolean49 = caverphone43.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str51 = caverphone43.encode("AA11111111");
        java.lang.Object obj52 = caverphone27.encode((java.lang.Object) "AA11111111");
        java.lang.String str54 = caverphone27.encode("");
        boolean boolean57 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str59 = caverphone27.encode("hi!");
        java.lang.Object obj60 = caverphone19.encode((java.lang.Object) "hi!");
        boolean boolean63 = caverphone19.isCaverphoneEqual("", "");
        boolean boolean66 = caverphone19.isCaverphoneEqual("hi!", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = caverphone0.encode((java.lang.Object) boolean66);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AA11111111" + "'", str6, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "AA11111111" + "'", obj18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "AA11111111" + "'", obj52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "AA11111111" + "'", obj60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("hi!");
        java.lang.String str31 = caverphone19.caverphone("");
        boolean boolean34 = caverphone19.isCaverphoneEqual("", "");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("AA11111111");
        boolean boolean44 = caverphone36.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone45 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean48 = caverphone45.isCaverphoneEqual("hi!", "");
        java.lang.String str50 = caverphone45.encode("hi!");
        java.lang.String str52 = caverphone45.caverphone("1111111111");
        java.lang.String str54 = caverphone45.encode("1111111111");
        java.lang.Object obj55 = caverphone36.encode((java.lang.Object) "1111111111");
        java.lang.String str57 = caverphone36.caverphone("1111111111");
        java.lang.String str59 = caverphone36.encode("");
        java.lang.String str61 = caverphone36.caverphone("AA11111111");
        java.lang.String str63 = caverphone36.encode("hi!");
        java.lang.Object obj64 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "AA11111111" + "'", obj64, "AA11111111");
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.encode("1111111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj45 = caverphone27.encode((java.lang.Object) "");
        java.lang.String str47 = caverphone27.caverphone("hi!");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) str47);
        boolean boolean51 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        boolean boolean19 = caverphone13.isCaverphoneEqual("", "hi!");
        java.lang.String str21 = caverphone13.caverphone("");
        boolean boolean24 = caverphone13.isCaverphoneEqual("", "1111111111");
        boolean boolean27 = caverphone13.isCaverphoneEqual("", "");
        java.lang.String str29 = caverphone13.caverphone("hi!");
        java.lang.String str31 = caverphone13.caverphone("");
        java.lang.String str33 = caverphone13.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        java.lang.String str36 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.encode("hi!");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str47 = caverphone37.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("hi!", "");
        java.lang.String str53 = caverphone48.caverphone("AA11111111");
        java.lang.String str55 = caverphone48.caverphone("");
        java.lang.String str57 = caverphone48.encode("hi!");
        java.lang.String str59 = caverphone48.encode("");
        java.lang.Object obj60 = caverphone37.encode((java.lang.Object) "");
        java.lang.String str62 = caverphone37.caverphone("hi!");
        boolean boolean65 = caverphone37.isCaverphoneEqual("AA11111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = caverphone0.encode((java.lang.Object) caverphone37);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean42 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.String str12 = caverphone0.encode("AA11111111");
        java.lang.String str14 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str27 = caverphone0.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = caverphone0.encode((java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str26 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.encode("hi!");
        java.lang.String str31 = caverphone24.caverphone("1111111111");
        java.lang.String str33 = caverphone24.encode("1111111111");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        boolean boolean35 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass36 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.String str19 = caverphone0.encode("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("AA11111111");
        boolean boolean31 = caverphone23.isCaverphoneEqual("", "");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        java.lang.String str36 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str23 = caverphone0.encode("1111111111");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.caverphone("hi!");
        java.lang.String str39 = caverphone27.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = caverphone0.encode((java.lang.Object) caverphone27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        java.lang.String str25 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        java.lang.String str29 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("1111111111", "");
        boolean boolean36 = caverphone30.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone30.caverphone("AA11111111");
        boolean boolean41 = caverphone30.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str44 = caverphone0.caverphone("1111111111");
        boolean boolean47 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass48 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "AA11111111" + "'", obj42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str8 = caverphone6.caverphone("1111111111");
        java.lang.String str10 = caverphone6.caverphone("1111111111");
        java.lang.String str12 = caverphone6.caverphone("AA11111111");
        java.lang.Object obj13 = caverphone0.encode((java.lang.Object) str12);
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str18 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        boolean boolean25 = caverphone19.isCaverphoneEqual("", "hi!");
        java.lang.String str27 = caverphone19.caverphone("");
        boolean boolean30 = caverphone19.isCaverphoneEqual("", "1111111111");
        java.lang.String str32 = caverphone19.encode("hi!");
        java.lang.String str34 = caverphone19.encode("");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.caverphone("");
        boolean boolean43 = caverphone35.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj44 = caverphone19.encode((java.lang.Object) "AA11111111");
        boolean boolean47 = caverphone19.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str49 = caverphone19.caverphone("hi!");
        java.lang.String str51 = caverphone19.caverphone("");
        boolean boolean54 = caverphone19.isCaverphoneEqual("AA11111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = caverphone0.encode((java.lang.Object) boolean54);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "AA11111111" + "'", obj13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "AA11111111" + "'", obj44, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str30 = caverphone0.caverphone("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("hi!");
        java.lang.String str21 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("");
        java.lang.String str34 = caverphone0.encode("");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.String str47 = caverphone37.caverphone("AA11111111");
        java.lang.String str49 = caverphone37.caverphone("AA11111111");
        java.lang.String str51 = caverphone37.caverphone("hi!");
        java.lang.String str53 = caverphone37.caverphone("1111111111");
        java.lang.String str55 = caverphone37.encode("1111111111");
        java.lang.Object obj56 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass57 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "1111111111" + "'", obj56, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str22 = caverphone0.encode("AA11111111");
        java.lang.String str24 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        boolean boolean10 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("");
        boolean boolean19 = caverphone11.isCaverphoneEqual("AA11111111", "");
        java.lang.String str21 = caverphone11.encode("1111111111");
        boolean boolean24 = caverphone11.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str26 = caverphone11.caverphone("hi!");
        java.lang.String str28 = caverphone11.encode("1111111111");
        boolean boolean31 = caverphone11.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("1111111111", "");
        java.lang.String str37 = caverphone32.caverphone("1111111111");
        java.lang.String str39 = caverphone32.encode("");
        boolean boolean42 = caverphone32.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str44 = caverphone32.caverphone("1111111111");
        java.lang.Object obj45 = caverphone11.encode((java.lang.Object) str44);
        java.lang.String str47 = caverphone11.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = caverphone0.encode((java.lang.Object) caverphone11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        java.lang.String str27 = caverphone0.encode("AA11111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.encode("hi!");
        java.lang.String str28 = caverphone0.encode("");
        java.lang.String str30 = caverphone0.encode("");
        java.lang.String str32 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone0.encode("hi!");
        java.lang.String str27 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass28 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.caverphone("hi!");
        boolean boolean40 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str42 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        java.lang.String str36 = caverphone0.caverphone("");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        java.lang.String str40 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.encode("hi!");
        java.lang.String str28 = caverphone21.caverphone("1111111111");
        java.lang.Object obj29 = caverphone14.encode((java.lang.Object) str28);
        java.lang.String str31 = caverphone14.caverphone("1111111111");
        java.lang.String str33 = caverphone14.encode("hi!");
        java.lang.String str35 = caverphone14.encode("");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "1111111111" + "'", obj29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        boolean boolean41 = caverphone35.isCaverphoneEqual("", "hi!");
        java.lang.String str43 = caverphone35.caverphone("");
        boolean boolean46 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj48 = caverphone35.encode((java.lang.Object) "");
        java.lang.Object obj49 = caverphone0.encode(obj48);
        org.apache.commons.codec.language.Caverphone caverphone50 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean53 = caverphone50.isCaverphoneEqual("1111111111", "");
        boolean boolean56 = caverphone50.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str58 = caverphone50.caverphone("AA11111111");
        boolean boolean61 = caverphone50.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone62 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean65 = caverphone62.isCaverphoneEqual("1111111111", "");
        boolean boolean68 = caverphone62.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str70 = caverphone62.encode("AA11111111");
        java.lang.String str72 = caverphone62.caverphone("AA11111111");
        java.lang.Object obj73 = caverphone50.encode((java.lang.Object) "AA11111111");
        java.lang.Object obj74 = caverphone0.encode(obj73);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "1111111111" + "'", obj49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AA11111111" + "'", str70, "AA11111111");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "AA11111111" + "'", str72, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "AA11111111" + "'", obj73, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "AA11111111" + "'", obj74, "AA11111111");
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.caverphone("AA11111111");
        boolean boolean13 = caverphone5.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("1111111111");
        java.lang.Object obj24 = caverphone5.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone5.caverphone("1111111111");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.encode("1111111111");
        boolean boolean41 = caverphone28.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        java.lang.String str47 = caverphone42.caverphone("");
        boolean boolean50 = caverphone42.isCaverphoneEqual("AA11111111", "");
        java.lang.String str52 = caverphone42.caverphone("AA11111111");
        java.lang.String str54 = caverphone42.caverphone("AA11111111");
        java.lang.String str56 = caverphone42.caverphone("hi!");
        java.lang.String str58 = caverphone42.caverphone("1111111111");
        java.lang.Object obj59 = caverphone28.encode((java.lang.Object) str58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = caverphone0.encode((java.lang.Object) caverphone28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("1111111111");
        java.lang.String str24 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        java.lang.String str24 = caverphone0.encode("1111111111");
        java.lang.String str26 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.caverphone("hi!");
        java.lang.String str39 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.encode("1111111111");
        java.lang.String str23 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.encode("1111111111");
        boolean boolean37 = caverphone24.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.String str48 = caverphone38.caverphone("AA11111111");
        java.lang.String str50 = caverphone38.caverphone("AA11111111");
        java.lang.String str52 = caverphone38.caverphone("hi!");
        java.lang.String str54 = caverphone38.caverphone("1111111111");
        java.lang.Object obj55 = caverphone24.encode((java.lang.Object) str54);
        boolean boolean58 = caverphone24.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str60 = caverphone24.encode("AA11111111");
        boolean boolean63 = caverphone24.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone64 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean67 = caverphone64.isCaverphoneEqual("hi!", "");
        boolean boolean70 = caverphone64.isCaverphoneEqual("", "hi!");
        java.lang.String str72 = caverphone64.caverphone("");
        boolean boolean75 = caverphone64.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj76 = caverphone24.encode((java.lang.Object) "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = caverphone0.encode((java.lang.Object) caverphone24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "AA11111111" + "'", obj76, "AA11111111");
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.caverphone("AA11111111");
        java.lang.String str25 = caverphone13.caverphone("AA11111111");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str28 = caverphone0.caverphone("");
        java.lang.Object obj29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = caverphone0.encode(obj29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.encode("");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("hi!");
        java.lang.String str27 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass28 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("1111111111", "");
        boolean boolean25 = caverphone19.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str27 = caverphone19.encode("");
        boolean boolean30 = caverphone19.isCaverphoneEqual("", "1111111111");
        java.lang.String str32 = caverphone19.encode("");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) str32);
        boolean boolean36 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.String str16 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("");
        boolean boolean25 = caverphone17.isCaverphoneEqual("AA11111111", "");
        java.lang.String str27 = caverphone17.caverphone("AA11111111");
        boolean boolean30 = caverphone17.isCaverphoneEqual("", "1111111111");
        java.lang.String str32 = caverphone17.caverphone("AA11111111");
        boolean boolean35 = caverphone17.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str37 = caverphone17.caverphone("");
        java.lang.Object obj38 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        boolean boolean45 = caverphone39.isCaverphoneEqual("", "hi!");
        java.lang.String str47 = caverphone39.caverphone("");
        boolean boolean50 = caverphone39.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        boolean boolean57 = caverphone51.isCaverphoneEqual("", "hi!");
        java.lang.String str59 = caverphone51.caverphone("");
        boolean boolean62 = caverphone51.isCaverphoneEqual("", "1111111111");
        java.lang.String str64 = caverphone51.encode("hi!");
        java.lang.String str66 = caverphone51.encode("");
        org.apache.commons.codec.language.Caverphone caverphone67 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean70 = caverphone67.isCaverphoneEqual("hi!", "");
        java.lang.String str72 = caverphone67.caverphone("");
        boolean boolean75 = caverphone67.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj76 = caverphone51.encode((java.lang.Object) "AA11111111");
        boolean boolean79 = caverphone51.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Object obj80 = caverphone39.encode((java.lang.Object) "1111111111");
        java.lang.Object obj81 = caverphone0.encode(obj80);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "AA11111111" + "'", obj76, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "1111111111" + "'", obj80, "1111111111");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "1111111111" + "'", obj81, "1111111111");
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone8.encode("hi!");
        java.lang.String str23 = caverphone8.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("1111111111", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone24.encode("AA11111111");
        java.lang.Object obj33 = caverphone8.encode((java.lang.Object) "AA11111111");
        java.lang.String str35 = caverphone8.encode("");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str38 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("AA11111111");
        java.lang.String str34 = caverphone27.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.caverphone("");
        boolean boolean43 = caverphone35.isCaverphoneEqual("AA11111111", "");
        java.lang.String str45 = caverphone35.caverphone("AA11111111");
        boolean boolean48 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj49 = caverphone27.encode((java.lang.Object) "");
        java.lang.String str51 = caverphone27.caverphone("");
        java.lang.String str53 = caverphone27.caverphone("AA11111111");
        java.lang.Object obj54 = caverphone0.encode((java.lang.Object) str53);
        boolean boolean57 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.Class<?> wildcardClass58 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "1111111111" + "'", obj49, "1111111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "AA11111111" + "'", obj54, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("AA11111111");
        boolean boolean42 = caverphone34.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("hi!", "");
        java.lang.String str48 = caverphone43.encode("hi!");
        java.lang.String str50 = caverphone43.caverphone("1111111111");
        java.lang.String str52 = caverphone43.encode("1111111111");
        java.lang.Object obj53 = caverphone34.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone54 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean57 = caverphone54.isCaverphoneEqual("hi!", "");
        java.lang.String str59 = caverphone54.caverphone("");
        boolean boolean62 = caverphone54.isCaverphoneEqual("AA11111111", "");
        java.lang.String str64 = caverphone54.encode("1111111111");
        java.lang.Object obj65 = caverphone34.encode((java.lang.Object) str64);
        boolean boolean68 = caverphone34.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass69 = caverphone34.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = caverphone0.encode((java.lang.Object) wildcardClass69);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "1111111111" + "'", obj53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "1111111111" + "'", obj65, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = caverphone0.encode((java.lang.Object) (-1.0d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        boolean boolean31 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        boolean boolean38 = caverphone32.isCaverphoneEqual("", "hi!");
        java.lang.String str40 = caverphone32.caverphone("");
        boolean boolean43 = caverphone32.isCaverphoneEqual("", "1111111111");
        java.lang.String str45 = caverphone32.encode("hi!");
        java.lang.String str47 = caverphone32.encode("");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("hi!", "");
        java.lang.String str53 = caverphone48.caverphone("");
        boolean boolean56 = caverphone48.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj57 = caverphone32.encode((java.lang.Object) "AA11111111");
        boolean boolean60 = caverphone32.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str62 = caverphone32.encode("1111111111");
        boolean boolean65 = caverphone32.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone66 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean69 = caverphone66.isCaverphoneEqual("hi!", "");
        java.lang.String str71 = caverphone66.encode("hi!");
        java.lang.String str73 = caverphone66.caverphone("AA11111111");
        java.lang.String str75 = caverphone66.caverphone("hi!");
        boolean boolean78 = caverphone66.isCaverphoneEqual("", "AA11111111");
        java.lang.Object obj79 = caverphone32.encode((java.lang.Object) "");
        java.lang.Object obj80 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "AA11111111" + "'", obj57, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AA11111111" + "'", str71, "AA11111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "AA11111111" + "'", str73, "AA11111111");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "AA11111111" + "'", str75, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "1111111111" + "'", obj79, "1111111111");
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "1111111111" + "'", obj80, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone0.caverphone("1111111111");
        java.lang.String str40 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("AA11111111");
        java.lang.String str23 = caverphone16.caverphone("");
        java.lang.String str25 = caverphone16.encode("hi!");
        java.lang.String str27 = caverphone16.encode("");
        java.lang.String str29 = caverphone16.caverphone("hi!");
        boolean boolean32 = caverphone16.isCaverphoneEqual("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.caverphone("AA11111111");
        boolean boolean13 = caverphone5.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("1111111111");
        java.lang.Object obj24 = caverphone5.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone5.caverphone("1111111111");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.encode("hi!");
        java.lang.String str38 = caverphone31.caverphone("AA11111111");
        java.lang.String str40 = caverphone31.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.encode("hi!");
        java.lang.String str48 = caverphone41.caverphone("AA11111111");
        java.lang.String str50 = caverphone41.caverphone("hi!");
        java.lang.String str52 = caverphone41.caverphone("hi!");
        java.lang.String str54 = caverphone41.caverphone("1111111111");
        java.lang.Object obj55 = caverphone31.encode((java.lang.Object) "1111111111");
        java.lang.String str57 = caverphone31.encode("AA11111111");
        java.lang.String str59 = caverphone31.caverphone("1111111111");
        java.lang.Object obj60 = caverphone0.encode((java.lang.Object) str59);
        java.lang.String str62 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone63 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean66 = caverphone63.isCaverphoneEqual("hi!", "");
        java.lang.String str68 = caverphone63.caverphone("AA11111111");
        java.lang.String str70 = caverphone63.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone71 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean74 = caverphone71.isCaverphoneEqual("hi!", "");
        java.lang.String str76 = caverphone71.caverphone("");
        boolean boolean79 = caverphone71.isCaverphoneEqual("AA11111111", "");
        java.lang.String str81 = caverphone71.caverphone("AA11111111");
        boolean boolean84 = caverphone71.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj85 = caverphone63.encode((java.lang.Object) "");
        java.lang.String str87 = caverphone63.encode("AA11111111");
        java.lang.Object obj88 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AA11111111" + "'", str68, "AA11111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AA11111111" + "'", str70, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "1111111111" + "'", str76, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AA11111111" + "'", str81, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "1111111111" + "'", obj85, "1111111111");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "AA11111111" + "'", str87, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "AA11111111" + "'", obj88, "AA11111111");
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean37 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.String str48 = caverphone38.caverphone("AA11111111");
        java.lang.String str50 = caverphone38.caverphone("AA11111111");
        java.lang.String str52 = caverphone38.caverphone("hi!");
        java.lang.String str54 = caverphone38.encode("1111111111");
        java.lang.String str56 = caverphone38.caverphone("AA11111111");
        java.lang.String str58 = caverphone38.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = caverphone0.encode((java.lang.Object) caverphone38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("", "hi!");
        java.lang.String str23 = caverphone15.caverphone("");
        boolean boolean26 = caverphone15.isCaverphoneEqual("", "1111111111");
        java.lang.String str28 = caverphone15.encode("hi!");
        java.lang.String str30 = caverphone15.encode("");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj40 = caverphone15.encode((java.lang.Object) "AA11111111");
        java.lang.String str42 = caverphone15.caverphone("AA11111111");
        java.lang.String str44 = caverphone15.encode("hi!");
        java.lang.Class<?> wildcardClass45 = caverphone15.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = caverphone0.encode((java.lang.Object) wildcardClass45);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.encode("1111111111");
        boolean boolean47 = caverphone34.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj52 = caverphone34.encode((java.lang.Object) "");
        java.lang.String str54 = caverphone34.caverphone("1111111111");
        java.lang.String str56 = caverphone34.encode("hi!");
        java.lang.String str58 = caverphone34.caverphone("1111111111");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) str58);
        org.apache.commons.codec.language.Caverphone caverphone60 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean63 = caverphone60.isCaverphoneEqual("1111111111", "");
        java.lang.String str65 = caverphone60.caverphone("1111111111");
        java.lang.String str67 = caverphone60.encode("");
        boolean boolean70 = caverphone60.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj71 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str73 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass74 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1111111111" + "'", str73, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("AA11111111");
        java.lang.String str34 = caverphone27.encode("AA11111111");
        boolean boolean37 = caverphone27.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str39 = caverphone27.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = caverphone0.encode((java.lang.Object) caverphone27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.encode("1111111111");
        boolean boolean37 = caverphone24.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str39 = caverphone24.encode("AA11111111");
        boolean boolean42 = caverphone24.isCaverphoneEqual("hi!", "");
        boolean boolean45 = caverphone24.isCaverphoneEqual("", "hi!");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "1111111111" + "'", obj46, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("");
        boolean boolean19 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone20.isCaverphoneEqual("", "hi!");
        java.lang.String str28 = caverphone20.caverphone("");
        boolean boolean31 = caverphone20.isCaverphoneEqual("", "1111111111");
        java.lang.String str33 = caverphone20.encode("hi!");
        java.lang.String str35 = caverphone20.encode("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj45 = caverphone20.encode((java.lang.Object) "AA11111111");
        boolean boolean48 = caverphone20.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str50 = caverphone20.caverphone("hi!");
        boolean boolean53 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str55 = caverphone20.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone56 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str58 = caverphone56.caverphone("1111111111");
        java.lang.String str60 = caverphone56.caverphone("1111111111");
        java.lang.Object obj61 = caverphone20.encode((java.lang.Object) str60);
        boolean boolean64 = caverphone20.isCaverphoneEqual("", "hi!");
        java.lang.String str66 = caverphone20.encode("");
        java.lang.String str68 = caverphone20.encode("1111111111");
        java.lang.Object obj69 = caverphone0.encode((java.lang.Object) str68);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "AA11111111" + "'", obj45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "1111111111" + "'", obj61, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "1111111111" + "'", obj69, "1111111111");
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        java.lang.String str29 = caverphone0.encode("hi!");
        java.lang.String str31 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.caverphone("");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str14 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str26 = caverphone0.caverphone("1111111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str31 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str23 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.encode("");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        java.lang.String str36 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass37 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("1111111111");
        java.lang.String str24 = caverphone0.encode("hi!");
        boolean boolean27 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.String str19 = caverphone0.encode("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("AA11111111");
        boolean boolean31 = caverphone23.isCaverphoneEqual("", "");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        java.lang.String str36 = caverphone0.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = caverphone0.encode((java.lang.Object) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone12.caverphone("");
        boolean boolean23 = caverphone12.isCaverphoneEqual("", "1111111111");
        java.lang.String str25 = caverphone12.encode("hi!");
        java.lang.String str27 = caverphone12.encode("");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj37 = caverphone12.encode((java.lang.Object) "AA11111111");
        boolean boolean40 = caverphone12.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean44 = caverphone0.isCaverphoneEqual("AA11111111", "");
        boolean boolean47 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("hi!", "");
        java.lang.String str53 = caverphone48.caverphone("");
        boolean boolean56 = caverphone48.isCaverphoneEqual("AA11111111", "");
        java.lang.String str58 = caverphone48.caverphone("AA11111111");
        boolean boolean61 = caverphone48.isCaverphoneEqual("", "1111111111");
        java.lang.String str63 = caverphone48.caverphone("AA11111111");
        boolean boolean66 = caverphone48.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str68 = caverphone48.encode("1111111111");
        java.lang.String str70 = caverphone48.encode("1111111111");
        java.lang.Object obj71 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "AA11111111" + "'", obj37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("1111111111", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str20 = caverphone12.encode("");
        java.lang.String str22 = caverphone12.encode("hi!");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) str22);
        java.lang.String str25 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "AA11111111" + "'", obj23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("AA11111111");
        boolean boolean24 = caverphone16.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone16.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.encode("1111111111");
        java.lang.Object obj47 = caverphone16.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode(obj47);
        java.lang.String str50 = caverphone0.encode("hi!");
        java.lang.String str52 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str18 = caverphone0.caverphone("");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        boolean boolean29 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.String str31 = caverphone16.caverphone("AA11111111");
        boolean boolean34 = caverphone16.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str36 = caverphone16.caverphone("AA11111111");
        java.lang.Object obj37 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "AA11111111" + "'", obj37, "AA11111111");
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.caverphone("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str40 = caverphone38.caverphone("1111111111");
        java.lang.String str42 = caverphone38.caverphone("1111111111");
        java.lang.String str44 = caverphone38.caverphone("AA11111111");
        java.lang.Object obj45 = caverphone32.encode((java.lang.Object) str44);
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        boolean boolean52 = caverphone46.isCaverphoneEqual("", "hi!");
        java.lang.String str54 = caverphone46.caverphone("");
        boolean boolean57 = caverphone46.isCaverphoneEqual("", "1111111111");
        java.lang.String str59 = caverphone46.encode("hi!");
        java.lang.String str61 = caverphone46.encode("");
        org.apache.commons.codec.language.Caverphone caverphone62 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean65 = caverphone62.isCaverphoneEqual("hi!", "");
        java.lang.String str67 = caverphone62.caverphone("");
        boolean boolean70 = caverphone62.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj71 = caverphone46.encode((java.lang.Object) "AA11111111");
        boolean boolean74 = caverphone46.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str76 = caverphone46.encode("AA11111111");
        java.lang.String str78 = caverphone46.caverphone("hi!");
        java.lang.Object obj79 = caverphone32.encode((java.lang.Object) str78);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = caverphone0.encode((java.lang.Object) caverphone32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "AA11111111" + "'", obj45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "AA11111111" + "'", obj71, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "AA11111111" + "'", str76, "AA11111111");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "AA11111111" + "'", str78, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "AA11111111" + "'", obj79, "AA11111111");
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str28 = caverphone0.caverphone("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = caverphone0.encode((java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.encode("AA11111111");
        java.lang.String str25 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.caverphone("");
        java.lang.String str17 = caverphone0.encode("1111111111");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("1111111111", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str25 = caverphone17.caverphone("AA11111111");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) str25);
        java.lang.String str28 = caverphone0.encode("");
        java.lang.String str30 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("AA11111111");
        java.lang.String str38 = caverphone31.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone39.caverphone("");
        boolean boolean47 = caverphone39.isCaverphoneEqual("AA11111111", "");
        java.lang.String str49 = caverphone39.caverphone("AA11111111");
        boolean boolean52 = caverphone39.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj53 = caverphone31.encode((java.lang.Object) "");
        java.lang.String str55 = caverphone31.caverphone("");
        java.lang.String str57 = caverphone31.caverphone("AA11111111");
        java.lang.String str59 = caverphone31.caverphone("1111111111");
        java.lang.String str61 = caverphone31.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = caverphone0.encode((java.lang.Object) caverphone31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "1111111111" + "'", obj53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str8 = caverphone6.caverphone("1111111111");
        java.lang.String str10 = caverphone6.caverphone("1111111111");
        java.lang.String str12 = caverphone6.caverphone("AA11111111");
        java.lang.Object obj13 = caverphone0.encode((java.lang.Object) str12);
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "AA11111111" + "'", obj13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.encode("hi!");
        java.lang.String str27 = caverphone20.caverphone("1111111111");
        java.lang.String str29 = caverphone20.encode("1111111111");
        java.lang.Object obj30 = caverphone14.encode((java.lang.Object) "1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "1111111111" + "'", obj30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.Class<?> wildcardClass37 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str13 = caverphone0.caverphone("");
        java.lang.String str15 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("");
        boolean boolean33 = caverphone25.isCaverphoneEqual("AA11111111", "");
        java.lang.String str35 = caverphone25.encode("1111111111");
        boolean boolean38 = caverphone25.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone39.caverphone("");
        boolean boolean47 = caverphone39.isCaverphoneEqual("AA11111111", "");
        java.lang.String str49 = caverphone39.caverphone("AA11111111");
        java.lang.String str51 = caverphone39.caverphone("AA11111111");
        java.lang.String str53 = caverphone39.caverphone("hi!");
        java.lang.String str55 = caverphone39.caverphone("1111111111");
        java.lang.Object obj56 = caverphone25.encode((java.lang.Object) str55);
        boolean boolean59 = caverphone25.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str61 = caverphone25.encode("AA11111111");
        java.lang.String str63 = caverphone25.encode("1111111111");
        java.lang.Object obj64 = caverphone0.encode((java.lang.Object) str63);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "1111111111" + "'", obj56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "1111111111" + "'", obj64, "1111111111");
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("");
        boolean boolean19 = caverphone11.isCaverphoneEqual("AA11111111", "");
        java.lang.String str21 = caverphone11.encode("1111111111");
        boolean boolean24 = caverphone11.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj26 = caverphone11.encode((java.lang.Object) "AA11111111");
        boolean boolean29 = caverphone11.isCaverphoneEqual("", "hi!");
        java.lang.String str31 = caverphone11.caverphone("AA11111111");
        java.lang.String str33 = caverphone11.encode("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("1111111111", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str20 = caverphone12.encode("");
        java.lang.String str22 = caverphone12.encode("hi!");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) str22);
        java.lang.String str25 = caverphone0.encode("AA11111111");
        java.lang.String str27 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "AA11111111" + "'", obj23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.Object obj16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = caverphone0.encode(obj16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.Object obj12 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("AA11111111");
        java.lang.String str20 = caverphone13.caverphone("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        java.lang.String str23 = caverphone0.caverphone("hi!");
        boolean boolean26 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str28 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "1111111111" + "'", obj12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str10 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        java.lang.String str18 = caverphone11.caverphone("");
        java.lang.String str20 = caverphone11.encode("hi!");
        java.lang.String str22 = caverphone11.encode("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("AA11111111");
        java.lang.String str31 = caverphone24.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("AA11111111");
        boolean boolean40 = caverphone32.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.encode("hi!");
        java.lang.String str48 = caverphone41.caverphone("1111111111");
        java.lang.String str50 = caverphone41.encode("1111111111");
        java.lang.Object obj51 = caverphone32.encode((java.lang.Object) "1111111111");
        java.lang.String str53 = caverphone32.caverphone("1111111111");
        boolean boolean56 = caverphone32.isCaverphoneEqual("", "hi!");
        java.lang.Object obj57 = caverphone24.encode((java.lang.Object) "hi!");
        java.lang.String str59 = caverphone24.caverphone("AA11111111");
        java.lang.Object obj60 = caverphone0.encode((java.lang.Object) str59);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "AA11111111" + "'", obj57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "AA11111111" + "'", obj60, "AA11111111");
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        boolean boolean36 = caverphone30.isCaverphoneEqual("", "hi!");
        java.lang.String str38 = caverphone30.caverphone("");
        boolean boolean41 = caverphone30.isCaverphoneEqual("", "1111111111");
        java.lang.String str43 = caverphone30.encode("hi!");
        java.lang.String str45 = caverphone30.encode("");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("1111111111", "");
        boolean boolean52 = caverphone46.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str54 = caverphone46.encode("AA11111111");
        java.lang.Object obj55 = caverphone30.encode((java.lang.Object) "AA11111111");
        java.lang.String str57 = caverphone30.encode("");
        boolean boolean60 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str62 = caverphone30.encode("hi!");
        java.lang.String str64 = caverphone30.caverphone("AA11111111");
        java.lang.Object obj65 = caverphone0.encode((java.lang.Object) str64);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "AA11111111" + "'", obj55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "AA11111111" + "'", obj65, "AA11111111");
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.encode("hi!");
        java.lang.String str31 = caverphone24.caverphone("1111111111");
        java.lang.String str33 = caverphone24.encode("1111111111");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.caverphone("AA11111111");
        boolean boolean43 = caverphone35.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone44 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean47 = caverphone44.isCaverphoneEqual("hi!", "");
        java.lang.String str49 = caverphone44.encode("hi!");
        java.lang.String str51 = caverphone44.caverphone("1111111111");
        java.lang.String str53 = caverphone44.encode("1111111111");
        java.lang.Object obj54 = caverphone35.encode((java.lang.Object) "1111111111");
        java.lang.String str56 = caverphone35.caverphone("1111111111");
        boolean boolean59 = caverphone35.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass60 = caverphone35.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = caverphone0.encode((java.lang.Object) caverphone35);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "1111111111" + "'", obj54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str20 = caverphone0.encode("");
        java.lang.String str22 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str13 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("AA11111111");
        boolean boolean31 = caverphone14.isCaverphoneEqual("", "1111111111");
        java.lang.String str33 = caverphone14.encode("AA11111111");
        java.lang.String str35 = caverphone14.encode("hi!");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) str35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "AA11111111" + "'", obj36, "AA11111111");
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str22 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("");
        boolean boolean31 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str33 = caverphone23.encode("1111111111");
        boolean boolean36 = caverphone23.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str38 = caverphone23.caverphone("hi!");
        java.lang.String str40 = caverphone23.encode("1111111111");
        boolean boolean43 = caverphone23.isCaverphoneEqual("", "hi!");
        boolean boolean46 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str48 = caverphone23.encode("hi!");
        java.lang.String str50 = caverphone23.encode("");
        java.lang.String str52 = caverphone23.encode("");
        boolean boolean55 = caverphone23.isCaverphoneEqual("", "");
        java.lang.String str57 = caverphone23.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = caverphone0.encode((java.lang.Object) caverphone23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("1111111111", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str35 = caverphone27.encode("AA11111111");
        java.lang.String str37 = caverphone27.encode("");
        java.lang.String str39 = caverphone27.caverphone("");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) str39);
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "1111111111" + "'", obj40, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean42 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str44 = caverphone0.encode("AA11111111");
        java.lang.String str46 = caverphone0.caverphone("");
        java.lang.String str48 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        java.lang.String str34 = caverphone0.encode("");
        boolean boolean37 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.String str48 = caverphone38.caverphone("");
        java.lang.String str50 = caverphone38.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) caverphone38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        boolean boolean10 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str12 = caverphone0.encode("");
        java.lang.String str14 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("AA11111111");
        java.lang.String str22 = caverphone15.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("");
        boolean boolean31 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        boolean boolean36 = caverphone23.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj37 = caverphone15.encode((java.lang.Object) "");
        java.lang.String str39 = caverphone15.caverphone("");
        java.lang.String str41 = caverphone15.caverphone("AA11111111");
        java.lang.String str43 = caverphone15.caverphone("1111111111");
        java.lang.Object obj44 = caverphone0.encode((java.lang.Object) str43);
        java.lang.Class<?> wildcardClass45 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "1111111111" + "'", obj37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "1111111111" + "'", obj44, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("1111111111", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str23 = caverphone15.encode("");
        java.lang.String str25 = caverphone15.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("AA11111111");
        java.lang.String str33 = caverphone26.caverphone("");
        java.lang.String str35 = caverphone26.encode("hi!");
        java.lang.Object obj36 = caverphone15.encode((java.lang.Object) str35);
        java.lang.Object obj37 = caverphone0.encode(obj36);
        java.lang.String str39 = caverphone0.caverphone("AA11111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "AA11111111" + "'", obj36, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "AA11111111" + "'", obj37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("AA11111111");
        java.lang.String str15 = caverphone0.caverphone("");
        java.lang.String str17 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        java.lang.String str17 = caverphone12.caverphone("");
        boolean boolean20 = caverphone12.isCaverphoneEqual("AA11111111", "");
        java.lang.String str22 = caverphone12.caverphone("AA11111111");
        java.lang.String str24 = caverphone12.caverphone("hi!");
        java.lang.String str26 = caverphone12.encode("AA11111111");
        java.lang.String str28 = caverphone12.caverphone("AA11111111");
        java.lang.String str30 = caverphone12.caverphone("1111111111");
        java.lang.String str32 = caverphone12.encode("AA11111111");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass34 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str12 = caverphone10.caverphone("1111111111");
        boolean boolean15 = caverphone10.isCaverphoneEqual("1111111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = caverphone0.encode((java.lang.Object) caverphone10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.Object obj15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = caverphone0.encode(obj15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.caverphone("AA11111111");
        boolean boolean13 = caverphone5.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("1111111111");
        java.lang.Object obj24 = caverphone5.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone5.caverphone("1111111111");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.Class<?> wildcardClass31 = caverphone0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        boolean boolean38 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.Class<?> wildcardClass39 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.encode("hi!");
        java.lang.String str41 = caverphone34.caverphone("AA11111111");
        java.lang.String str43 = caverphone34.caverphone("hi!");
        boolean boolean46 = caverphone34.isCaverphoneEqual("", "AA11111111");
        java.lang.Object obj47 = caverphone0.encode((java.lang.Object) "");
        boolean boolean50 = caverphone0.isCaverphoneEqual("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str16 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str25 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("1111111111", "");
        java.lang.String str31 = caverphone26.caverphone("1111111111");
        java.lang.String str33 = caverphone26.encode("");
        java.lang.String str35 = caverphone26.encode("hi!");
        java.lang.String str37 = caverphone26.encode("1111111111");
        boolean boolean40 = caverphone26.isCaverphoneEqual("1111111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        boolean boolean47 = caverphone41.isCaverphoneEqual("", "hi!");
        java.lang.String str49 = caverphone41.caverphone("");
        boolean boolean52 = caverphone41.isCaverphoneEqual("", "1111111111");
        java.lang.String str54 = caverphone41.encode("hi!");
        java.lang.String str56 = caverphone41.encode("");
        org.apache.commons.codec.language.Caverphone caverphone57 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean60 = caverphone57.isCaverphoneEqual("hi!", "");
        java.lang.String str62 = caverphone57.caverphone("");
        boolean boolean65 = caverphone57.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj66 = caverphone41.encode((java.lang.Object) "AA11111111");
        boolean boolean69 = caverphone41.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str71 = caverphone41.encode("1111111111");
        boolean boolean74 = caverphone41.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone75 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean78 = caverphone75.isCaverphoneEqual("hi!", "");
        java.lang.String str80 = caverphone75.encode("hi!");
        java.lang.String str82 = caverphone75.caverphone("AA11111111");
        java.lang.String str84 = caverphone75.caverphone("hi!");
        boolean boolean87 = caverphone75.isCaverphoneEqual("", "AA11111111");
        java.lang.Object obj88 = caverphone41.encode((java.lang.Object) "");
        java.lang.Object obj89 = caverphone26.encode(obj88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "AA11111111" + "'", obj66, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "1111111111" + "'", str71, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "AA11111111" + "'", str80, "AA11111111");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "AA11111111" + "'", str82, "AA11111111");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "AA11111111" + "'", str84, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "1111111111" + "'", obj88, "1111111111");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "1111111111" + "'", obj89, "1111111111");
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        java.lang.String str18 = caverphone11.caverphone("");
        java.lang.String str20 = caverphone11.encode("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone0.encode("hi!");
        boolean boolean29 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str31 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        java.lang.Object obj33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = caverphone0.encode(obj33);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.encode("1111111111");
        boolean boolean37 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone24.caverphone("AA11111111");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) str39);
        java.lang.String str42 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("1111111111", "");
        boolean boolean49 = caverphone43.isCaverphoneEqual("hi!", "hi!");
        boolean boolean52 = caverphone43.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str54 = caverphone43.caverphone("");
        java.lang.String str56 = caverphone43.encode("");
        java.lang.String str58 = caverphone43.encode("1111111111");
        java.lang.String str60 = caverphone43.encode("AA11111111");
        java.lang.Object obj61 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "AA11111111" + "'", obj61, "AA11111111");
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.encode("1111111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj45 = caverphone27.encode((java.lang.Object) "");
        java.lang.String str47 = caverphone27.caverphone("hi!");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) str47);
        java.lang.Class<?> wildcardClass49 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = caverphone0.encode((java.lang.Object) 0.0f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        boolean boolean14 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str35 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.Class<?> wildcardClass31 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("1111111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str20 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.encode("AA11111111");
        java.lang.String str6 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("hi!");
        java.lang.String str16 = caverphone7.caverphone("hi!");
        java.lang.String str18 = caverphone7.caverphone("1111111111");
        java.lang.String str20 = caverphone7.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = caverphone0.encode((java.lang.Object) caverphone7);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AA11111111" + "'", str4, "AA11111111");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AA11111111" + "'", str6, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        boolean boolean19 = caverphone13.isCaverphoneEqual("", "hi!");
        java.lang.String str21 = caverphone13.caverphone("");
        boolean boolean24 = caverphone13.isCaverphoneEqual("", "1111111111");
        boolean boolean27 = caverphone13.isCaverphoneEqual("", "");
        java.lang.String str29 = caverphone13.caverphone("hi!");
        java.lang.String str31 = caverphone13.caverphone("");
        java.lang.String str33 = caverphone13.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass37 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str13 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str23 = caverphone0.encode("1111111111");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("AA11111111");
        java.lang.String str36 = caverphone29.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.String str47 = caverphone37.caverphone("AA11111111");
        boolean boolean50 = caverphone37.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj51 = caverphone29.encode((java.lang.Object) "");
        java.lang.String str53 = caverphone29.caverphone("");
        java.lang.String str55 = caverphone29.caverphone("AA11111111");
        java.lang.String str57 = caverphone29.caverphone("1111111111");
        boolean boolean60 = caverphone29.isCaverphoneEqual("hi!", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = caverphone0.encode((java.lang.Object) caverphone29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("");
        java.lang.String str21 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str29 = caverphone0.caverphone("");
        boolean boolean32 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        java.lang.String str6 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        boolean boolean13 = caverphone7.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str15 = caverphone7.encode("");
        java.lang.String str17 = caverphone7.encode("hi!");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AA11111111" + "'", str6, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "AA11111111" + "'", obj18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        java.lang.String str26 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("1111111111", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("hi!", "hi!");
        boolean boolean36 = caverphone27.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str38 = caverphone27.caverphone("");
        java.lang.String str40 = caverphone27.caverphone("hi!");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        java.lang.String str24 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        boolean boolean31 = caverphone25.isCaverphoneEqual("", "hi!");
        java.lang.String str33 = caverphone25.caverphone("");
        boolean boolean36 = caverphone25.isCaverphoneEqual("", "1111111111");
        boolean boolean39 = caverphone25.isCaverphoneEqual("", "");
        java.lang.String str41 = caverphone25.caverphone("hi!");
        java.lang.String str43 = caverphone25.caverphone("");
        java.lang.String str45 = caverphone25.caverphone("hi!");
        boolean boolean48 = caverphone25.isCaverphoneEqual("", "");
        boolean boolean51 = caverphone25.isCaverphoneEqual("", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = caverphone0.encode((java.lang.Object) caverphone25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str13 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("AA11111111");
        java.lang.String str23 = caverphone14.caverphone("1111111111");
        java.lang.String str25 = caverphone14.encode("");
        boolean boolean28 = caverphone14.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("1111111111", "");
        boolean boolean37 = caverphone31.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str39 = caverphone31.encode("AA11111111");
        java.lang.String str41 = caverphone31.encode("");
        java.lang.String str43 = caverphone31.caverphone("");
        java.lang.String str45 = caverphone31.caverphone("1111111111");
        java.lang.Object obj46 = caverphone14.encode((java.lang.Object) "1111111111");
        java.lang.Object obj47 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass48 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "1111111111" + "'", obj46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("1111111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str23 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.caverphone("");
        boolean boolean18 = caverphone10.isCaverphoneEqual("AA11111111", "");
        java.lang.String str20 = caverphone10.encode("1111111111");
        boolean boolean23 = caverphone10.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str25 = caverphone10.encode("AA11111111");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) str25);
        java.lang.String str28 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str13 = caverphone0.caverphone("");
        java.lang.String str15 = caverphone0.caverphone("1111111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.encode("1111111111");
        java.lang.String str30 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("1111111111", "");
        boolean boolean29 = caverphone23.isCaverphoneEqual("hi!", "hi!");
        boolean boolean32 = caverphone23.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str34 = caverphone23.caverphone("");
        java.lang.String str36 = caverphone23.encode("hi!");
        java.lang.String str38 = caverphone23.encode("AA11111111");
        java.lang.Object obj39 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str41 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "AA11111111" + "'", obj39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.encode("hi!");
        java.lang.String str22 = caverphone15.caverphone("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str25 = caverphone0.encode("AA11111111");
        java.lang.Object obj26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = caverphone0.encode(obj26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str13 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("AA11111111");
        java.lang.String str23 = caverphone14.caverphone("1111111111");
        java.lang.String str25 = caverphone14.encode("");
        boolean boolean28 = caverphone14.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("1111111111", "");
        boolean boolean37 = caverphone31.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str39 = caverphone31.encode("AA11111111");
        java.lang.String str41 = caverphone31.encode("");
        java.lang.String str43 = caverphone31.caverphone("");
        java.lang.String str45 = caverphone31.caverphone("1111111111");
        java.lang.Object obj46 = caverphone14.encode((java.lang.Object) "1111111111");
        java.lang.Object obj47 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "1111111111" + "'", obj46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean27 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("1111111111", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str36 = caverphone28.caverphone("AA11111111");
        boolean boolean39 = caverphone28.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean42 = caverphone28.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("1111111111", "");
        boolean boolean49 = caverphone43.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str51 = caverphone43.encode("");
        java.lang.String str53 = caverphone43.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone54 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean57 = caverphone54.isCaverphoneEqual("hi!", "");
        java.lang.String str59 = caverphone54.caverphone("AA11111111");
        java.lang.String str61 = caverphone54.caverphone("");
        java.lang.String str63 = caverphone54.encode("hi!");
        java.lang.Object obj64 = caverphone43.encode((java.lang.Object) str63);
        java.lang.Object obj65 = caverphone28.encode(obj64);
        java.lang.String str67 = caverphone28.caverphone("AA11111111");
        java.lang.String str69 = caverphone28.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = caverphone0.encode((java.lang.Object) caverphone28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "AA11111111" + "'", obj64, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "AA11111111" + "'", obj65, "AA11111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        java.lang.String str37 = caverphone0.encode("");
        boolean boolean40 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        boolean boolean21 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str23 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("hi!");
        java.lang.String str18 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.caverphone("");
        java.lang.String str22 = caverphone0.encode("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = caverphone0.encode((java.lang.Object) 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.caverphone("");
        java.lang.String str22 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        boolean boolean29 = caverphone23.isCaverphoneEqual("", "hi!");
        java.lang.String str31 = caverphone23.caverphone("");
        boolean boolean34 = caverphone23.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone23.encode("hi!");
        java.lang.String str38 = caverphone23.encode("");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone39.caverphone("");
        boolean boolean47 = caverphone39.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj48 = caverphone23.encode((java.lang.Object) "AA11111111");
        java.lang.String str50 = caverphone23.caverphone("AA11111111");
        java.lang.String str52 = caverphone23.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone53 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean56 = caverphone53.isCaverphoneEqual("1111111111", "");
        boolean boolean59 = caverphone53.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str61 = caverphone53.caverphone("AA11111111");
        boolean boolean64 = caverphone53.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj65 = caverphone23.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = caverphone0.encode(obj65);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "AA11111111" + "'", obj65, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "AA11111111" + "'", obj67, "AA11111111");
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        boolean boolean29 = caverphone23.isCaverphoneEqual("", "hi!");
        java.lang.String str31 = caverphone23.caverphone("");
        boolean boolean34 = caverphone23.isCaverphoneEqual("", "1111111111");
        boolean boolean37 = caverphone23.isCaverphoneEqual("", "");
        boolean boolean40 = caverphone23.isCaverphoneEqual("", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = caverphone0.encode((java.lang.Object) caverphone23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.caverphone("AA11111111");
        boolean boolean27 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj28 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        boolean boolean37 = caverphone31.isCaverphoneEqual("", "hi!");
        java.lang.String str39 = caverphone31.caverphone("");
        boolean boolean42 = caverphone31.isCaverphoneEqual("", "1111111111");
        boolean boolean45 = caverphone31.isCaverphoneEqual("", "");
        java.lang.String str47 = caverphone31.caverphone("hi!");
        java.lang.String str49 = caverphone31.caverphone("");
        java.lang.String str51 = caverphone31.caverphone("hi!");
        boolean boolean54 = caverphone31.isCaverphoneEqual("1111111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = caverphone0.encode((java.lang.Object) caverphone31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "AA11111111" + "'", obj28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("");
        boolean boolean35 = caverphone0.isCaverphoneEqual("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.caverphone("");
        java.lang.String str28 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean15 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.encode("hi!");
        java.lang.String str23 = caverphone16.caverphone("");
        java.lang.Class<?> wildcardClass24 = caverphone16.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("");
        boolean boolean33 = caverphone25.isCaverphoneEqual("AA11111111", "");
        java.lang.String str35 = caverphone25.caverphone("AA11111111");
        java.lang.String str37 = caverphone25.caverphone("AA11111111");
        java.lang.String str39 = caverphone25.caverphone("hi!");
        java.lang.String str41 = caverphone25.encode("1111111111");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "1111111111" + "'", obj42, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str8 = caverphone6.caverphone("1111111111");
        java.lang.String str10 = caverphone6.caverphone("1111111111");
        java.lang.String str12 = caverphone6.caverphone("AA11111111");
        java.lang.Object obj13 = caverphone0.encode((java.lang.Object) str12);
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "AA11111111" + "'", obj13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        java.lang.String str41 = caverphone0.encode("AA11111111");
        java.lang.String str43 = caverphone0.encode("AA11111111");
        java.lang.String str45 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone32.encode("1111111111");
        boolean boolean45 = caverphone32.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str47 = caverphone32.caverphone("hi!");
        java.lang.String str49 = caverphone32.encode("1111111111");
        boolean boolean52 = caverphone32.isCaverphoneEqual("", "AA11111111");
        boolean boolean55 = caverphone32.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str57 = caverphone32.encode("hi!");
        java.lang.Object obj58 = caverphone0.encode((java.lang.Object) str57);
        java.lang.String str60 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass61 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        java.lang.String str37 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.String str48 = caverphone38.encode("1111111111");
        boolean boolean51 = caverphone38.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str53 = caverphone38.encode("AA11111111");
        boolean boolean56 = caverphone38.isCaverphoneEqual("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = caverphone0.encode((java.lang.Object) caverphone38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("1111111111", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str23 = caverphone15.encode("AA11111111");
        java.lang.String str25 = caverphone15.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass26 = caverphone15.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = caverphone0.encode((java.lang.Object) caverphone15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        boolean boolean31 = caverphone14.isCaverphoneEqual("hi!", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        boolean boolean15 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Object obj16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = caverphone0.encode(obj16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.encode("");
        boolean boolean12 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str14 = caverphone0.encode("");
        java.lang.String str16 = caverphone0.encode("");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        boolean boolean32 = caverphone19.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str34 = caverphone19.encode("hi!");
        java.lang.String str36 = caverphone19.caverphone("hi!");
        boolean boolean39 = caverphone19.isCaverphoneEqual("", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = caverphone0.encode((java.lang.Object) boolean39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone20.isCaverphoneEqual("", "hi!");
        java.lang.String str28 = caverphone20.caverphone("");
        boolean boolean31 = caverphone20.isCaverphoneEqual("", "1111111111");
        java.lang.String str33 = caverphone20.encode("hi!");
        java.lang.String str35 = caverphone20.encode("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj45 = caverphone20.encode((java.lang.Object) "AA11111111");
        boolean boolean48 = caverphone20.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean51 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str53 = caverphone20.caverphone("1111111111");
        boolean boolean56 = caverphone20.isCaverphoneEqual("", "");
        java.lang.Object obj57 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass58 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "AA11111111" + "'", obj45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "1111111111" + "'", obj57, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        boolean boolean35 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str37 = caverphone0.caverphone("AA11111111");
        java.lang.String str39 = caverphone0.caverphone("1111111111");
        java.lang.String str41 = caverphone0.encode("1111111111");
        java.lang.String str43 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        boolean boolean32 = caverphone19.isCaverphoneEqual("", "");
        java.lang.String str34 = caverphone19.encode("1111111111");
        java.lang.String str36 = caverphone19.caverphone("");
        java.lang.Object obj37 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "1111111111" + "'", obj37, "1111111111");
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("");
        boolean boolean25 = caverphone17.isCaverphoneEqual("AA11111111", "");
        java.lang.String str27 = caverphone17.encode("1111111111");
        boolean boolean30 = caverphone17.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str32 = caverphone17.caverphone("hi!");
        java.lang.String str34 = caverphone17.encode("1111111111");
        boolean boolean37 = caverphone17.isCaverphoneEqual("", "AA11111111");
        boolean boolean40 = caverphone17.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("");
        boolean boolean49 = caverphone41.isCaverphoneEqual("AA11111111", "");
        java.lang.String str51 = caverphone41.encode("1111111111");
        boolean boolean54 = caverphone41.isCaverphoneEqual("AA11111111", "");
        java.lang.String str56 = caverphone41.caverphone("AA11111111");
        java.lang.Object obj57 = caverphone17.encode((java.lang.Object) str56);
        boolean boolean60 = caverphone17.isCaverphoneEqual("", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = caverphone0.encode((java.lang.Object) boolean60);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "AA11111111" + "'", obj57, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.String str19 = caverphone14.caverphone("1111111111");
        java.lang.String str21 = caverphone14.encode("");
        java.lang.String str23 = caverphone14.encode("hi!");
        java.lang.String str25 = caverphone14.encode("1111111111");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) str25);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "1111111111" + "'", obj26, "1111111111");
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("1111111111", "");
        boolean boolean31 = caverphone25.isCaverphoneEqual("hi!", "hi!");
        boolean boolean34 = caverphone25.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str36 = caverphone25.caverphone("");
        java.lang.String str38 = caverphone25.caverphone("hi!");
        java.lang.String str40 = caverphone25.caverphone("hi!");
        java.lang.String str42 = caverphone25.caverphone("hi!");
        java.lang.String str44 = caverphone25.encode("");
        java.lang.String str46 = caverphone25.caverphone("1111111111");
        java.lang.Object obj47 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str49 = caverphone0.caverphone("AA11111111");
        boolean boolean52 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass53 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone27.caverphone("");
        boolean boolean38 = caverphone27.isCaverphoneEqual("", "1111111111");
        java.lang.String str40 = caverphone27.encode("hi!");
        java.lang.String str42 = caverphone27.encode("");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("hi!", "");
        java.lang.String str48 = caverphone43.caverphone("");
        boolean boolean51 = caverphone43.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj52 = caverphone27.encode((java.lang.Object) "AA11111111");
        boolean boolean55 = caverphone27.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str57 = caverphone27.encode("AA11111111");
        java.lang.Object obj58 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "AA11111111" + "'", obj52, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass35 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        java.lang.String str37 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean15 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        java.lang.String str15 = caverphone0.caverphone("1111111111");
        java.lang.String str17 = caverphone0.caverphone("AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean20 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone8.encode("hi!");
        java.lang.String str23 = caverphone8.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("1111111111", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone24.encode("AA11111111");
        java.lang.Object obj33 = caverphone8.encode((java.lang.Object) "AA11111111");
        java.lang.String str35 = caverphone8.encode("");
        boolean boolean38 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone8.encode("hi!");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean44 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone45 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean48 = caverphone45.isCaverphoneEqual("hi!", "");
        java.lang.String str50 = caverphone45.caverphone("");
        boolean boolean53 = caverphone45.isCaverphoneEqual("AA11111111", "");
        java.lang.String str55 = caverphone45.caverphone("AA11111111");
        boolean boolean58 = caverphone45.isCaverphoneEqual("", "1111111111");
        java.lang.String str60 = caverphone45.caverphone("AA11111111");
        boolean boolean63 = caverphone45.isCaverphoneEqual("", "1111111111");
        boolean boolean66 = caverphone45.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str68 = caverphone45.encode("1111111111");
        java.lang.String str70 = caverphone45.caverphone("hi!");
        boolean boolean73 = caverphone45.isCaverphoneEqual("AA11111111", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = caverphone0.encode((java.lang.Object) boolean73);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AA11111111" + "'", str70, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.encode("hi!");
        java.lang.String str22 = caverphone15.caverphone("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str25 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("");
        boolean boolean37 = caverphone26.isCaverphoneEqual("", "1111111111");
        java.lang.String str39 = caverphone26.encode("hi!");
        java.lang.String str41 = caverphone26.encode("");
        java.lang.String str43 = caverphone26.caverphone("hi!");
        java.lang.String str45 = caverphone26.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone52 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str54 = caverphone52.caverphone("1111111111");
        java.lang.String str56 = caverphone52.caverphone("1111111111");
        java.lang.String str58 = caverphone52.caverphone("AA11111111");
        java.lang.Object obj59 = caverphone46.encode((java.lang.Object) str58);
        java.lang.String str61 = caverphone46.encode("1111111111");
        java.lang.Object obj62 = caverphone26.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = caverphone0.encode((java.lang.Object) wildcardClass63);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "AA11111111" + "'", obj59, "AA11111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "1111111111" + "'", obj62, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("AA11111111");
        java.lang.String str21 = caverphone14.caverphone("");
        java.lang.String str23 = caverphone14.encode("hi!");
        java.lang.String str25 = caverphone14.caverphone("hi!");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) str25);
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.caverphone("AA11111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("", "1111111111");
        boolean boolean43 = caverphone27.isCaverphoneEqual("AA11111111", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = caverphone0.encode((java.lang.Object) caverphone27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.caverphone("AA11111111");
        boolean boolean13 = caverphone5.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("1111111111");
        java.lang.Object obj24 = caverphone5.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone5.caverphone("1111111111");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        boolean boolean17 = caverphone11.isCaverphoneEqual("", "hi!");
        java.lang.String str19 = caverphone11.caverphone("");
        boolean boolean22 = caverphone11.isCaverphoneEqual("", "1111111111");
        java.lang.String str24 = caverphone11.encode("hi!");
        java.lang.String str26 = caverphone11.encode("");
        java.lang.String str28 = caverphone11.caverphone("hi!");
        java.lang.String str30 = caverphone11.encode("hi!");
        java.lang.String str32 = caverphone11.caverphone("1111111111");
        java.lang.String str34 = caverphone11.encode("");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass38 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("1111111111");
        java.lang.String str11 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        java.lang.String str17 = caverphone12.encode("hi!");
        java.lang.String str19 = caverphone12.caverphone("hi!");
        java.lang.String str21 = caverphone12.encode("1111111111");
        java.lang.String str23 = caverphone12.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("AA11111111");
        boolean boolean32 = caverphone24.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone33 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean36 = caverphone33.isCaverphoneEqual("hi!", "");
        java.lang.String str38 = caverphone33.encode("hi!");
        java.lang.String str40 = caverphone33.caverphone("1111111111");
        java.lang.String str42 = caverphone33.encode("1111111111");
        java.lang.Object obj43 = caverphone24.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone44 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean47 = caverphone44.isCaverphoneEqual("hi!", "");
        java.lang.String str49 = caverphone44.caverphone("");
        boolean boolean52 = caverphone44.isCaverphoneEqual("AA11111111", "");
        java.lang.String str54 = caverphone44.encode("1111111111");
        java.lang.Object obj55 = caverphone24.encode((java.lang.Object) str54);
        boolean boolean58 = caverphone24.isCaverphoneEqual("", "1111111111");
        java.lang.String str60 = caverphone24.encode("AA11111111");
        java.lang.Object obj61 = caverphone12.encode((java.lang.Object) str60);
        java.lang.String str63 = caverphone12.caverphone("");
        java.lang.Object obj64 = caverphone0.encode((java.lang.Object) str63);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "AA11111111" + "'", obj61, "AA11111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "1111111111" + "'", obj64, "1111111111");
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.String str19 = caverphone0.caverphone("1111111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str24 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("");
        boolean boolean33 = caverphone25.isCaverphoneEqual("AA11111111", "");
        java.lang.String str35 = caverphone25.encode("1111111111");
        boolean boolean38 = caverphone25.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj40 = caverphone25.encode((java.lang.Object) "AA11111111");
        boolean boolean43 = caverphone25.isCaverphoneEqual("1111111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone44 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean47 = caverphone44.isCaverphoneEqual("1111111111", "");
        boolean boolean50 = caverphone44.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str52 = caverphone44.encode("");
        boolean boolean55 = caverphone44.isCaverphoneEqual("", "1111111111");
        java.lang.String str57 = caverphone44.encode("");
        java.lang.Object obj58 = caverphone25.encode((java.lang.Object) str57);
        java.lang.String str60 = caverphone25.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = caverphone0.encode((java.lang.Object) caverphone25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "1111111111" + "'", obj58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.encode("hi!");
        java.lang.String str33 = caverphone26.caverphone("AA11111111");
        java.lang.String str35 = caverphone26.caverphone("1111111111");
        java.lang.String str37 = caverphone26.encode("");
        java.lang.String str39 = caverphone26.encode("1111111111");
        java.lang.String str41 = caverphone26.encode("AA11111111");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) str41);
        boolean boolean45 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass46 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "AA11111111" + "'", obj42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass8 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("");
        boolean boolean37 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj38 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str40 = caverphone0.encode("");
        java.lang.String str42 = caverphone0.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = caverphone0.encode((java.lang.Object) (-1.0d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "AA11111111" + "'", obj38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.encode("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("AA11111111");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        java.lang.String str29 = caverphone21.caverphone("");
        boolean boolean32 = caverphone21.isCaverphoneEqual("", "1111111111");
        java.lang.String str34 = caverphone21.encode("hi!");
        java.lang.String str36 = caverphone21.encode("");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj46 = caverphone21.encode((java.lang.Object) "AA11111111");
        boolean boolean49 = caverphone21.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str51 = caverphone21.caverphone("hi!");
        boolean boolean54 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone21.caverphone("");
        java.lang.String str58 = caverphone21.caverphone("");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) str58);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "AA11111111" + "'", obj46, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("1111111111", "");
        boolean boolean15 = caverphone9.isCaverphoneEqual("hi!", "hi!");
        boolean boolean18 = caverphone9.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "AA11111111" + "'", obj19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.encode("hi!");
        java.lang.String str33 = caverphone26.caverphone("1111111111");
        java.lang.String str35 = caverphone26.encode("");
        java.lang.String str37 = caverphone26.caverphone("AA11111111");
        java.lang.String str39 = caverphone26.encode("");
        boolean boolean42 = caverphone26.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.Object obj43 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str45 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.caverphone("");
        boolean boolean28 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        boolean boolean19 = caverphone13.isCaverphoneEqual("", "hi!");
        java.lang.String str21 = caverphone13.caverphone("");
        boolean boolean24 = caverphone13.isCaverphoneEqual("", "1111111111");
        boolean boolean27 = caverphone13.isCaverphoneEqual("", "");
        java.lang.String str29 = caverphone13.caverphone("hi!");
        java.lang.String str31 = caverphone13.caverphone("");
        java.lang.String str33 = caverphone13.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        boolean boolean37 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean40 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str42 = caverphone0.caverphone("1111111111");
        java.lang.String str44 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        java.lang.String str18 = caverphone11.caverphone("");
        java.lang.String str20 = caverphone11.encode("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone0.encode("hi!");
        boolean boolean29 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.caverphone("");
        boolean boolean38 = caverphone30.isCaverphoneEqual("AA11111111", "");
        java.lang.String str40 = caverphone30.caverphone("AA11111111");
        java.lang.String str42 = caverphone30.caverphone("hi!");
        java.lang.String str44 = caverphone30.caverphone("hi!");
        java.lang.String str46 = caverphone30.encode("1111111111");
        java.lang.String str48 = caverphone30.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone49.caverphone("");
        boolean boolean57 = caverphone49.isCaverphoneEqual("AA11111111", "");
        java.lang.String str59 = caverphone49.caverphone("AA11111111");
        boolean boolean62 = caverphone49.isCaverphoneEqual("", "1111111111");
        java.lang.String str64 = caverphone49.caverphone("AA11111111");
        boolean boolean67 = caverphone49.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj68 = caverphone30.encode((java.lang.Object) "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = caverphone0.encode((java.lang.Object) caverphone30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "1111111111" + "'", obj68, "1111111111");
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        java.lang.String str29 = caverphone0.encode("hi!");
        boolean boolean32 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.encode("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str22 = caverphone0.encode("AA11111111");
        java.lang.String str24 = caverphone0.caverphone("");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str29 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        boolean boolean36 = caverphone30.isCaverphoneEqual("", "hi!");
        java.lang.String str38 = caverphone30.caverphone("");
        boolean boolean41 = caverphone30.isCaverphoneEqual("", "1111111111");
        boolean boolean44 = caverphone30.isCaverphoneEqual("", "");
        java.lang.String str46 = caverphone30.caverphone("hi!");
        java.lang.String str48 = caverphone30.caverphone("");
        java.lang.String str50 = caverphone30.caverphone("hi!");
        java.lang.String str52 = caverphone30.encode("hi!");
        java.lang.Class<?> wildcardClass53 = caverphone30.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = caverphone0.encode((java.lang.Object) wildcardClass53);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("");
        boolean boolean34 = caverphone26.isCaverphoneEqual("AA11111111", "");
        java.lang.String str36 = caverphone26.caverphone("AA11111111");
        java.lang.String str38 = caverphone26.caverphone("hi!");
        java.lang.String str40 = caverphone26.caverphone("hi!");
        java.lang.String str42 = caverphone26.encode("1111111111");
        boolean boolean45 = caverphone26.isCaverphoneEqual("", "");
        java.lang.String str47 = caverphone26.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        java.lang.String str6 = caverphone0.encode("AA11111111");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass9 = caverphone0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AA11111111" + "'", str6, "AA11111111");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.encode("1111111111");
        boolean boolean37 = caverphone24.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str39 = caverphone24.encode("AA11111111");
        boolean boolean42 = caverphone24.isCaverphoneEqual("hi!", "");
        boolean boolean45 = caverphone24.isCaverphoneEqual("", "hi!");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str48 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "1111111111" + "'", obj46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.caverphone("");
        boolean boolean29 = caverphone21.isCaverphoneEqual("AA11111111", "");
        java.lang.String str31 = caverphone21.caverphone("AA11111111");
        boolean boolean34 = caverphone21.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone21.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        boolean boolean43 = caverphone37.isCaverphoneEqual("", "hi!");
        java.lang.String str45 = caverphone37.caverphone("");
        boolean boolean48 = caverphone37.isCaverphoneEqual("", "1111111111");
        boolean boolean51 = caverphone37.isCaverphoneEqual("", "");
        java.lang.String str53 = caverphone37.caverphone("hi!");
        java.lang.String str55 = caverphone37.caverphone("");
        java.lang.String str57 = caverphone37.caverphone("hi!");
        java.lang.String str59 = caverphone37.encode("");
        java.lang.String str61 = caverphone37.caverphone("AA11111111");
        java.lang.Object obj62 = caverphone21.encode((java.lang.Object) str61);
        java.lang.Object obj63 = caverphone0.encode(obj62);
        java.lang.String str65 = caverphone0.encode("");
        java.lang.String str67 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass68 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "AA11111111" + "'", obj62, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "AA11111111" + "'", obj63, "AA11111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.caverphone("AA11111111");
        boolean boolean27 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj28 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "AA11111111" + "'", obj28, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.Object obj19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = caverphone0.encode(obj19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        java.lang.String str27 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.caverphone("AA11111111");
        java.lang.String str40 = caverphone28.caverphone("AA11111111");
        java.lang.String str42 = caverphone28.caverphone("AA11111111");
        java.lang.String str44 = caverphone28.caverphone("");
        java.lang.Object obj45 = caverphone0.encode((java.lang.Object) "");
        boolean boolean48 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.Object obj49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = caverphone0.encode(obj49);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.String str24 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        boolean boolean31 = caverphone25.isCaverphoneEqual("", "hi!");
        java.lang.String str33 = caverphone25.caverphone("");
        boolean boolean36 = caverphone25.isCaverphoneEqual("", "1111111111");
        java.lang.String str38 = caverphone25.encode("hi!");
        java.lang.String str40 = caverphone25.encode("");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("");
        boolean boolean49 = caverphone41.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj50 = caverphone25.encode((java.lang.Object) "AA11111111");
        boolean boolean53 = caverphone25.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str55 = caverphone25.encode("1111111111");
        boolean boolean58 = caverphone25.isCaverphoneEqual("", "AA11111111");
        java.lang.String str60 = caverphone25.encode("1111111111");
        java.lang.Object obj61 = caverphone0.encode((java.lang.Object) str60);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "AA11111111" + "'", obj50, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "1111111111" + "'", obj61, "1111111111");
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj25 = caverphone14.encode((java.lang.Object) "1111111111");
        java.lang.String str27 = caverphone14.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.caverphone("AA11111111");
        java.lang.String str40 = caverphone28.caverphone("1111111111");
        java.lang.String str42 = caverphone28.caverphone("");
        java.lang.String str44 = caverphone28.encode("hi!");
        java.lang.Object obj45 = caverphone14.encode((java.lang.Object) "hi!");
        boolean boolean48 = caverphone14.isCaverphoneEqual("AA11111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = caverphone0.encode((java.lang.Object) boolean48);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "AA11111111" + "'", obj45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        java.lang.String str40 = caverphone0.caverphone("hi!");
        java.lang.String str42 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass43 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.caverphone("1111111111");
        java.lang.String str25 = caverphone0.caverphone("1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.Object obj16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = caverphone0.encode(obj16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone20.isCaverphoneEqual("", "hi!");
        java.lang.String str28 = caverphone20.caverphone("");
        boolean boolean31 = caverphone20.isCaverphoneEqual("", "1111111111");
        java.lang.String str33 = caverphone20.encode("hi!");
        java.lang.String str35 = caverphone20.encode("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj45 = caverphone20.encode((java.lang.Object) "AA11111111");
        boolean boolean48 = caverphone20.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean51 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str53 = caverphone20.caverphone("1111111111");
        boolean boolean56 = caverphone20.isCaverphoneEqual("", "");
        java.lang.Object obj57 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "AA11111111" + "'", obj45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "1111111111" + "'", obj57, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("AA11111111");
        java.lang.String str26 = caverphone19.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.caverphone("AA11111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj41 = caverphone19.encode((java.lang.Object) "");
        java.lang.String str43 = caverphone19.caverphone("");
        java.lang.String str45 = caverphone19.caverphone("AA11111111");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "AA11111111" + "'", obj46, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str10 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        java.lang.String str18 = caverphone11.caverphone("");
        java.lang.String str20 = caverphone11.encode("hi!");
        java.lang.String str22 = caverphone11.encode("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("1111111111", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str20 = caverphone12.encode("");
        java.lang.String str22 = caverphone12.encode("hi!");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) str22);
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("");
        boolean boolean37 = caverphone26.isCaverphoneEqual("", "1111111111");
        java.lang.String str39 = caverphone26.encode("hi!");
        java.lang.String str41 = caverphone26.encode("");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        java.lang.String str47 = caverphone42.caverphone("");
        boolean boolean50 = caverphone42.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj51 = caverphone26.encode((java.lang.Object) "AA11111111");
        boolean boolean54 = caverphone26.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str56 = caverphone26.caverphone("hi!");
        boolean boolean59 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str61 = caverphone26.caverphone("");
        java.lang.String str63 = caverphone26.caverphone("");
        java.lang.String str65 = caverphone26.encode("AA11111111");
        java.lang.String str67 = caverphone26.caverphone("hi!");
        java.lang.Object obj68 = caverphone0.encode((java.lang.Object) str67);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "AA11111111" + "'", obj23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "AA11111111" + "'", obj51, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "AA11111111" + "'", obj68, "AA11111111");
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.Object obj33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = caverphone0.encode(obj33);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("");
        boolean boolean19 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        java.lang.String str30 = caverphone0.encode("");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass33 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        java.lang.String str15 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass16 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("");
        java.lang.String str25 = caverphone14.caverphone("AA11111111");
        java.lang.String str27 = caverphone14.encode("");
        java.lang.String str29 = caverphone14.caverphone("");
        java.lang.Object obj30 = caverphone0.encode((java.lang.Object) str29);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "1111111111" + "'", obj30, "1111111111");
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("1111111111", "");
        boolean boolean15 = caverphone9.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str17 = caverphone9.encode("AA11111111");
        java.lang.String str19 = caverphone9.caverphone("AA11111111");
        java.lang.String str21 = caverphone9.encode("");
        boolean boolean24 = caverphone9.isCaverphoneEqual("", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = caverphone0.encode((java.lang.Object) caverphone9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str19 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("1111111111", "");
        java.lang.String str25 = caverphone20.caverphone("1111111111");
        java.lang.String str27 = caverphone20.encode("");
        java.lang.Class<?> wildcardClass28 = caverphone20.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = caverphone0.encode((java.lang.Object) caverphone20);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        boolean boolean10 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str12 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.caverphone("AA11111111");
        java.lang.String str25 = caverphone13.caverphone("AA11111111");
        java.lang.String str27 = caverphone13.caverphone("AA11111111");
        java.lang.String str29 = caverphone13.caverphone("");
        java.lang.Object obj30 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "1111111111" + "'", obj30, "1111111111");
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.caverphone("hi!");
        java.lang.String str30 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.caverphone("AA11111111");
        java.lang.String str43 = caverphone31.caverphone("AA11111111");
        java.lang.String str45 = caverphone31.encode("hi!");
        java.lang.String str47 = caverphone31.caverphone("1111111111");
        boolean boolean50 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.Class<?> wildcardClass51 = caverphone31.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = caverphone0.encode((java.lang.Object) wildcardClass51);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone12.encode("hi!");
        java.lang.String str22 = caverphone12.caverphone("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) str22);
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.encode("1111111111");
        boolean boolean37 = caverphone24.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str39 = caverphone24.caverphone("hi!");
        java.lang.String str41 = caverphone24.encode("1111111111");
        boolean boolean44 = caverphone24.isCaverphoneEqual("", "AA11111111");
        java.lang.String str46 = caverphone24.caverphone("");
        java.lang.String str48 = caverphone24.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("1111111111", "");
        boolean boolean55 = caverphone49.isCaverphoneEqual("hi!", "hi!");
        boolean boolean58 = caverphone49.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str60 = caverphone49.caverphone("");
        java.lang.String str62 = caverphone49.caverphone("hi!");
        java.lang.String str64 = caverphone49.caverphone("hi!");
        java.lang.String str66 = caverphone49.caverphone("hi!");
        java.lang.String str68 = caverphone49.encode("");
        java.lang.String str70 = caverphone49.caverphone("1111111111");
        java.lang.Object obj71 = caverphone24.encode((java.lang.Object) "1111111111");
        java.lang.String str73 = caverphone24.caverphone("AA11111111");
        java.lang.Object obj74 = caverphone0.encode((java.lang.Object) str73);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AA11111111" + "'", str66, "AA11111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "AA11111111" + "'", str73, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "AA11111111" + "'", obj74, "AA11111111");
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.caverphone("hi!");
        java.lang.String str32 = caverphone20.caverphone("");
        java.lang.String str34 = caverphone20.caverphone("1111111111");
        java.lang.String str36 = caverphone20.encode("");
        boolean boolean39 = caverphone20.isCaverphoneEqual("AA11111111", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = caverphone0.encode((java.lang.Object) boolean39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.String str29 = caverphone16.encode("hi!");
        java.lang.Object obj30 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass33 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "AA11111111" + "'", obj30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("1111111111", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str36 = caverphone28.encode("");
        boolean boolean39 = caverphone28.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean43 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str45 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "1111111111" + "'", obj40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.encode("hi!");
        java.lang.String str28 = caverphone21.caverphone("1111111111");
        java.lang.Object obj29 = caverphone14.encode((java.lang.Object) str28);
        java.lang.String str31 = caverphone14.caverphone("1111111111");
        boolean boolean34 = caverphone14.isCaverphoneEqual("", "");
        java.lang.String str36 = caverphone14.caverphone("hi!");
        boolean boolean39 = caverphone14.isCaverphoneEqual("", "hi!");
        boolean boolean42 = caverphone14.isCaverphoneEqual("", "1111111111");
        boolean boolean45 = caverphone14.isCaverphoneEqual("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "1111111111" + "'", obj29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str8 = caverphone6.caverphone("1111111111");
        java.lang.String str10 = caverphone6.caverphone("1111111111");
        java.lang.String str12 = caverphone6.caverphone("AA11111111");
        java.lang.Object obj13 = caverphone0.encode((java.lang.Object) str12);
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "AA11111111" + "'", obj13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.caverphone("AA11111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str42 = caverphone27.encode("hi!");
        java.lang.String str44 = caverphone27.caverphone("hi!");
        boolean boolean47 = caverphone27.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone12.caverphone("");
        java.lang.String str22 = caverphone12.encode("");
        boolean boolean25 = caverphone12.isCaverphoneEqual("AA11111111", "");
        java.lang.String str27 = caverphone12.encode("");
        boolean boolean30 = caverphone12.isCaverphoneEqual("", "hi!");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone27.encode("hi!");
        java.lang.String str37 = caverphone27.caverphone("1111111111");
        java.lang.Object obj38 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str40 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass41 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        java.lang.String str17 = caverphone12.caverphone("");
        boolean boolean20 = caverphone12.isCaverphoneEqual("AA11111111", "");
        java.lang.String str22 = caverphone12.caverphone("AA11111111");
        java.lang.String str24 = caverphone12.caverphone("hi!");
        java.lang.String str26 = caverphone12.encode("AA11111111");
        java.lang.String str28 = caverphone12.caverphone("AA11111111");
        java.lang.String str30 = caverphone12.caverphone("1111111111");
        java.lang.String str32 = caverphone12.encode("AA11111111");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.encode("hi!");
        java.lang.String str41 = caverphone34.caverphone("AA11111111");
        java.lang.String str43 = caverphone34.caverphone("1111111111");
        java.lang.String str45 = caverphone34.encode("");
        java.lang.String str47 = caverphone34.encode("1111111111");
        java.lang.String str49 = caverphone34.encode("hi!");
        java.lang.String str51 = caverphone34.caverphone("1111111111");
        java.lang.Object obj52 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.String str21 = caverphone0.caverphone("");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        boolean boolean35 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str24 = caverphone22.caverphone("1111111111");
        java.lang.String str26 = caverphone22.caverphone("1111111111");
        java.lang.String str28 = caverphone22.caverphone("AA11111111");
        java.lang.Object obj29 = caverphone16.encode((java.lang.Object) str28);
        boolean boolean32 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "AA11111111" + "'", obj29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone39.caverphone("AA11111111");
        java.lang.String str46 = caverphone39.caverphone("hi!");
        java.lang.Class<?> wildcardClass47 = caverphone39.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = caverphone0.encode((java.lang.Object) wildcardClass47);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.encode("hi!");
        java.lang.String str43 = caverphone36.caverphone("AA11111111");
        java.lang.String str45 = caverphone36.caverphone("1111111111");
        java.lang.String str47 = caverphone36.encode("");
        java.lang.String str49 = caverphone36.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone50 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean53 = caverphone50.isCaverphoneEqual("hi!", "");
        java.lang.String str55 = caverphone50.encode("hi!");
        java.lang.String str57 = caverphone50.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone58 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean61 = caverphone58.isCaverphoneEqual("hi!", "");
        java.lang.String str63 = caverphone58.encode("hi!");
        java.lang.String str65 = caverphone58.caverphone("AA11111111");
        java.lang.String str67 = caverphone58.caverphone("hi!");
        java.lang.String str69 = caverphone58.caverphone("hi!");
        java.lang.Object obj70 = caverphone50.encode((java.lang.Object) "hi!");
        java.lang.String str72 = caverphone50.caverphone("1111111111");
        java.lang.String str74 = caverphone50.encode("AA11111111");
        boolean boolean77 = caverphone50.isCaverphoneEqual("", "AA11111111");
        java.lang.Object obj78 = caverphone36.encode((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = caverphone0.encode((java.lang.Object) caverphone36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "AA11111111" + "'", obj70, "AA11111111");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "AA11111111" + "'", str74, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "1111111111" + "'", obj78, "1111111111");
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.caverphone("");
        java.lang.String str22 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("1111111111", "");
        boolean boolean29 = caverphone23.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str31 = caverphone23.encode("AA11111111");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        java.lang.String str35 = caverphone23.caverphone("1111111111");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) str35);
        java.lang.String str38 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        boolean boolean30 = caverphone16.isCaverphoneEqual("", "");
        java.lang.String str32 = caverphone16.caverphone("hi!");
        java.lang.String str34 = caverphone16.caverphone("");
        java.lang.String str36 = caverphone16.caverphone("hi!");
        java.lang.String str38 = caverphone16.encode("");
        java.lang.String str40 = caverphone16.caverphone("AA11111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        java.lang.String str43 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone44 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean47 = caverphone44.isCaverphoneEqual("hi!", "");
        boolean boolean50 = caverphone44.isCaverphoneEqual("", "hi!");
        java.lang.String str52 = caverphone44.caverphone("");
        boolean boolean55 = caverphone44.isCaverphoneEqual("", "1111111111");
        java.lang.String str57 = caverphone44.encode("hi!");
        java.lang.String str59 = caverphone44.encode("");
        java.lang.String str61 = caverphone44.caverphone("hi!");
        java.lang.String str63 = caverphone44.encode("hi!");
        boolean boolean66 = caverphone44.isCaverphoneEqual("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = caverphone0.encode((java.lang.Object) caverphone44);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone0.caverphone("AA11111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("AA11111111");
        boolean boolean24 = caverphone16.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone16.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.encode("1111111111");
        java.lang.Object obj47 = caverphone16.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode(obj47);
        java.lang.String str50 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        boolean boolean57 = caverphone51.isCaverphoneEqual("", "hi!");
        java.lang.String str59 = caverphone51.caverphone("");
        boolean boolean62 = caverphone51.isCaverphoneEqual("", "1111111111");
        java.lang.String str64 = caverphone51.encode("hi!");
        java.lang.String str66 = caverphone51.encode("");
        boolean boolean69 = caverphone51.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str71 = caverphone51.encode("1111111111");
        java.lang.Object obj72 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "1111111111" + "'", str71, "1111111111");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "1111111111" + "'", obj72, "1111111111");
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.String str24 = caverphone0.encode("1111111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str29 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone38.caverphone("");
        boolean boolean49 = caverphone38.isCaverphoneEqual("", "1111111111");
        java.lang.String str51 = caverphone38.encode("hi!");
        java.lang.String str53 = caverphone38.encode("");
        boolean boolean56 = caverphone38.isCaverphoneEqual("hi!", "hi!");
        java.lang.Object obj57 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str59 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone60 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean63 = caverphone60.isCaverphoneEqual("1111111111", "");
        boolean boolean66 = caverphone60.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str68 = caverphone60.encode("AA11111111");
        java.lang.String str70 = caverphone60.encode("");
        java.lang.String str72 = caverphone60.caverphone("");
        java.lang.String str74 = caverphone60.caverphone("1111111111");
        java.lang.String str76 = caverphone60.encode("1111111111");
        java.lang.Object obj77 = caverphone0.encode((java.lang.Object) str76);
        org.apache.commons.codec.language.Caverphone caverphone78 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean81 = caverphone78.isCaverphoneEqual("hi!", "");
        boolean boolean84 = caverphone78.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone85 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean88 = caverphone85.isCaverphoneEqual("hi!", "");
        java.lang.String str90 = caverphone85.encode("hi!");
        java.lang.String str92 = caverphone85.caverphone("1111111111");
        java.lang.Object obj93 = caverphone78.encode((java.lang.Object) str92);
        boolean boolean96 = caverphone78.isCaverphoneEqual("hi!", "hi!");
        java.lang.Object obj97 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "AA11111111" + "'", obj57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AA11111111" + "'", str68, "AA11111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "1111111111" + "'", str74, "1111111111");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "1111111111" + "'", str76, "1111111111");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "1111111111" + "'", obj77, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "AA11111111" + "'", str90, "AA11111111");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "1111111111" + "'", str92, "1111111111");
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + "1111111111" + "'", obj93, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + "AA11111111" + "'", obj97, "AA11111111");
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.encode("AA11111111");
        java.lang.String str20 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("AA11111111");
        java.lang.String str26 = caverphone19.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.caverphone("AA11111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj41 = caverphone19.encode((java.lang.Object) "");
        java.lang.String str43 = caverphone19.caverphone("");
        java.lang.String str45 = caverphone19.caverphone("AA11111111");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str48 = caverphone0.caverphone("hi!");
        java.lang.String str50 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.caverphone("");
        boolean boolean59 = caverphone51.isCaverphoneEqual("AA11111111", "");
        java.lang.String str61 = caverphone51.caverphone("AA11111111");
        boolean boolean64 = caverphone51.isCaverphoneEqual("", "1111111111");
        java.lang.String str66 = caverphone51.caverphone("AA11111111");
        boolean boolean69 = caverphone51.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str71 = caverphone51.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = caverphone0.encode((java.lang.Object) caverphone51);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "AA11111111" + "'", obj46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AA11111111" + "'", str66, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "1111111111" + "'", str71, "1111111111");
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.encode("");
        java.lang.String str39 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone40 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean43 = caverphone40.isCaverphoneEqual("hi!", "");
        java.lang.String str45 = caverphone40.caverphone("AA11111111");
        java.lang.String str47 = caverphone40.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("hi!", "");
        boolean boolean54 = caverphone48.isCaverphoneEqual("", "hi!");
        java.lang.String str56 = caverphone48.caverphone("");
        boolean boolean59 = caverphone48.isCaverphoneEqual("", "1111111111");
        java.lang.String str61 = caverphone48.encode("hi!");
        java.lang.String str63 = caverphone48.encode("");
        org.apache.commons.codec.language.Caverphone caverphone64 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean67 = caverphone64.isCaverphoneEqual("1111111111", "");
        boolean boolean70 = caverphone64.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str72 = caverphone64.encode("AA11111111");
        java.lang.Object obj73 = caverphone48.encode((java.lang.Object) "AA11111111");
        java.lang.String str75 = caverphone48.encode("");
        boolean boolean78 = caverphone48.isCaverphoneEqual("hi!", "");
        java.lang.String str80 = caverphone48.encode("hi!");
        java.lang.Object obj81 = caverphone40.encode((java.lang.Object) "hi!");
        boolean boolean84 = caverphone40.isCaverphoneEqual("", "");
        boolean boolean87 = caverphone40.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean90 = caverphone40.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Object obj91 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "AA11111111" + "'", str72, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "AA11111111" + "'", obj73, "AA11111111");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "1111111111" + "'", str75, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "AA11111111" + "'", str80, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "AA11111111" + "'", obj81, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + "1111111111" + "'", obj91, "1111111111");
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("AA11111111");
        boolean boolean27 = caverphone19.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.encode("hi!");
        java.lang.String str35 = caverphone28.caverphone("1111111111");
        java.lang.String str37 = caverphone28.encode("1111111111");
        java.lang.Object obj38 = caverphone19.encode((java.lang.Object) "1111111111");
        java.lang.String str40 = caverphone19.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        java.lang.String str47 = caverphone42.caverphone("AA11111111");
        boolean boolean50 = caverphone42.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.encode("hi!");
        java.lang.String str58 = caverphone51.caverphone("1111111111");
        java.lang.String str60 = caverphone51.encode("1111111111");
        java.lang.Object obj61 = caverphone42.encode((java.lang.Object) "1111111111");
        java.lang.String str63 = caverphone42.caverphone("1111111111");
        boolean boolean66 = caverphone42.isCaverphoneEqual("AA11111111", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = caverphone0.encode((java.lang.Object) caverphone42);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "1111111111" + "'", obj61, "1111111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        java.lang.String str41 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        java.lang.String str47 = caverphone42.caverphone("");
        boolean boolean50 = caverphone42.isCaverphoneEqual("AA11111111", "");
        java.lang.String str52 = caverphone42.caverphone("AA11111111");
        java.lang.String str54 = caverphone42.caverphone("AA11111111");
        java.lang.String str56 = caverphone42.caverphone("hi!");
        java.lang.String str58 = caverphone42.caverphone("1111111111");
        java.lang.String str60 = caverphone42.caverphone("AA11111111");
        java.lang.String str62 = caverphone42.caverphone("");
        boolean boolean65 = caverphone42.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj66 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str68 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "1111111111" + "'", obj66, "1111111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str26 = caverphone0.encode("1111111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass30 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass40 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.encode("hi!");
        boolean boolean13 = caverphone5.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str15 = caverphone5.encode("AA11111111");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("");
        boolean boolean25 = caverphone17.isCaverphoneEqual("AA11111111", "");
        java.lang.String str27 = caverphone17.caverphone("AA11111111");
        boolean boolean30 = caverphone17.isCaverphoneEqual("", "");
        boolean boolean33 = caverphone17.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("AA11111111");
        java.lang.String str41 = caverphone34.caverphone("");
        java.lang.Object obj42 = caverphone17.encode((java.lang.Object) "");
        boolean boolean45 = caverphone17.isCaverphoneEqual("1111111111", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = caverphone0.encode((java.lang.Object) boolean45);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "AA11111111" + "'", obj16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "1111111111" + "'", obj42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.caverphone("");
        boolean boolean30 = caverphone22.isCaverphoneEqual("AA11111111", "");
        java.lang.String str32 = caverphone22.caverphone("AA11111111");
        java.lang.String str34 = caverphone22.caverphone("AA11111111");
        java.lang.String str36 = caverphone22.caverphone("hi!");
        java.lang.Object obj37 = caverphone0.encode((java.lang.Object) str36);
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "AA11111111" + "'", obj37, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("AA11111111");
        boolean boolean21 = caverphone13.isCaverphoneEqual("", "hi!");
        boolean boolean24 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone13.encode("");
        boolean boolean29 = caverphone13.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str31 = caverphone13.caverphone("");
        java.lang.Object obj32 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "1111111111" + "'", obj32, "1111111111");
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        boolean boolean10 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str12 = caverphone0.encode("");
        java.lang.String str14 = caverphone0.caverphone("");
        java.lang.String str16 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str29 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.caverphone("");
        boolean boolean38 = caverphone30.isCaverphoneEqual("AA11111111", "");
        java.lang.String str40 = caverphone30.caverphone("AA11111111");
        boolean boolean43 = caverphone30.isCaverphoneEqual("", "1111111111");
        java.lang.String str45 = caverphone30.caverphone("AA11111111");
        boolean boolean48 = caverphone30.isCaverphoneEqual("", "1111111111");
        boolean boolean51 = caverphone30.isCaverphoneEqual("hi!", "hi!");
        java.lang.Object obj52 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "AA11111111" + "'", obj52, "AA11111111");
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("1111111111");
        java.lang.String str11 = caverphone0.encode("hi!");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.encode("AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str23 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.encode("1111111111");
        boolean boolean37 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone24.caverphone("AA11111111");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) str39);
        java.lang.String str42 = caverphone0.caverphone("AA11111111");
        boolean boolean45 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Class<?> wildcardClass46 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.String str19 = caverphone0.encode("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("AA11111111");
        boolean boolean31 = caverphone23.isCaverphoneEqual("", "");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        java.lang.String str36 = caverphone0.encode("");
        java.lang.String str38 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("AA11111111");
        boolean boolean32 = caverphone24.isCaverphoneEqual("", "hi!");
        boolean boolean35 = caverphone24.isCaverphoneEqual("1111111111", "");
        java.lang.String str37 = caverphone24.encode("");
        java.lang.Object obj38 = caverphone0.encode((java.lang.Object) "");
        boolean boolean41 = caverphone0.isCaverphoneEqual("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.encode("hi!");
        java.lang.String str35 = caverphone28.caverphone("1111111111");
        java.lang.Object obj36 = caverphone21.encode((java.lang.Object) str35);
        java.lang.String str38 = caverphone21.caverphone("1111111111");
        boolean boolean41 = caverphone21.isCaverphoneEqual("", "");
        java.lang.String str43 = caverphone21.caverphone("hi!");
        boolean boolean46 = caverphone21.isCaverphoneEqual("", "hi!");
        java.lang.String str48 = caverphone21.caverphone("");
        java.lang.Object obj49 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "1111111111" + "'", obj49, "1111111111");
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("AA11111111");
        java.lang.String str36 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone38.caverphone("");
        boolean boolean49 = caverphone38.isCaverphoneEqual("", "1111111111");
        boolean boolean52 = caverphone38.isCaverphoneEqual("", "");
        boolean boolean55 = caverphone38.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str57 = caverphone38.encode("AA11111111");
        java.lang.String str59 = caverphone38.encode("1111111111");
        java.lang.Object obj60 = caverphone0.encode((java.lang.Object) str59);
        java.lang.String str62 = caverphone0.caverphone("1111111111");
        java.lang.String str64 = caverphone0.caverphone("");
        java.lang.String str66 = caverphone0.encode("AA11111111");
        java.lang.String str68 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AA11111111" + "'", str66, "AA11111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str35 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.encode("hi!");
        java.lang.String str43 = caverphone36.caverphone("1111111111");
        java.lang.String str45 = caverphone36.encode("AA11111111");
        boolean boolean48 = caverphone36.isCaverphoneEqual("AA11111111", "hi!");
        boolean boolean51 = caverphone36.isCaverphoneEqual("AA11111111", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = caverphone0.encode((java.lang.Object) caverphone36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str19 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str23 = caverphone0.encode("1111111111");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.encode("hi!");
        java.lang.String str36 = caverphone29.caverphone("hi!");
        java.lang.String str38 = caverphone29.encode("1111111111");
        java.lang.String str40 = caverphone29.caverphone("AA11111111");
        java.lang.String str42 = caverphone29.caverphone("1111111111");
        java.lang.String str44 = caverphone29.encode("hi!");
        java.lang.Object obj45 = caverphone0.encode((java.lang.Object) str44);
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        boolean boolean52 = caverphone46.isCaverphoneEqual("", "hi!");
        java.lang.String str54 = caverphone46.caverphone("");
        boolean boolean57 = caverphone46.isCaverphoneEqual("", "1111111111");
        boolean boolean60 = caverphone46.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.Class<?> wildcardClass61 = caverphone46.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = caverphone0.encode((java.lang.Object) caverphone46);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "AA11111111" + "'", obj45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.encode("hi!");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass43 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.encode("hi!");
        java.lang.String str30 = caverphone23.caverphone("AA11111111");
        java.lang.String str32 = caverphone23.encode("");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass36 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        java.lang.String str17 = caverphone0.encode("");
        java.lang.String str19 = caverphone0.encode("1111111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("");
        java.lang.String str40 = caverphone0.encode("");
        java.lang.String str42 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone32.caverphone("AA11111111");
        java.lang.String str44 = caverphone32.caverphone("AA11111111");
        java.lang.String str46 = caverphone32.caverphone("hi!");
        java.lang.String str48 = caverphone32.caverphone("1111111111");
        java.lang.String str50 = caverphone32.encode("1111111111");
        java.lang.Object obj51 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone52 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean55 = caverphone52.isCaverphoneEqual("1111111111", "");
        boolean boolean58 = caverphone52.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str60 = caverphone52.caverphone("AA11111111");
        java.lang.String str62 = caverphone52.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass63 = caverphone52.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = caverphone0.encode((java.lang.Object) wildcardClass63);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.encode("AA11111111");
        java.lang.String str30 = caverphone0.caverphone("");
        java.lang.String str32 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("AA11111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("hi!");
        java.lang.String str31 = caverphone19.caverphone("");
        boolean boolean34 = caverphone19.isCaverphoneEqual("", "");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass36 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.String str29 = caverphone16.encode("hi!");
        java.lang.String str31 = caverphone16.encode("");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj41 = caverphone16.encode((java.lang.Object) "AA11111111");
        boolean boolean44 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str46 = caverphone16.encode("1111111111");
        java.lang.String str48 = caverphone16.caverphone("1111111111");
        java.lang.String str50 = caverphone16.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.caverphone("1111111111");
        boolean boolean26 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.encode("1111111111");
        boolean boolean47 = caverphone34.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj52 = caverphone34.encode((java.lang.Object) "");
        java.lang.String str54 = caverphone34.caverphone("1111111111");
        java.lang.String str56 = caverphone34.encode("hi!");
        java.lang.String str58 = caverphone34.caverphone("1111111111");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) str58);
        org.apache.commons.codec.language.Caverphone caverphone60 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean63 = caverphone60.isCaverphoneEqual("1111111111", "");
        java.lang.String str65 = caverphone60.caverphone("1111111111");
        java.lang.String str67 = caverphone60.encode("");
        boolean boolean70 = caverphone60.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj71 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str73 = caverphone0.caverphone("");
        java.lang.String str75 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1111111111" + "'", str73, "1111111111");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "1111111111" + "'", str75, "1111111111");
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.String str47 = caverphone37.caverphone("AA11111111");
        boolean boolean50 = caverphone37.isCaverphoneEqual("", "");
        java.lang.String str52 = caverphone37.encode("1111111111");
        java.lang.String str54 = caverphone37.caverphone("");
        java.lang.String str56 = caverphone37.encode("AA11111111");
        boolean boolean59 = caverphone37.isCaverphoneEqual("", "1111111111");
        boolean boolean62 = caverphone37.isCaverphoneEqual("", "");
        java.lang.Object obj63 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "1111111111" + "'", obj63, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("", "hi!");
        java.lang.String str32 = caverphone24.caverphone("");
        boolean boolean35 = caverphone24.isCaverphoneEqual("", "1111111111");
        boolean boolean38 = caverphone24.isCaverphoneEqual("", "");
        java.lang.String str40 = caverphone24.caverphone("hi!");
        java.lang.String str42 = caverphone24.caverphone("");
        java.lang.String str44 = caverphone24.caverphone("hi!");
        java.lang.String str46 = caverphone24.encode("");
        boolean boolean49 = caverphone24.isCaverphoneEqual("AA11111111", "hi!");
        boolean boolean52 = caverphone24.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Object obj53 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str55 = caverphone0.caverphone("1111111111");
        boolean boolean58 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "1111111111" + "'", obj53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str15 = caverphone0.encode("hi!");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.String str21 = caverphone0.encode("hi!");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.caverphone("");
        boolean boolean30 = caverphone22.isCaverphoneEqual("AA11111111", "");
        java.lang.String str32 = caverphone22.caverphone("AA11111111");
        boolean boolean35 = caverphone22.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean38 = caverphone22.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        boolean boolean45 = caverphone39.isCaverphoneEqual("", "hi!");
        java.lang.String str47 = caverphone39.encode("hi!");
        java.lang.String str49 = caverphone39.caverphone("1111111111");
        java.lang.Object obj50 = caverphone22.encode((java.lang.Object) "1111111111");
        java.lang.Object obj51 = caverphone0.encode(obj50);
        java.lang.String str53 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "1111111111" + "'", obj50, "1111111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        java.lang.String str16 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.encode("hi!");
        java.lang.String str14 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("");
        boolean boolean23 = caverphone15.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone15.encode("1111111111");
        boolean boolean28 = caverphone15.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str30 = caverphone15.caverphone("hi!");
        java.lang.String str32 = caverphone15.encode("1111111111");
        boolean boolean35 = caverphone15.isCaverphoneEqual("", "AA11111111");
        boolean boolean38 = caverphone15.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str40 = caverphone15.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = caverphone0.encode((java.lang.Object) caverphone15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("1111111111");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("1111111111");
        java.lang.String str12 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        boolean boolean19 = caverphone13.isCaverphoneEqual("", "hi!");
        java.lang.String str21 = caverphone13.caverphone("");
        boolean boolean24 = caverphone13.isCaverphoneEqual("", "1111111111");
        boolean boolean27 = caverphone13.isCaverphoneEqual("", "");
        java.lang.String str29 = caverphone13.caverphone("hi!");
        java.lang.String str31 = caverphone13.caverphone("");
        java.lang.String str33 = caverphone13.caverphone("hi!");
        boolean boolean36 = caverphone13.isCaverphoneEqual("", "");
        boolean boolean39 = caverphone13.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean42 = caverphone13.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str44 = caverphone13.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = caverphone0.encode((java.lang.Object) caverphone13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.encode("hi!");
        java.lang.String str29 = caverphone22.caverphone("AA11111111");
        java.lang.String str31 = caverphone22.caverphone("hi!");
        java.lang.String str33 = caverphone22.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("1111111111", "");
        boolean boolean40 = caverphone34.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str42 = caverphone34.encode("");
        java.lang.String str44 = caverphone34.encode("hi!");
        java.lang.Object obj45 = caverphone22.encode((java.lang.Object) str44);
        java.lang.String str47 = caverphone22.encode("AA11111111");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) str47);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "AA11111111" + "'", obj45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("1111111111", "");
        boolean boolean15 = caverphone9.isCaverphoneEqual("hi!", "hi!");
        boolean boolean18 = caverphone9.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str21 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        boolean boolean28 = caverphone22.isCaverphoneEqual("", "hi!");
        java.lang.String str30 = caverphone22.caverphone("");
        boolean boolean33 = caverphone22.isCaverphoneEqual("", "1111111111");
        java.lang.String str35 = caverphone22.encode("hi!");
        java.lang.String str37 = caverphone22.encode("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("1111111111", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str46 = caverphone38.encode("AA11111111");
        java.lang.Object obj47 = caverphone22.encode((java.lang.Object) "AA11111111");
        java.lang.String str49 = caverphone22.encode("");
        boolean boolean52 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone22.encode("hi!");
        java.lang.String str56 = caverphone22.caverphone("hi!");
        java.lang.String str58 = caverphone22.caverphone("");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str61 = caverphone0.caverphone("");
        java.lang.String str63 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "AA11111111" + "'", obj19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.encode("hi!");
        java.lang.String str35 = caverphone28.caverphone("");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass37 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str28 = caverphone26.caverphone("1111111111");
        java.lang.String str30 = caverphone26.caverphone("1111111111");
        java.lang.String str32 = caverphone26.caverphone("AA11111111");
        java.lang.Object obj33 = caverphone20.encode((java.lang.Object) str32);
        java.lang.String str35 = caverphone20.encode("1111111111");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone12.caverphone("");
        boolean boolean23 = caverphone12.isCaverphoneEqual("", "1111111111");
        boolean boolean26 = caverphone12.isCaverphoneEqual("", "");
        boolean boolean29 = caverphone12.isCaverphoneEqual("", "");
        java.lang.String str31 = caverphone12.caverphone("");
        boolean boolean34 = caverphone12.isCaverphoneEqual("AA11111111", "");
        java.lang.String str36 = caverphone12.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = caverphone0.encode((java.lang.Object) caverphone12);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        boolean boolean15 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.encode("hi!");
        java.lang.String str26 = caverphone19.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.encode("hi!");
        java.lang.String str34 = caverphone27.caverphone("AA11111111");
        java.lang.String str36 = caverphone27.caverphone("hi!");
        java.lang.String str38 = caverphone27.caverphone("hi!");
        java.lang.Object obj39 = caverphone19.encode((java.lang.Object) "hi!");
        java.lang.String str41 = caverphone19.caverphone("1111111111");
        boolean boolean44 = caverphone19.isCaverphoneEqual("", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = caverphone0.encode((java.lang.Object) boolean44);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "AA11111111" + "'", obj39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.encode("1111111111");
        boolean boolean47 = caverphone34.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj52 = caverphone34.encode((java.lang.Object) "");
        java.lang.String str54 = caverphone34.caverphone("1111111111");
        java.lang.String str56 = caverphone34.encode("hi!");
        java.lang.String str58 = caverphone34.caverphone("1111111111");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) str58);
        org.apache.commons.codec.language.Caverphone caverphone60 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean63 = caverphone60.isCaverphoneEqual("1111111111", "");
        java.lang.String str65 = caverphone60.caverphone("1111111111");
        java.lang.String str67 = caverphone60.encode("");
        boolean boolean70 = caverphone60.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj71 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str73 = caverphone0.encode("1111111111");
        java.lang.String str75 = caverphone0.caverphone("AA11111111");
        java.lang.String str77 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1111111111" + "'", str73, "1111111111");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "AA11111111" + "'", str75, "AA11111111");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "1111111111" + "'", str77, "1111111111");
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        boolean boolean25 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str27 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        boolean boolean5 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.caverphone("");
        boolean boolean14 = caverphone6.isCaverphoneEqual("AA11111111", "");
        java.lang.String str16 = caverphone6.caverphone("AA11111111");
        boolean boolean19 = caverphone6.isCaverphoneEqual("", "");
        java.lang.String str21 = caverphone6.caverphone("");
        java.lang.String str23 = caverphone6.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = caverphone0.encode((java.lang.Object) caverphone6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.encode("hi!");
        boolean boolean13 = caverphone5.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str15 = caverphone5.encode("AA11111111");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = caverphone0.encode((java.lang.Object) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "AA11111111" + "'", obj16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass31 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str23 = caverphone0.encode("1111111111");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.caverphone("hi!");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("");
        boolean boolean34 = caverphone26.isCaverphoneEqual("AA11111111", "");
        java.lang.String str36 = caverphone26.caverphone("AA11111111");
        java.lang.String str38 = caverphone26.caverphone("AA11111111");
        java.lang.String str40 = caverphone26.caverphone("hi!");
        java.lang.String str42 = caverphone26.caverphone("1111111111");
        java.lang.String str44 = caverphone26.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone45 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean48 = caverphone45.isCaverphoneEqual("hi!", "");
        java.lang.String str50 = caverphone45.caverphone("");
        boolean boolean53 = caverphone45.isCaverphoneEqual("AA11111111", "");
        java.lang.String str55 = caverphone45.caverphone("AA11111111");
        java.lang.String str57 = caverphone45.caverphone("AA11111111");
        java.lang.String str59 = caverphone45.caverphone("hi!");
        java.lang.Object obj60 = caverphone26.encode((java.lang.Object) "hi!");
        boolean boolean63 = caverphone26.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Class<?> wildcardClass64 = caverphone26.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "AA11111111" + "'", obj60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        java.lang.String str40 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.encode("hi!");
        java.lang.String str36 = caverphone29.caverphone("hi!");
        java.lang.String str38 = caverphone29.encode("1111111111");
        java.lang.String str40 = caverphone29.caverphone("AA11111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str43 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.encode("hi!");
        java.lang.String str29 = caverphone22.caverphone("AA11111111");
        java.lang.String str31 = caverphone22.caverphone("hi!");
        java.lang.String str33 = caverphone22.caverphone("hi!");
        java.lang.Object obj34 = caverphone14.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone14.caverphone("1111111111");
        java.lang.String str38 = caverphone14.encode("AA11111111");
        boolean boolean41 = caverphone14.isCaverphoneEqual("", "AA11111111");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) "");
        boolean boolean45 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str48 = caverphone46.caverphone("1111111111");
        java.lang.String str50 = caverphone46.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) caverphone46);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "1111111111" + "'", obj42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        boolean boolean5 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        boolean boolean12 = caverphone6.isCaverphoneEqual("", "hi!");
        java.lang.String str14 = caverphone6.caverphone("");
        boolean boolean17 = caverphone6.isCaverphoneEqual("", "1111111111");
        java.lang.String str19 = caverphone6.encode("hi!");
        java.lang.String str21 = caverphone6.encode("");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.caverphone("");
        boolean boolean30 = caverphone22.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj31 = caverphone6.encode((java.lang.Object) "AA11111111");
        boolean boolean34 = caverphone6.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone6.encode("1111111111");
        java.lang.String str38 = caverphone6.caverphone("AA11111111");
        java.lang.String str40 = caverphone6.caverphone("AA11111111");
        java.lang.String str42 = caverphone6.encode("1111111111");
        java.lang.Object obj43 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str45 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.caverphone("");
        boolean boolean54 = caverphone46.isCaverphoneEqual("AA11111111", "");
        java.lang.String str56 = caverphone46.caverphone("AA11111111");
        boolean boolean59 = caverphone46.isCaverphoneEqual("", "1111111111");
        java.lang.String str61 = caverphone46.caverphone("AA11111111");
        boolean boolean64 = caverphone46.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str66 = caverphone46.caverphone("");
        java.lang.String str68 = caverphone46.caverphone("AA11111111");
        java.lang.Object obj69 = caverphone0.encode((java.lang.Object) str68);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "AA11111111" + "'", obj31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AA11111111" + "'", str68, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "AA11111111" + "'", obj69, "AA11111111");
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str16 = caverphone0.encode("AA11111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean39 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.Class<?> wildcardClass40 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        boolean boolean25 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str15 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str28 = caverphone0.caverphone("hi!");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass31 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        boolean boolean45 = caverphone39.isCaverphoneEqual("", "hi!");
        java.lang.String str47 = caverphone39.caverphone("");
        boolean boolean50 = caverphone39.isCaverphoneEqual("", "1111111111");
        java.lang.String str52 = caverphone39.encode("hi!");
        java.lang.String str54 = caverphone39.encode("");
        org.apache.commons.codec.language.Caverphone caverphone55 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean58 = caverphone55.isCaverphoneEqual("hi!", "");
        java.lang.String str60 = caverphone55.caverphone("");
        boolean boolean63 = caverphone55.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj64 = caverphone39.encode((java.lang.Object) "AA11111111");
        boolean boolean67 = caverphone39.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str69 = caverphone39.encode("AA11111111");
        java.lang.String str71 = caverphone39.caverphone("hi!");
        java.lang.Object obj72 = caverphone0.encode((java.lang.Object) str71);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "AA11111111" + "'", obj64, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AA11111111" + "'", str71, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "AA11111111" + "'", obj72, "AA11111111");
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        boolean boolean7 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        java.lang.String str20 = caverphone8.caverphone("hi!");
        java.lang.String str22 = caverphone8.caverphone("hi!");
        java.lang.String str24 = caverphone8.encode("1111111111");
        boolean boolean27 = caverphone8.isCaverphoneEqual("", "");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = caverphone0.encode((java.lang.Object) caverphone8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.encode("hi!");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("AA11111111");
        boolean boolean34 = caverphone26.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.encode("hi!");
        java.lang.String str42 = caverphone35.caverphone("1111111111");
        java.lang.String str44 = caverphone35.encode("1111111111");
        java.lang.Object obj45 = caverphone26.encode((java.lang.Object) "1111111111");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str48 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass49 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "1111111111" + "'", obj46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = caverphone0.encode((java.lang.Object) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        boolean boolean35 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.caverphone("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        java.lang.String str17 = caverphone0.encode("");
        java.lang.String str19 = caverphone0.encode("1111111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("");
        boolean boolean31 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        boolean boolean36 = caverphone23.isCaverphoneEqual("", "");
        boolean boolean39 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone23.caverphone("");
        java.lang.String str43 = caverphone23.encode("");
        java.lang.String str45 = caverphone23.encode("");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "1111111111" + "'", obj46, "1111111111");
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        boolean boolean15 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str28 = caverphone13.caverphone("hi!");
        java.lang.String str30 = caverphone13.encode("1111111111");
        boolean boolean33 = caverphone13.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone13.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass37 = caverphone13.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = caverphone0.encode((java.lang.Object) caverphone13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("1111111111", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str20 = caverphone12.encode("");
        java.lang.String str22 = caverphone12.encode("hi!");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) str22);
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "AA11111111" + "'", obj23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("", "hi!");
        java.lang.String str23 = caverphone15.caverphone("");
        boolean boolean26 = caverphone15.isCaverphoneEqual("", "1111111111");
        java.lang.String str28 = caverphone15.encode("hi!");
        java.lang.String str30 = caverphone15.encode("");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj40 = caverphone15.encode((java.lang.Object) "AA11111111");
        boolean boolean43 = caverphone15.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str45 = caverphone15.encode("1111111111");
        java.lang.String str47 = caverphone15.caverphone("1111111111");
        java.lang.String str49 = caverphone15.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone50 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean53 = caverphone50.isCaverphoneEqual("hi!", "");
        boolean boolean56 = caverphone50.isCaverphoneEqual("", "hi!");
        java.lang.String str58 = caverphone50.caverphone("");
        boolean boolean61 = caverphone50.isCaverphoneEqual("", "1111111111");
        java.lang.String str63 = caverphone50.encode("hi!");
        java.lang.String str65 = caverphone50.encode("");
        org.apache.commons.codec.language.Caverphone caverphone66 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean69 = caverphone66.isCaverphoneEqual("hi!", "");
        java.lang.String str71 = caverphone66.caverphone("");
        boolean boolean74 = caverphone66.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj75 = caverphone50.encode((java.lang.Object) "AA11111111");
        boolean boolean78 = caverphone50.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str80 = caverphone50.encode("AA11111111");
        java.lang.Object obj81 = caverphone15.encode((java.lang.Object) str80);
        java.lang.Class<?> wildcardClass82 = caverphone15.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = caverphone0.encode((java.lang.Object) caverphone15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "1111111111" + "'", str71, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "AA11111111" + "'", obj75, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "AA11111111" + "'", str80, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "AA11111111" + "'", obj81, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.encode("");
        boolean boolean12 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str14 = caverphone0.encode("");
        java.lang.String str16 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("AA11111111");
        java.lang.String str26 = caverphone17.caverphone("1111111111");
        java.lang.String str28 = caverphone17.encode("");
        java.lang.String str30 = caverphone17.encode("1111111111");
        java.lang.String str32 = caverphone17.encode("AA11111111");
        java.lang.String str34 = caverphone17.encode("hi!");
        java.lang.String str36 = caverphone17.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = caverphone0.encode((java.lang.Object) caverphone17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.caverphone("");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean26 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("");
        boolean boolean12 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        boolean boolean37 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str39 = caverphone0.caverphone("hi!");
        java.lang.String str41 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj13 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        java.lang.String str17 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "1111111111" + "'", obj13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone12.caverphone("");
        boolean boolean23 = caverphone12.isCaverphoneEqual("", "1111111111");
        java.lang.String str25 = caverphone12.encode("hi!");
        java.lang.String str27 = caverphone12.encode("");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj37 = caverphone12.encode((java.lang.Object) "AA11111111");
        java.lang.String str39 = caverphone12.caverphone("AA11111111");
        java.lang.String str41 = caverphone12.encode("hi!");
        boolean boolean44 = caverphone12.isCaverphoneEqual("1111111111", "hi!");
        boolean boolean47 = caverphone12.isCaverphoneEqual("", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = caverphone0.encode((java.lang.Object) caverphone12);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "AA11111111" + "'", obj37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        java.lang.String str17 = caverphone12.caverphone("AA11111111");
        java.lang.String str19 = caverphone12.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.caverphone("AA11111111");
        boolean boolean33 = caverphone20.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj34 = caverphone12.encode((java.lang.Object) "");
        java.lang.String str36 = caverphone12.caverphone("");
        java.lang.String str38 = caverphone12.caverphone("AA11111111");
        java.lang.String str40 = caverphone12.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = caverphone0.encode((java.lang.Object) caverphone12);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone8.encode("hi!");
        java.lang.String str23 = caverphone8.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("1111111111", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone24.encode("AA11111111");
        java.lang.Object obj33 = caverphone8.encode((java.lang.Object) "AA11111111");
        java.lang.String str35 = caverphone8.encode("");
        boolean boolean38 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone8.encode("hi!");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean44 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean47 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        boolean boolean19 = caverphone13.isCaverphoneEqual("", "hi!");
        java.lang.String str21 = caverphone13.caverphone("");
        boolean boolean24 = caverphone13.isCaverphoneEqual("", "1111111111");
        boolean boolean27 = caverphone13.isCaverphoneEqual("", "");
        java.lang.String str29 = caverphone13.caverphone("hi!");
        java.lang.String str31 = caverphone13.caverphone("");
        java.lang.String str33 = caverphone13.caverphone("hi!");
        boolean boolean36 = caverphone13.isCaverphoneEqual("", "AA11111111");
        boolean boolean39 = caverphone13.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean43 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str45 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "1111111111" + "'", obj40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone0.caverphone("AA11111111");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.encode("AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone8.encode("hi!");
        java.lang.String str23 = caverphone8.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("1111111111", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone24.encode("AA11111111");
        java.lang.Object obj33 = caverphone8.encode((java.lang.Object) "AA11111111");
        java.lang.String str35 = caverphone8.encode("");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.encode("hi!");
        java.lang.String str13 = caverphone6.caverphone("hi!");
        java.lang.String str15 = caverphone6.caverphone("hi!");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) str15);
        java.lang.String str18 = caverphone0.caverphone("");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "AA11111111" + "'", obj16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone12.encode("hi!");
        java.lang.String str22 = caverphone12.caverphone("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) str22);
        java.lang.String str25 = caverphone0.encode("1111111111");
        java.lang.String str27 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass10 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.encode("");
        boolean boolean12 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("AA11111111");
        boolean boolean23 = caverphone15.isCaverphoneEqual("", "hi!");
        boolean boolean26 = caverphone15.isCaverphoneEqual("1111111111", "");
        boolean boolean29 = caverphone15.isCaverphoneEqual("AA11111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = caverphone0.encode((java.lang.Object) boolean29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }
}

