import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = caverphone0.encode((java.lang.Object) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.Class<?> wildcardClass9 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = caverphone0.encode((java.lang.Object) 100.0f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = caverphone0.encode((java.lang.Object) 0.0f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.encode("hi!");
        boolean boolean19 = caverphone11.isCaverphoneEqual("AA11111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = caverphone0.encode((java.lang.Object) caverphone11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.caverphone("AA11111111");
        java.lang.String str43 = caverphone31.caverphone("AA11111111");
        java.lang.String str45 = caverphone31.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = caverphone0.encode((java.lang.Object) caverphone31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        java.lang.String str23 = caverphone18.encode("hi!");
        java.lang.String str25 = caverphone18.caverphone("1111111111");
        java.lang.String str27 = caverphone18.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) caverphone18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("1111111111", "");
        boolean boolean17 = caverphone11.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str19 = caverphone11.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = caverphone0.encode((java.lang.Object) caverphone11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.Object obj12 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = caverphone0.encode((java.lang.Object) boolean16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "1111111111" + "'", obj12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.encode("hi!");
        java.lang.String str22 = caverphone15.caverphone("1111111111");
        java.lang.Object obj23 = caverphone8.encode((java.lang.Object) str22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = caverphone0.encode((java.lang.Object) caverphone8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.Object obj12 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "1111111111" + "'", obj12, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = caverphone0.encode((java.lang.Object) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.caverphone("");
        boolean boolean17 = caverphone9.isCaverphoneEqual("AA11111111", "");
        java.lang.String str19 = caverphone9.encode("1111111111");
        boolean boolean22 = caverphone9.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str24 = caverphone9.caverphone("hi!");
        java.lang.String str26 = caverphone9.encode("1111111111");
        boolean boolean29 = caverphone9.isCaverphoneEqual("", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = caverphone0.encode((java.lang.Object) boolean29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass9 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = caverphone0.encode((java.lang.Object) (-1.0f));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = caverphone0.encode((java.lang.Object) (-1L));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("");
        boolean boolean31 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        java.lang.String str35 = caverphone23.caverphone("hi!");
        java.lang.Class<?> wildcardClass36 = caverphone23.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = caverphone0.encode((java.lang.Object) caverphone23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.encode("hi!");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass29 = caverphone20.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = caverphone0.encode((java.lang.Object) wildcardClass29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("AA11111111");
        java.lang.String str22 = caverphone15.encode("");
        java.lang.Class<?> wildcardClass23 = caverphone15.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = caverphone0.encode((java.lang.Object) caverphone15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.String str29 = caverphone16.encode("hi!");
        java.lang.String str31 = caverphone16.encode("");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj41 = caverphone16.encode((java.lang.Object) "AA11111111");
        boolean boolean44 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass45 = caverphone16.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass16 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("1111111111", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj13 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = caverphone0.encode((java.lang.Object) boolean17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "1111111111" + "'", obj13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        java.lang.String str20 = caverphone8.caverphone("AA11111111");
        java.lang.String str22 = caverphone8.caverphone("AA11111111");
        boolean boolean25 = caverphone8.isCaverphoneEqual("", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = caverphone0.encode((java.lang.Object) boolean25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = caverphone0.encode((java.lang.Object) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = caverphone0.encode((java.lang.Object) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.Object obj23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = caverphone0.encode(obj23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass6 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.caverphone("AA11111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("", "1111111111");
        java.lang.String str28 = caverphone13.caverphone("AA11111111");
        boolean boolean31 = caverphone13.isCaverphoneEqual("", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = caverphone0.encode((java.lang.Object) caverphone13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = caverphone0.encode((java.lang.Object) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        boolean boolean16 = caverphone10.isCaverphoneEqual("", "hi!");
        java.lang.String str18 = caverphone10.caverphone("");
        boolean boolean21 = caverphone10.isCaverphoneEqual("", "1111111111");
        java.lang.String str23 = caverphone10.encode("hi!");
        java.lang.String str25 = caverphone10.encode("1111111111");
        java.lang.Class<?> wildcardClass26 = caverphone10.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = caverphone0.encode((java.lang.Object) caverphone10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("1111111111", "");
        boolean boolean16 = caverphone10.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str18 = caverphone10.caverphone("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = caverphone0.encode((java.lang.Object) caverphone10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("1111111111", "");
        boolean boolean16 = caverphone10.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str18 = caverphone10.encode("");
        java.lang.Class<?> wildcardClass19 = caverphone10.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = caverphone0.encode((java.lang.Object) caverphone10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = caverphone0.encode(obj8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.encode("hi!");
        java.lang.String str30 = caverphone23.caverphone("1111111111");
        java.lang.Object obj31 = caverphone16.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone16.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str36 = caverphone16.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("AA11111111");
        boolean boolean36 = caverphone28.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.encode("hi!");
        java.lang.String str44 = caverphone37.caverphone("1111111111");
        java.lang.String str46 = caverphone37.encode("1111111111");
        java.lang.Object obj47 = caverphone28.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("hi!", "");
        java.lang.String str53 = caverphone48.caverphone("");
        boolean boolean56 = caverphone48.isCaverphoneEqual("AA11111111", "");
        java.lang.String str58 = caverphone48.encode("1111111111");
        java.lang.Object obj59 = caverphone28.encode((java.lang.Object) str58);
        boolean boolean62 = caverphone28.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass63 = caverphone28.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = caverphone0.encode((java.lang.Object) wildcardClass63);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass6 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = caverphone0.encode((java.lang.Object) 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.Object obj11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = caverphone0.encode(obj11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("");
        boolean boolean19 = caverphone11.isCaverphoneEqual("AA11111111", "");
        java.lang.String str21 = caverphone11.caverphone("AA11111111");
        boolean boolean24 = caverphone11.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass25 = caverphone11.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = caverphone0.encode((java.lang.Object) wildcardClass25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass37 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.caverphone("AA11111111");
        java.lang.String str46 = caverphone34.caverphone("AA11111111");
        java.lang.String str48 = caverphone34.caverphone("AA11111111");
        boolean boolean51 = caverphone34.isCaverphoneEqual("", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = caverphone0.encode((java.lang.Object) caverphone34);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = caverphone0.encode((java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.encode("hi!");
        java.lang.String str20 = caverphone13.caverphone("hi!");
        java.lang.String str22 = caverphone13.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = caverphone0.encode((java.lang.Object) caverphone13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.encode("hi!");
        java.lang.String str26 = caverphone19.caverphone("1111111111");
        java.lang.Class<?> wildcardClass27 = caverphone19.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) wildcardClass27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.caverphone("");
        boolean boolean14 = caverphone6.isCaverphoneEqual("AA11111111", "");
        java.lang.String str16 = caverphone6.encode("1111111111");
        boolean boolean19 = caverphone6.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.caverphone("AA11111111");
        java.lang.String str32 = caverphone20.caverphone("AA11111111");
        java.lang.String str34 = caverphone20.caverphone("hi!");
        java.lang.String str36 = caverphone20.caverphone("1111111111");
        java.lang.Object obj37 = caverphone6.encode((java.lang.Object) str36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = caverphone0.encode((java.lang.Object) caverphone6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "1111111111" + "'", obj37, "1111111111");
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        java.lang.String str18 = caverphone11.caverphone("");
        java.lang.String str20 = caverphone11.encode("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str10 = caverphone8.encode("hi!");
        java.lang.Class<?> wildcardClass11 = caverphone8.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = caverphone0.encode((java.lang.Object) wildcardClass11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone40 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean43 = caverphone40.isCaverphoneEqual("1111111111", "");
        boolean boolean46 = caverphone40.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str48 = caverphone40.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = caverphone0.encode((java.lang.Object) caverphone40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = caverphone0.encode((java.lang.Object) 1L);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = caverphone0.encode((java.lang.Object) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        boolean boolean15 = caverphone9.isCaverphoneEqual("", "hi!");
        java.lang.String str17 = caverphone9.caverphone("");
        boolean boolean20 = caverphone9.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone9.encode((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = caverphone0.encode((java.lang.Object) caverphone9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = caverphone0.encode((java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = caverphone0.encode((java.lang.Object) 10.0f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.Object obj19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = caverphone0.encode(obj19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass8 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("AA11111111");
        boolean boolean33 = caverphone25.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.encode("hi!");
        java.lang.String str41 = caverphone34.caverphone("1111111111");
        java.lang.String str43 = caverphone34.encode("1111111111");
        java.lang.Object obj44 = caverphone25.encode((java.lang.Object) "1111111111");
        java.lang.String str46 = caverphone25.caverphone("1111111111");
        java.lang.String str48 = caverphone25.encode("");
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone49.encode("hi!");
        java.lang.String str56 = caverphone49.caverphone("1111111111");
        java.lang.String str58 = caverphone49.encode("1111111111");
        java.lang.Object obj59 = caverphone25.encode((java.lang.Object) "1111111111");
        java.lang.Object obj60 = caverphone0.encode(obj59);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "1111111111" + "'", obj44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = caverphone0.encode((java.lang.Object) 1.0f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = caverphone0.encode((java.lang.Object) (-1.0f));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        boolean boolean30 = caverphone16.isCaverphoneEqual("", "");
        java.lang.String str32 = caverphone16.caverphone("hi!");
        java.lang.String str34 = caverphone16.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass39 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass9 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        java.lang.Class<?> wildcardClass9 = caverphone8.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = caverphone0.encode((java.lang.Object) caverphone8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.encode("hi!");
        java.lang.String str13 = caverphone6.caverphone("1111111111");
        java.lang.String str15 = caverphone6.encode("1111111111");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("1111111111", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str25 = caverphone17.caverphone("AA11111111");
        java.lang.String str27 = caverphone17.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) caverphone17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "1111111111" + "'", obj16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass16 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("hi!");
        java.lang.String str23 = caverphone14.caverphone("hi!");
        java.lang.String str25 = caverphone14.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.Class<?> wildcardClass40 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass6 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        boolean boolean38 = caverphone32.isCaverphoneEqual("", "hi!");
        java.lang.String str40 = caverphone32.caverphone("");
        boolean boolean43 = caverphone32.isCaverphoneEqual("", "1111111111");
        java.lang.String str45 = caverphone32.encode("hi!");
        java.lang.String str47 = caverphone32.encode("");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("hi!", "");
        java.lang.String str53 = caverphone48.caverphone("");
        boolean boolean56 = caverphone48.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj57 = caverphone32.encode((java.lang.Object) "AA11111111");
        java.lang.String str59 = caverphone32.caverphone("AA11111111");
        java.lang.String str61 = caverphone32.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone62 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean65 = caverphone62.isCaverphoneEqual("1111111111", "");
        boolean boolean68 = caverphone62.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str70 = caverphone62.encode("");
        java.lang.String str72 = caverphone62.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone73 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean76 = caverphone73.isCaverphoneEqual("hi!", "");
        java.lang.String str78 = caverphone73.caverphone("AA11111111");
        java.lang.String str80 = caverphone73.caverphone("");
        java.lang.String str82 = caverphone73.encode("hi!");
        java.lang.Object obj83 = caverphone62.encode((java.lang.Object) str82);
        boolean boolean86 = caverphone62.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj87 = caverphone32.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = caverphone0.encode((java.lang.Object) wildcardClass88);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "AA11111111" + "'", obj57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "AA11111111" + "'", str72, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "AA11111111" + "'", str78, "AA11111111");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "1111111111" + "'", str80, "1111111111");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "AA11111111" + "'", str82, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "AA11111111" + "'", obj83, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "1111111111" + "'", obj87, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        boolean boolean16 = caverphone10.isCaverphoneEqual("", "hi!");
        java.lang.String str18 = caverphone10.caverphone("");
        boolean boolean21 = caverphone10.isCaverphoneEqual("1111111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = caverphone0.encode((java.lang.Object) boolean21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str23 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.String str19 = caverphone0.caverphone("1111111111");
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = caverphone0.encode((java.lang.Object) wildcardClass21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        java.lang.String str23 = caverphone18.caverphone("");
        boolean boolean26 = caverphone18.isCaverphoneEqual("AA11111111", "");
        java.lang.String str28 = caverphone18.caverphone("AA11111111");
        java.lang.String str30 = caverphone18.caverphone("AA11111111");
        java.lang.String str32 = caverphone18.caverphone("AA11111111");
        boolean boolean35 = caverphone18.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        boolean boolean42 = caverphone36.isCaverphoneEqual("", "hi!");
        java.lang.String str44 = caverphone36.caverphone("");
        boolean boolean47 = caverphone36.isCaverphoneEqual("", "1111111111");
        boolean boolean50 = caverphone36.isCaverphoneEqual("", "");
        java.lang.Object obj51 = caverphone18.encode((java.lang.Object) "");
        java.lang.String str53 = caverphone18.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = caverphone0.encode((java.lang.Object) caverphone18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.encode("hi!");
        java.lang.String str30 = caverphone23.caverphone("1111111111");
        java.lang.String str32 = caverphone23.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = caverphone0.encode((java.lang.Object) caverphone23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.encode("1111111111");
        boolean boolean29 = caverphone16.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str31 = caverphone16.caverphone("hi!");
        java.lang.String str33 = caverphone16.encode("1111111111");
        boolean boolean36 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.Object obj37 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "1111111111" + "'", obj37, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("1111111111", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("hi!", "hi!");
        boolean boolean26 = caverphone17.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean29 = caverphone17.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Class<?> wildcardClass30 = caverphone17.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = caverphone0.encode((java.lang.Object) wildcardClass30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass9 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("AA11111111");
        boolean boolean34 = caverphone26.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.encode("hi!");
        java.lang.String str42 = caverphone35.caverphone("1111111111");
        java.lang.String str44 = caverphone35.encode("1111111111");
        java.lang.Object obj45 = caverphone26.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.caverphone("");
        boolean boolean54 = caverphone46.isCaverphoneEqual("AA11111111", "");
        java.lang.String str56 = caverphone46.encode("1111111111");
        java.lang.Object obj57 = caverphone26.encode((java.lang.Object) str56);
        java.lang.Object obj58 = caverphone0.encode((java.lang.Object) str56);
        java.lang.Class<?> wildcardClass59 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "1111111111" + "'", obj57, "1111111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "1111111111" + "'", obj58, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("1111111111", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str20 = caverphone12.encode("");
        java.lang.String str22 = caverphone12.encode("hi!");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) str22);
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "AA11111111" + "'", obj23, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone4 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean7 = caverphone4.isCaverphoneEqual("hi!", "");
        boolean boolean10 = caverphone4.isCaverphoneEqual("", "hi!");
        java.lang.String str12 = caverphone4.caverphone("");
        boolean boolean15 = caverphone4.isCaverphoneEqual("", "1111111111");
        boolean boolean18 = caverphone4.isCaverphoneEqual("", "");
        java.lang.String str20 = caverphone4.caverphone("hi!");
        java.lang.String str22 = caverphone4.caverphone("");
        java.lang.String str24 = caverphone4.caverphone("hi!");
        boolean boolean27 = caverphone4.isCaverphoneEqual("", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) caverphone4);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone20.isCaverphoneEqual("", "hi!");
        java.lang.String str28 = caverphone20.caverphone("");
        boolean boolean31 = caverphone20.isCaverphoneEqual("", "1111111111");
        java.lang.String str33 = caverphone20.encode("hi!");
        java.lang.String str35 = caverphone20.encode("");
        java.lang.String str37 = caverphone20.caverphone("hi!");
        java.lang.String str39 = caverphone20.encode("hi!");
        boolean boolean42 = caverphone20.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str44 = caverphone20.encode("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = caverphone0.encode((java.lang.Object) caverphone20);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass40 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = caverphone0.encode((java.lang.Object) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        java.lang.String str10 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("");
        boolean boolean19 = caverphone11.isCaverphoneEqual("AA11111111", "");
        java.lang.String str21 = caverphone11.encode("1111111111");
        boolean boolean24 = caverphone11.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Class<?> wildcardClass25 = caverphone11.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = caverphone0.encode((java.lang.Object) caverphone11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass9 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("", "hi!");
        java.lang.String str22 = caverphone14.caverphone("");
        boolean boolean25 = caverphone14.isCaverphoneEqual("", "1111111111");
        java.lang.String str27 = caverphone14.encode("hi!");
        java.lang.String str29 = caverphone14.encode("");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.caverphone("");
        boolean boolean38 = caverphone30.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj39 = caverphone14.encode((java.lang.Object) "AA11111111");
        boolean boolean42 = caverphone14.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str44 = caverphone14.caverphone("hi!");
        boolean boolean47 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str49 = caverphone14.caverphone("");
        java.lang.String str51 = caverphone14.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "AA11111111" + "'", obj39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("");
        boolean boolean19 = caverphone11.isCaverphoneEqual("AA11111111", "");
        java.lang.String str21 = caverphone11.encode("1111111111");
        boolean boolean24 = caverphone11.isCaverphoneEqual("", "1111111111");
        boolean boolean27 = caverphone11.isCaverphoneEqual("hi!", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) caverphone11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.caverphone("");
        boolean boolean18 = caverphone10.isCaverphoneEqual("AA11111111", "");
        java.lang.String str20 = caverphone10.encode("1111111111");
        boolean boolean23 = caverphone10.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str25 = caverphone10.caverphone("hi!");
        java.lang.String str27 = caverphone10.encode("1111111111");
        boolean boolean30 = caverphone10.isCaverphoneEqual("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = caverphone0.encode((java.lang.Object) boolean30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.Object obj34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = caverphone0.encode(obj34);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        boolean boolean42 = caverphone36.isCaverphoneEqual("", "hi!");
        java.lang.String str44 = caverphone36.caverphone("");
        boolean boolean47 = caverphone36.isCaverphoneEqual("", "1111111111");
        java.lang.String str49 = caverphone36.encode("hi!");
        java.lang.String str51 = caverphone36.encode("");
        org.apache.commons.codec.language.Caverphone caverphone52 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean55 = caverphone52.isCaverphoneEqual("hi!", "");
        java.lang.String str57 = caverphone52.caverphone("");
        boolean boolean60 = caverphone52.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj61 = caverphone36.encode((java.lang.Object) "AA11111111");
        boolean boolean64 = caverphone36.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str66 = caverphone36.encode("1111111111");
        boolean boolean69 = caverphone36.isCaverphoneEqual("", "AA11111111");
        boolean boolean72 = caverphone36.isCaverphoneEqual("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = caverphone0.encode((java.lang.Object) caverphone36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "AA11111111" + "'", obj61, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("1111111111", "");
        boolean boolean31 = caverphone25.isCaverphoneEqual("hi!", "hi!");
        boolean boolean34 = caverphone25.isCaverphoneEqual("AA11111111", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = caverphone0.encode((java.lang.Object) boolean34);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.encode("hi!");
        java.lang.String str29 = caverphone22.caverphone("AA11111111");
        java.lang.String str31 = caverphone22.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = caverphone0.encode((java.lang.Object) caverphone22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str25 = caverphone23.encode("hi!");
        java.lang.Class<?> wildcardClass26 = caverphone23.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = caverphone0.encode((java.lang.Object) caverphone23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        java.lang.String str29 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("1111111111", "");
        boolean boolean36 = caverphone30.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone30.caverphone("AA11111111");
        boolean boolean41 = caverphone30.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("hi!", "");
        java.lang.String str48 = caverphone43.caverphone("");
        boolean boolean51 = caverphone43.isCaverphoneEqual("AA11111111", "");
        java.lang.String str53 = caverphone43.caverphone("hi!");
        java.lang.String str55 = caverphone43.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = caverphone0.encode((java.lang.Object) caverphone43);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "AA11111111" + "'", obj42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        java.lang.String str20 = caverphone8.caverphone("AA11111111");
        java.lang.String str22 = caverphone8.caverphone("AA11111111");
        boolean boolean25 = caverphone8.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("");
        boolean boolean37 = caverphone26.isCaverphoneEqual("", "1111111111");
        boolean boolean40 = caverphone26.isCaverphoneEqual("", "");
        java.lang.Object obj41 = caverphone8.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        java.lang.String str47 = caverphone42.caverphone("");
        boolean boolean50 = caverphone42.isCaverphoneEqual("AA11111111", "");
        java.lang.String str52 = caverphone42.encode("1111111111");
        boolean boolean55 = caverphone42.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone56 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean59 = caverphone56.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj60 = caverphone42.encode((java.lang.Object) "");
        java.lang.String str62 = caverphone42.caverphone("1111111111");
        java.lang.String str64 = caverphone42.encode("hi!");
        java.lang.String str66 = caverphone42.caverphone("1111111111");
        java.lang.Object obj67 = caverphone8.encode((java.lang.Object) str66);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = caverphone0.encode((java.lang.Object) caverphone8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "1111111111" + "'", obj67, "1111111111");
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass10 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str30 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.caverphone("AA11111111");
        java.lang.String str43 = caverphone31.caverphone("AA11111111");
        java.lang.String str45 = caverphone31.caverphone("hi!");
        java.lang.String str47 = caverphone31.caverphone("1111111111");
        java.lang.Class<?> wildcardClass48 = caverphone31.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = caverphone0.encode((java.lang.Object) wildcardClass48);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("AA11111111");
        boolean boolean34 = caverphone26.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.encode("hi!");
        java.lang.String str42 = caverphone35.caverphone("1111111111");
        java.lang.String str44 = caverphone35.encode("1111111111");
        java.lang.Object obj45 = caverphone26.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.caverphone("");
        boolean boolean54 = caverphone46.isCaverphoneEqual("AA11111111", "");
        java.lang.String str56 = caverphone46.encode("1111111111");
        java.lang.Object obj57 = caverphone26.encode((java.lang.Object) str56);
        java.lang.Object obj58 = caverphone0.encode((java.lang.Object) str56);
        java.lang.String str60 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "1111111111" + "'", obj57, "1111111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "1111111111" + "'", obj58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        java.lang.String str37 = caverphone0.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = caverphone0.encode((java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass33 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.caverphone("");
        boolean boolean29 = caverphone21.isCaverphoneEqual("AA11111111", "");
        java.lang.String str31 = caverphone21.caverphone("AA11111111");
        java.lang.String str33 = caverphone21.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        boolean boolean40 = caverphone34.isCaverphoneEqual("", "hi!");
        java.lang.String str42 = caverphone34.caverphone("");
        boolean boolean45 = caverphone34.isCaverphoneEqual("", "1111111111");
        boolean boolean48 = caverphone34.isCaverphoneEqual("", "");
        java.lang.String str50 = caverphone34.caverphone("hi!");
        java.lang.String str52 = caverphone34.caverphone("");
        java.lang.String str54 = caverphone34.caverphone("hi!");
        java.lang.Object obj55 = caverphone21.encode((java.lang.Object) str54);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = caverphone0.encode((java.lang.Object) wildcardClass56);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "AA11111111" + "'", obj55, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass10 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        java.lang.String str18 = caverphone11.caverphone("");
        java.lang.String str20 = caverphone11.encode("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("hi!");
        java.lang.String str34 = caverphone25.caverphone("hi!");
        boolean boolean37 = caverphone25.isCaverphoneEqual("1111111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = caverphone0.encode((java.lang.Object) boolean37);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        boolean boolean23 = caverphone14.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str25 = caverphone14.caverphone("");
        java.lang.String str27 = caverphone14.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.encode("AA11111111");
        java.lang.String str6 = caverphone0.caverphone("hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AA11111111" + "'", str4, "AA11111111");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AA11111111" + "'", str6, "AA11111111");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.caverphone("");
        boolean boolean17 = caverphone9.isCaverphoneEqual("AA11111111", "");
        java.lang.String str19 = caverphone9.encode("1111111111");
        boolean boolean22 = caverphone9.isCaverphoneEqual("1111111111", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = caverphone0.encode((java.lang.Object) caverphone9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        boolean boolean35 = caverphone29.isCaverphoneEqual("", "hi!");
        java.lang.String str37 = caverphone29.caverphone("");
        boolean boolean40 = caverphone29.isCaverphoneEqual("", "1111111111");
        java.lang.String str42 = caverphone29.encode("hi!");
        java.lang.String str44 = caverphone29.encode("");
        org.apache.commons.codec.language.Caverphone caverphone45 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean48 = caverphone45.isCaverphoneEqual("hi!", "");
        java.lang.String str50 = caverphone45.caverphone("");
        boolean boolean53 = caverphone45.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj54 = caverphone29.encode((java.lang.Object) "AA11111111");
        boolean boolean57 = caverphone29.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str59 = caverphone29.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = caverphone0.encode((java.lang.Object) caverphone29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "AA11111111" + "'", obj54, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.encode("hi!");
        java.lang.String str30 = caverphone23.caverphone("AA11111111");
        java.lang.String str32 = caverphone23.encode("");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass16 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        boolean boolean27 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("1111111111", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str36 = caverphone28.encode("");
        java.lang.String str38 = caverphone28.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone39.caverphone("AA11111111");
        java.lang.String str46 = caverphone39.caverphone("");
        java.lang.String str48 = caverphone39.encode("hi!");
        java.lang.Object obj49 = caverphone28.encode((java.lang.Object) str48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = caverphone0.encode((java.lang.Object) caverphone28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "AA11111111" + "'", obj49, "AA11111111");
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.encode("hi!");
        java.lang.String str13 = caverphone6.caverphone("1111111111");
        java.lang.String str15 = caverphone6.encode("1111111111");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "1111111111" + "'", obj16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass5 = caverphone0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AA11111111" + "'", str4, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("1111111111", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str26 = caverphone18.caverphone("AA11111111");
        java.lang.String str28 = caverphone18.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = caverphone0.encode((java.lang.Object) caverphone18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.encode("1111111111");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass6 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str26 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        java.lang.String str27 = caverphone0.encode("AA11111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.encode("hi!");
        java.lang.String str34 = caverphone27.caverphone("hi!");
        java.lang.String str36 = caverphone27.caverphone("hi!");
        java.lang.String str38 = caverphone27.caverphone("1111111111");
        java.lang.String str40 = caverphone27.encode("");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("1111111111", "");
        boolean boolean47 = caverphone41.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str49 = caverphone41.encode("AA11111111");
        java.lang.String str51 = caverphone41.encode("");
        java.lang.Object obj52 = caverphone27.encode((java.lang.Object) "");
        java.lang.Object obj53 = caverphone0.encode(obj52);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "1111111111" + "'", obj53, "1111111111");
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass10 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("AA11111111");
        boolean boolean21 = caverphone13.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.encode("hi!");
        java.lang.String str29 = caverphone22.caverphone("1111111111");
        java.lang.String str31 = caverphone22.encode("1111111111");
        java.lang.Object obj32 = caverphone13.encode((java.lang.Object) "1111111111");
        java.lang.String str34 = caverphone13.caverphone("1111111111");
        boolean boolean37 = caverphone13.isCaverphoneEqual("", "");
        java.lang.String str39 = caverphone13.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass40 = caverphone13.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = caverphone0.encode((java.lang.Object) wildcardClass40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "1111111111" + "'", obj32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "AA11111111");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "AA11111111" + "'", obj19, "AA11111111");
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass16 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.encode("hi!");
        java.lang.String str17 = caverphone10.caverphone("AA11111111");
        java.lang.String str19 = caverphone10.caverphone("hi!");
        java.lang.String str21 = caverphone10.caverphone("hi!");
        java.lang.String str23 = caverphone10.caverphone("1111111111");
        java.lang.Object obj24 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass34 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("");
        boolean boolean19 = caverphone11.isCaverphoneEqual("AA11111111", "");
        java.lang.String str21 = caverphone11.caverphone("AA11111111");
        java.lang.String str23 = caverphone11.caverphone("AA11111111");
        java.lang.String str25 = caverphone11.caverphone("AA11111111");
        boolean boolean28 = caverphone11.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        boolean boolean35 = caverphone29.isCaverphoneEqual("", "hi!");
        java.lang.String str37 = caverphone29.caverphone("");
        boolean boolean40 = caverphone29.isCaverphoneEqual("", "1111111111");
        boolean boolean43 = caverphone29.isCaverphoneEqual("", "");
        java.lang.Object obj44 = caverphone11.encode((java.lang.Object) "");
        java.lang.String str46 = caverphone11.caverphone("hi!");
        java.lang.Class<?> wildcardClass47 = caverphone11.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = caverphone0.encode((java.lang.Object) wildcardClass47);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "1111111111" + "'", obj44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.encode("AA11111111");
        java.lang.String str14 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.encode("hi!");
        java.lang.String str22 = caverphone15.caverphone("1111111111");
        java.lang.Class<?> wildcardClass23 = caverphone15.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = caverphone0.encode((java.lang.Object) caverphone15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.encode("hi!");
        java.lang.String str33 = caverphone26.caverphone("AA11111111");
        java.lang.String str35 = caverphone26.caverphone("hi!");
        java.lang.String str37 = caverphone26.caverphone("hi!");
        boolean boolean40 = caverphone26.isCaverphoneEqual("", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str20 = caverphone0.encode("1111111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str20 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        java.lang.String str29 = caverphone21.caverphone("");
        boolean boolean32 = caverphone21.isCaverphoneEqual("", "1111111111");
        boolean boolean35 = caverphone21.isCaverphoneEqual("", "");
        boolean boolean38 = caverphone21.isCaverphoneEqual("", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = caverphone0.encode((java.lang.Object) caverphone21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str20 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.encode("hi!");
        java.lang.String str28 = caverphone21.caverphone("1111111111");
        java.lang.String str30 = caverphone21.encode("");
        java.lang.String str32 = caverphone21.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass33 = caverphone21.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = caverphone0.encode((java.lang.Object) caverphone21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.String str16 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("");
        boolean boolean37 = caverphone26.isCaverphoneEqual("", "1111111111");
        boolean boolean40 = caverphone26.isCaverphoneEqual("", "");
        boolean boolean43 = caverphone26.isCaverphoneEqual("", "");
        java.lang.String str45 = caverphone26.caverphone("");
        java.lang.Class<?> wildcardClass46 = caverphone26.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("1111111111", "");
        boolean boolean17 = caverphone11.isCaverphoneEqual("hi!", "hi!");
        boolean boolean20 = caverphone11.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str22 = caverphone11.caverphone("");
        java.lang.String str24 = caverphone11.caverphone("hi!");
        java.lang.String str26 = caverphone11.caverphone("hi!");
        java.lang.String str28 = caverphone11.caverphone("");
        java.lang.String str30 = caverphone11.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = caverphone0.encode((java.lang.Object) caverphone11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str18 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.encode("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("AA11111111");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        boolean boolean25 = caverphone19.isCaverphoneEqual("", "hi!");
        java.lang.String str27 = caverphone19.caverphone("");
        boolean boolean30 = caverphone19.isCaverphoneEqual("", "1111111111");
        java.lang.String str32 = caverphone19.encode("hi!");
        java.lang.String str34 = caverphone19.encode("");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.caverphone("");
        boolean boolean43 = caverphone35.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj44 = caverphone19.encode((java.lang.Object) "AA11111111");
        boolean boolean47 = caverphone19.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str49 = caverphone19.caverphone("hi!");
        boolean boolean52 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.Class<?> wildcardClass53 = caverphone19.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = caverphone0.encode((java.lang.Object) wildcardClass53);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "AA11111111" + "'", obj44, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        java.lang.String str17 = caverphone12.caverphone("");
        boolean boolean20 = caverphone12.isCaverphoneEqual("AA11111111", "");
        java.lang.String str22 = caverphone12.encode("1111111111");
        boolean boolean25 = caverphone12.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str27 = caverphone12.encode("AA11111111");
        boolean boolean30 = caverphone12.isCaverphoneEqual("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = caverphone0.encode((java.lang.Object) boolean30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Class<?> wildcardClass37 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.caverphone("AA11111111");
        java.lang.String str48 = caverphone36.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone49.caverphone("");
        boolean boolean57 = caverphone49.isCaverphoneEqual("AA11111111", "");
        java.lang.String str59 = caverphone49.caverphone("AA11111111");
        java.lang.String str61 = caverphone49.caverphone("AA11111111");
        java.lang.Object obj62 = caverphone36.encode((java.lang.Object) "AA11111111");
        java.lang.String str64 = caverphone36.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = caverphone0.encode((java.lang.Object) caverphone36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "AA11111111" + "'", obj62, "AA11111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.caverphone("AA11111111");
        boolean boolean18 = caverphone10.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.encode("hi!");
        java.lang.String str26 = caverphone19.caverphone("1111111111");
        java.lang.String str28 = caverphone19.encode("1111111111");
        java.lang.Object obj29 = caverphone10.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.caverphone("");
        boolean boolean38 = caverphone30.isCaverphoneEqual("AA11111111", "");
        java.lang.String str40 = caverphone30.encode("1111111111");
        java.lang.Object obj41 = caverphone10.encode((java.lang.Object) str40);
        boolean boolean44 = caverphone10.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone45 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean48 = caverphone45.isCaverphoneEqual("hi!", "");
        boolean boolean51 = caverphone45.isCaverphoneEqual("", "hi!");
        java.lang.String str53 = caverphone45.caverphone("");
        boolean boolean56 = caverphone45.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj58 = caverphone45.encode((java.lang.Object) "");
        java.lang.Object obj59 = caverphone10.encode(obj58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = caverphone0.encode((java.lang.Object) caverphone10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "1111111111" + "'", obj29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "1111111111" + "'", obj58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str10 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass10 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("AA11111111");
        java.lang.String str26 = caverphone19.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.caverphone("AA11111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj41 = caverphone19.encode((java.lang.Object) "");
        java.lang.String str43 = caverphone19.caverphone("");
        java.lang.String str45 = caverphone19.caverphone("AA11111111");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass47 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "AA11111111" + "'", obj46, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        boolean boolean28 = caverphone22.isCaverphoneEqual("", "hi!");
        java.lang.String str30 = caverphone22.caverphone("");
        boolean boolean33 = caverphone22.isCaverphoneEqual("", "1111111111");
        boolean boolean36 = caverphone22.isCaverphoneEqual("", "");
        java.lang.String str38 = caverphone22.caverphone("hi!");
        java.lang.String str40 = caverphone22.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = caverphone0.encode((java.lang.Object) caverphone22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.String str20 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.encode("hi!");
        java.lang.String str35 = caverphone28.caverphone("1111111111");
        java.lang.Object obj36 = caverphone21.encode((java.lang.Object) str35);
        java.lang.String str38 = caverphone21.caverphone("1111111111");
        java.lang.Object obj39 = caverphone0.encode((java.lang.Object) str38);
        org.apache.commons.codec.language.Caverphone caverphone40 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean43 = caverphone40.isCaverphoneEqual("hi!", "");
        java.lang.String str45 = caverphone40.caverphone("");
        boolean boolean48 = caverphone40.isCaverphoneEqual("AA11111111", "");
        java.lang.String str50 = caverphone40.encode("1111111111");
        java.lang.String str52 = caverphone40.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass53 = caverphone40.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = caverphone0.encode((java.lang.Object) caverphone40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "1111111111" + "'", obj39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("");
        boolean boolean23 = caverphone15.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone15.encode("1111111111");
        boolean boolean28 = caverphone15.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str30 = caverphone15.caverphone("hi!");
        java.lang.String str32 = caverphone15.encode("1111111111");
        boolean boolean35 = caverphone15.isCaverphoneEqual("", "AA11111111");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.String str12 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str15 = caverphone13.caverphone("1111111111");
        java.lang.String str17 = caverphone13.caverphone("1111111111");
        java.lang.String str19 = caverphone13.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("1111111111", "");
        boolean boolean26 = caverphone20.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str28 = caverphone20.encode("");
        java.lang.String str30 = caverphone20.encode("hi!");
        java.lang.Object obj31 = caverphone13.encode((java.lang.Object) "hi!");
        java.lang.Object obj32 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "AA11111111" + "'", obj31, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "AA11111111" + "'", obj32, "AA11111111");
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        boolean boolean41 = caverphone35.isCaverphoneEqual("", "hi!");
        java.lang.String str43 = caverphone35.caverphone("");
        boolean boolean46 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.String str48 = caverphone35.encode("hi!");
        java.lang.String str50 = caverphone35.encode("");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.caverphone("");
        boolean boolean59 = caverphone51.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj60 = caverphone35.encode((java.lang.Object) "AA11111111");
        boolean boolean63 = caverphone35.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str65 = caverphone35.encode("AA11111111");
        java.lang.Object obj66 = caverphone0.encode((java.lang.Object) str65);
        org.apache.commons.codec.language.Caverphone caverphone67 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean70 = caverphone67.isCaverphoneEqual("hi!", "");
        java.lang.String str72 = caverphone67.caverphone("");
        boolean boolean75 = caverphone67.isCaverphoneEqual("AA11111111", "");
        java.lang.String str77 = caverphone67.caverphone("AA11111111");
        java.lang.String str79 = caverphone67.caverphone("AA11111111");
        java.lang.String str81 = caverphone67.encode("hi!");
        java.lang.String str83 = caverphone67.caverphone("1111111111");
        boolean boolean86 = caverphone67.isCaverphoneEqual("hi!", "");
        java.lang.Class<?> wildcardClass87 = caverphone67.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = caverphone0.encode((java.lang.Object) wildcardClass87);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "AA11111111" + "'", obj60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "AA11111111" + "'", obj66, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "AA11111111" + "'", str77, "AA11111111");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "AA11111111" + "'", str79, "AA11111111");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AA11111111" + "'", str81, "AA11111111");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "1111111111" + "'", str83, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean20 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        java.lang.String str29 = caverphone21.caverphone("");
        boolean boolean32 = caverphone21.isCaverphoneEqual("", "1111111111");
        java.lang.String str34 = caverphone21.encode("hi!");
        java.lang.String str36 = caverphone21.encode("");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj46 = caverphone21.encode((java.lang.Object) "AA11111111");
        boolean boolean49 = caverphone21.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str51 = caverphone21.encode("1111111111");
        boolean boolean54 = caverphone21.isCaverphoneEqual("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = caverphone0.encode((java.lang.Object) boolean54);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "AA11111111" + "'", obj46, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        java.lang.String str37 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass38 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        boolean boolean16 = caverphone10.isCaverphoneEqual("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = caverphone0.encode((java.lang.Object) boolean16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = caverphone0.encode((java.lang.Object) (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        boolean boolean19 = caverphone13.isCaverphoneEqual("", "hi!");
        java.lang.String str21 = caverphone13.caverphone("");
        boolean boolean24 = caverphone13.isCaverphoneEqual("", "1111111111");
        boolean boolean27 = caverphone13.isCaverphoneEqual("", "");
        java.lang.String str29 = caverphone13.caverphone("hi!");
        java.lang.String str31 = caverphone13.caverphone("");
        java.lang.String str33 = caverphone13.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        boolean boolean41 = caverphone35.isCaverphoneEqual("", "hi!");
        java.lang.String str43 = caverphone35.caverphone("");
        boolean boolean46 = caverphone35.isCaverphoneEqual("", "1111111111");
        boolean boolean49 = caverphone35.isCaverphoneEqual("", "");
        java.lang.String str51 = caverphone35.caverphone("hi!");
        java.lang.String str53 = caverphone35.caverphone("");
        java.lang.String str55 = caverphone35.caverphone("hi!");
        boolean boolean58 = caverphone35.isCaverphoneEqual("", "");
        boolean boolean61 = caverphone35.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Object obj62 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "AA11111111" + "'", obj62, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("1111111111", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str23 = caverphone15.encode("AA11111111");
        java.lang.Class<?> wildcardClass24 = caverphone15.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = caverphone0.encode((java.lang.Object) wildcardClass24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone3 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean6 = caverphone3.isCaverphoneEqual("hi!", "");
        boolean boolean9 = caverphone3.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.encode("hi!");
        java.lang.String str17 = caverphone10.caverphone("1111111111");
        java.lang.Object obj18 = caverphone3.encode((java.lang.Object) str17);
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        boolean boolean25 = caverphone19.isCaverphoneEqual("", "hi!");
        java.lang.String str27 = caverphone19.caverphone("");
        boolean boolean30 = caverphone19.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj32 = caverphone19.encode((java.lang.Object) "");
        java.lang.Object obj33 = caverphone3.encode(obj32);
        java.lang.String str35 = caverphone3.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = caverphone0.encode((java.lang.Object) caverphone3);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "1111111111" + "'", obj32, "1111111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.caverphone("AA11111111");
        java.lang.String str36 = caverphone24.caverphone("AA11111111");
        java.lang.String str38 = caverphone24.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = caverphone0.encode((java.lang.Object) caverphone24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str27 = caverphone0.caverphone("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.Class<?> wildcardClass31 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("AA11111111");
        boolean boolean24 = caverphone16.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone16.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.encode("1111111111");
        java.lang.Object obj47 = caverphone16.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode(obj47);
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str51 = caverphone49.caverphone("1111111111");
        java.lang.Object obj52 = caverphone0.encode((java.lang.Object) str51);
        boolean boolean55 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass36 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("AA11111111");
        boolean boolean37 = caverphone29.isCaverphoneEqual("", "hi!");
        boolean boolean40 = caverphone29.isCaverphoneEqual("1111111111", "");
        java.lang.String str42 = caverphone29.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = caverphone0.encode((java.lang.Object) caverphone29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str30 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass31 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("", "hi!");
        java.lang.String str22 = caverphone14.caverphone("");
        boolean boolean25 = caverphone14.isCaverphoneEqual("", "1111111111");
        java.lang.String str27 = caverphone14.encode("hi!");
        java.lang.String str29 = caverphone14.encode("");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.caverphone("");
        boolean boolean38 = caverphone30.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj39 = caverphone14.encode((java.lang.Object) "AA11111111");
        boolean boolean42 = caverphone14.isCaverphoneEqual("AA11111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "AA11111111" + "'", obj39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        java.lang.String str35 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.caverphone("hi!");
        java.lang.String str48 = caverphone36.caverphone("");
        boolean boolean51 = caverphone36.isCaverphoneEqual("", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = caverphone0.encode((java.lang.Object) boolean51);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = caverphone0.encode((java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj31 = caverphone18.encode((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = caverphone0.encode((java.lang.Object) caverphone18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Class<?> wildcardClass10 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("1111111111", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str23 = caverphone15.encode("AA11111111");
        java.lang.Class<?> wildcardClass24 = caverphone15.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = caverphone0.encode((java.lang.Object) wildcardClass24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        java.lang.String str17 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.encode("hi!");
        java.lang.String str30 = caverphone23.caverphone("AA11111111");
        java.lang.String str32 = caverphone23.encode("");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass34 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = caverphone0.encode((java.lang.Object) 1.0f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("");
        boolean boolean23 = caverphone15.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone15.encode("1111111111");
        boolean boolean28 = caverphone15.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str30 = caverphone15.caverphone("hi!");
        java.lang.String str32 = caverphone15.encode("1111111111");
        boolean boolean35 = caverphone15.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass36 = caverphone15.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = caverphone0.encode((java.lang.Object) caverphone15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        boolean boolean15 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass16 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.Class<?> wildcardClass37 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str30 = caverphone28.caverphone("1111111111");
        java.lang.String str32 = caverphone28.caverphone("1111111111");
        java.lang.String str34 = caverphone28.caverphone("AA11111111");
        java.lang.Object obj35 = caverphone22.encode((java.lang.Object) str34);
        boolean boolean38 = caverphone22.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass39 = caverphone22.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = caverphone0.encode((java.lang.Object) caverphone22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass27 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass28 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.String str19 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.encode("hi!");
        java.lang.String str27 = caverphone20.caverphone("1111111111");
        java.lang.String str29 = caverphone20.encode("");
        java.lang.String str31 = caverphone20.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass32 = caverphone20.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = caverphone0.encode((java.lang.Object) wildcardClass32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("1111111111", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone12.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str23 = caverphone12.caverphone("");
        java.lang.String str25 = caverphone12.encode("");
        java.lang.String str27 = caverphone12.encode("1111111111");
        java.lang.String str29 = caverphone12.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = caverphone0.encode((java.lang.Object) caverphone12);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.encode("hi!");
        boolean boolean13 = caverphone5.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str15 = caverphone5.encode("AA11111111");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "AA11111111" + "'", obj16, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean25 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        java.lang.Object obj26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = caverphone0.encode(obj26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        boolean boolean35 = caverphone29.isCaverphoneEqual("", "hi!");
        java.lang.String str37 = caverphone29.caverphone("");
        boolean boolean40 = caverphone29.isCaverphoneEqual("", "1111111111");
        boolean boolean43 = caverphone29.isCaverphoneEqual("", "");
        boolean boolean46 = caverphone29.isCaverphoneEqual("", "");
        java.lang.String str48 = caverphone29.caverphone("");
        boolean boolean51 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.String str53 = caverphone29.caverphone("AA11111111");
        java.lang.String str55 = caverphone29.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = caverphone0.encode((java.lang.Object) caverphone29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        java.lang.String str40 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass41 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.encode("1111111111");
        boolean boolean29 = caverphone16.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str31 = caverphone16.caverphone("hi!");
        java.lang.String str33 = caverphone16.encode("1111111111");
        boolean boolean36 = caverphone16.isCaverphoneEqual("", "AA11111111");
        boolean boolean39 = caverphone16.isCaverphoneEqual("1111111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = caverphone0.encode((java.lang.Object) boolean39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("1111111111", "");
        boolean boolean19 = caverphone13.isCaverphoneEqual("hi!", "hi!");
        boolean boolean22 = caverphone13.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str24 = caverphone13.caverphone("");
        java.lang.String str26 = caverphone13.encode("");
        java.lang.String str28 = caverphone13.encode("1111111111");
        java.lang.String str30 = caverphone13.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.encode("1111111111");
        boolean boolean44 = caverphone31.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str46 = caverphone31.caverphone("hi!");
        java.lang.String str48 = caverphone31.encode("1111111111");
        java.lang.String str50 = caverphone31.caverphone("AA11111111");
        java.lang.Object obj51 = caverphone13.encode((java.lang.Object) str50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = caverphone0.encode((java.lang.Object) caverphone13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "AA11111111" + "'", obj51, "AA11111111");
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str25 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str25 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        java.lang.String str29 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.encode("hi!");
        boolean boolean38 = caverphone30.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str40 = caverphone30.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("AA11111111");
        java.lang.String str48 = caverphone41.caverphone("");
        java.lang.String str50 = caverphone41.encode("hi!");
        java.lang.String str52 = caverphone41.encode("");
        java.lang.Object obj53 = caverphone30.encode((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = caverphone0.encode((java.lang.Object) caverphone30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "1111111111" + "'", obj53, "1111111111");
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("1111111111");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.caverphone("AA11111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass27 = caverphone13.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) wildcardClass27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = caverphone0.encode((java.lang.Object) (-1L));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        boolean boolean10 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        boolean boolean29 = caverphone23.isCaverphoneEqual("", "hi!");
        java.lang.String str31 = caverphone23.caverphone("");
        boolean boolean34 = caverphone23.isCaverphoneEqual("", "1111111111");
        boolean boolean37 = caverphone23.isCaverphoneEqual("", "");
        java.lang.String str39 = caverphone23.caverphone("hi!");
        java.lang.String str41 = caverphone23.caverphone("");
        java.lang.String str43 = caverphone23.caverphone("hi!");
        java.lang.String str45 = caverphone23.encode("");
        java.lang.String str47 = caverphone23.caverphone("AA11111111");
        boolean boolean50 = caverphone23.isCaverphoneEqual("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) boolean50);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str15 = caverphone0.encode("hi!");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("1111111111", "");
        java.lang.String str40 = caverphone35.caverphone("1111111111");
        java.lang.String str42 = caverphone35.encode("");
        java.lang.String str44 = caverphone35.encode("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = caverphone0.encode((java.lang.Object) caverphone35);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        boolean boolean41 = caverphone35.isCaverphoneEqual("", "hi!");
        java.lang.String str43 = caverphone35.caverphone("");
        boolean boolean46 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.String str48 = caverphone35.encode("hi!");
        java.lang.String str50 = caverphone35.encode("");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.caverphone("");
        boolean boolean59 = caverphone51.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj60 = caverphone35.encode((java.lang.Object) "AA11111111");
        boolean boolean63 = caverphone35.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str65 = caverphone35.encode("AA11111111");
        java.lang.Object obj66 = caverphone0.encode((java.lang.Object) str65);
        java.lang.String str68 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass69 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "AA11111111" + "'", obj60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "AA11111111" + "'", obj66, "AA11111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AA11111111" + "'", str68, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("AA11111111");
        boolean boolean45 = caverphone37.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.encode("hi!");
        java.lang.String str53 = caverphone46.caverphone("1111111111");
        java.lang.String str55 = caverphone46.encode("1111111111");
        java.lang.Object obj56 = caverphone37.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone57 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean60 = caverphone57.isCaverphoneEqual("hi!", "");
        boolean boolean63 = caverphone57.isCaverphoneEqual("", "hi!");
        java.lang.String str65 = caverphone57.caverphone("");
        boolean boolean68 = caverphone57.isCaverphoneEqual("", "1111111111");
        java.lang.String str70 = caverphone57.encode("hi!");
        java.lang.String str72 = caverphone57.encode("");
        org.apache.commons.codec.language.Caverphone caverphone73 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean76 = caverphone73.isCaverphoneEqual("hi!", "");
        java.lang.String str78 = caverphone73.caverphone("");
        boolean boolean81 = caverphone73.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj82 = caverphone57.encode((java.lang.Object) "AA11111111");
        boolean boolean85 = caverphone57.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean88 = caverphone57.isCaverphoneEqual("hi!", "");
        java.lang.String str90 = caverphone57.caverphone("1111111111");
        boolean boolean93 = caverphone57.isCaverphoneEqual("", "");
        java.lang.Object obj94 = caverphone37.encode((java.lang.Object) "");
        java.lang.Object obj95 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "1111111111" + "'", obj56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AA11111111" + "'", str70, "AA11111111");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "1111111111" + "'", str78, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "AA11111111" + "'", obj82, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "1111111111" + "'", str90, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + "1111111111" + "'", obj94, "1111111111");
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + "1111111111" + "'", obj95, "1111111111");
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        boolean boolean29 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.String str31 = caverphone16.caverphone("AA11111111");
        boolean boolean34 = caverphone16.isCaverphoneEqual("", "1111111111");
        boolean boolean37 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str39 = caverphone16.encode("1111111111");
        java.lang.String str41 = caverphone16.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("1111111111", "");
        boolean boolean48 = caverphone42.isCaverphoneEqual("hi!", "hi!");
        boolean boolean51 = caverphone42.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str53 = caverphone42.caverphone("");
        java.lang.String str55 = caverphone42.caverphone("hi!");
        java.lang.String str57 = caverphone42.caverphone("hi!");
        java.lang.Object obj58 = caverphone16.encode((java.lang.Object) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        java.lang.String str31 = caverphone18.encode("hi!");
        java.lang.String str33 = caverphone18.encode("");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj43 = caverphone18.encode((java.lang.Object) "AA11111111");
        boolean boolean46 = caverphone18.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str48 = caverphone18.caverphone("hi!");
        java.lang.String str50 = caverphone18.caverphone("");
        java.lang.String str52 = caverphone18.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = caverphone0.encode((java.lang.Object) caverphone18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "AA11111111" + "'", obj43, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.caverphone("");
        boolean boolean18 = caverphone10.isCaverphoneEqual("AA11111111", "");
        java.lang.String str20 = caverphone10.caverphone("AA11111111");
        java.lang.String str22 = caverphone10.caverphone("AA11111111");
        java.lang.String str24 = caverphone10.caverphone("hi!");
        java.lang.String str26 = caverphone10.encode("1111111111");
        boolean boolean29 = caverphone10.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str31 = caverphone10.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = caverphone0.encode((java.lang.Object) caverphone10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.encode("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        boolean boolean40 = caverphone34.isCaverphoneEqual("", "hi!");
        java.lang.String str42 = caverphone34.caverphone("");
        boolean boolean45 = caverphone34.isCaverphoneEqual("", "1111111111");
        java.lang.String str47 = caverphone34.encode("hi!");
        java.lang.String str49 = caverphone34.encode("");
        org.apache.commons.codec.language.Caverphone caverphone50 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean53 = caverphone50.isCaverphoneEqual("hi!", "");
        java.lang.String str55 = caverphone50.caverphone("");
        boolean boolean58 = caverphone50.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj59 = caverphone34.encode((java.lang.Object) "AA11111111");
        boolean boolean62 = caverphone34.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str64 = caverphone34.encode("1111111111");
        java.lang.String str66 = caverphone34.caverphone("1111111111");
        java.lang.Object obj67 = caverphone0.encode((java.lang.Object) str66);
        java.lang.String str69 = caverphone0.encode("AA11111111");
        java.lang.String str71 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "AA11111111" + "'", obj59, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "1111111111" + "'", obj67, "1111111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AA11111111" + "'", str71, "AA11111111");
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.encode("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("1111111111", "");
        boolean boolean37 = caverphone31.isCaverphoneEqual("hi!", "hi!");
        boolean boolean40 = caverphone31.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str42 = caverphone31.caverphone("");
        java.lang.String str44 = caverphone31.encode("");
        java.lang.String str46 = caverphone31.encode("1111111111");
        boolean boolean49 = caverphone31.isCaverphoneEqual("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = caverphone0.encode((java.lang.Object) boolean49);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("");
        boolean boolean33 = caverphone25.isCaverphoneEqual("AA11111111", "");
        java.lang.String str35 = caverphone25.caverphone("AA11111111");
        boolean boolean38 = caverphone25.isCaverphoneEqual("", "1111111111");
        java.lang.String str40 = caverphone25.caverphone("AA11111111");
        boolean boolean43 = caverphone25.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass44 = caverphone25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = caverphone0.encode((java.lang.Object) caverphone25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.caverphone("");
        boolean boolean18 = caverphone10.isCaverphoneEqual("AA11111111", "");
        java.lang.String str20 = caverphone10.encode("1111111111");
        boolean boolean23 = caverphone10.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str25 = caverphone10.encode("AA11111111");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) str25);
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone27.caverphone("");
        boolean boolean38 = caverphone27.isCaverphoneEqual("", "1111111111");
        boolean boolean41 = caverphone27.isCaverphoneEqual("", "");
        boolean boolean44 = caverphone27.isCaverphoneEqual("", "");
        java.lang.String str46 = caverphone27.caverphone("");
        boolean boolean49 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str51 = caverphone27.caverphone("AA11111111");
        java.lang.Object obj52 = caverphone0.encode((java.lang.Object) str51);
        java.lang.String str54 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "AA11111111" + "'", obj52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass31 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.encode("hi!");
        java.lang.String str17 = caverphone10.caverphone("AA11111111");
        java.lang.String str19 = caverphone10.caverphone("hi!");
        java.lang.String str21 = caverphone10.caverphone("hi!");
        java.lang.String str23 = caverphone10.caverphone("1111111111");
        java.lang.Object obj24 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.caverphone("");
        boolean boolean29 = caverphone21.isCaverphoneEqual("AA11111111", "");
        java.lang.String str31 = caverphone21.caverphone("AA11111111");
        boolean boolean34 = caverphone21.isCaverphoneEqual("", "");
        boolean boolean37 = caverphone21.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone21.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone40 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean43 = caverphone40.isCaverphoneEqual("hi!", "");
        java.lang.String str45 = caverphone40.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.encode("hi!");
        java.lang.String str53 = caverphone46.caverphone("1111111111");
        java.lang.String str55 = caverphone46.encode("1111111111");
        java.lang.Object obj56 = caverphone40.encode((java.lang.Object) "1111111111");
        boolean boolean59 = caverphone40.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj60 = caverphone21.encode((java.lang.Object) "AA11111111");
        java.lang.Object obj61 = caverphone0.encode(obj60);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "1111111111" + "'", obj56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "AA11111111" + "'", obj60, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "AA11111111" + "'", obj61, "AA11111111");
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.Object obj32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = caverphone0.encode(obj32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone0.encode("hi!");
        boolean boolean27 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.caverphone("");
        boolean boolean14 = caverphone6.isCaverphoneEqual("AA11111111", "");
        java.lang.String str16 = caverphone6.caverphone("AA11111111");
        boolean boolean19 = caverphone6.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone6.caverphone("AA11111111");
        boolean boolean24 = caverphone6.isCaverphoneEqual("", "1111111111");
        boolean boolean27 = caverphone6.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str29 = caverphone6.encode("1111111111");
        java.lang.String str31 = caverphone6.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("1111111111", "");
        boolean boolean38 = caverphone32.isCaverphoneEqual("hi!", "hi!");
        boolean boolean41 = caverphone32.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str43 = caverphone32.caverphone("");
        java.lang.String str45 = caverphone32.caverphone("hi!");
        java.lang.String str47 = caverphone32.caverphone("hi!");
        java.lang.Object obj48 = caverphone6.encode((java.lang.Object) "hi!");
        java.lang.String str50 = caverphone6.caverphone("");
        java.lang.String str52 = caverphone6.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = caverphone0.encode((java.lang.Object) caverphone6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str26 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass27 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("1111111111");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.encode("1111111111");
        boolean boolean27 = caverphone14.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj29 = caverphone14.encode((java.lang.Object) "AA11111111");
        boolean boolean32 = caverphone14.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone14.caverphone("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "AA11111111" + "'", obj29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.String str12 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.String str21 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass31 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        boolean boolean27 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str29 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone20.isCaverphoneEqual("", "hi!");
        java.lang.String str28 = caverphone20.caverphone("");
        boolean boolean31 = caverphone20.isCaverphoneEqual("", "1111111111");
        boolean boolean34 = caverphone20.isCaverphoneEqual("hi!", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = caverphone0.encode((java.lang.Object) boolean34);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        boolean boolean33 = caverphone20.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj38 = caverphone20.encode((java.lang.Object) "");
        java.lang.String str40 = caverphone20.caverphone("1111111111");
        java.lang.String str42 = caverphone20.encode("hi!");
        java.lang.String str44 = caverphone20.encode("1111111111");
        java.lang.String str46 = caverphone20.encode("AA11111111");
        java.lang.Object obj47 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean15 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass16 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        java.lang.String str17 = caverphone12.caverphone("");
        boolean boolean20 = caverphone12.isCaverphoneEqual("AA11111111", "");
        java.lang.String str22 = caverphone12.caverphone("AA11111111");
        java.lang.String str24 = caverphone12.caverphone("hi!");
        java.lang.String str26 = caverphone12.caverphone("hi!");
        java.lang.Class<?> wildcardClass27 = caverphone12.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) wildcardClass27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("");
        boolean boolean23 = caverphone15.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone15.caverphone("AA11111111");
        boolean boolean28 = caverphone15.isCaverphoneEqual("", "");
        java.lang.String str30 = caverphone15.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = caverphone0.encode((java.lang.Object) caverphone15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.caverphone("AA11111111");
        boolean boolean44 = caverphone31.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean47 = caverphone31.isCaverphoneEqual("1111111111", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = caverphone0.encode((java.lang.Object) caverphone31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.String str20 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.encode("hi!");
        java.lang.String str35 = caverphone28.caverphone("1111111111");
        java.lang.Object obj36 = caverphone21.encode((java.lang.Object) str35);
        java.lang.String str38 = caverphone21.caverphone("1111111111");
        java.lang.Object obj39 = caverphone0.encode((java.lang.Object) str38);
        java.lang.String str41 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass42 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "1111111111" + "'", obj39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("1111111111", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str25 = caverphone17.encode("AA11111111");
        java.lang.String str27 = caverphone17.encode("");
        java.lang.String str29 = caverphone17.caverphone("");
        java.lang.String str31 = caverphone17.caverphone("1111111111");
        java.lang.Object obj32 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone33 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean36 = caverphone33.isCaverphoneEqual("hi!", "");
        boolean boolean39 = caverphone33.isCaverphoneEqual("", "hi!");
        java.lang.String str41 = caverphone33.caverphone("");
        boolean boolean44 = caverphone33.isCaverphoneEqual("", "1111111111");
        java.lang.String str46 = caverphone33.encode("hi!");
        java.lang.String str48 = caverphone33.encode("");
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone49.caverphone("");
        boolean boolean57 = caverphone49.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj58 = caverphone33.encode((java.lang.Object) "AA11111111");
        boolean boolean61 = caverphone33.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str63 = caverphone33.caverphone("hi!");
        java.lang.String str65 = caverphone33.caverphone("hi!");
        java.lang.Class<?> wildcardClass66 = caverphone33.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = caverphone0.encode((java.lang.Object) wildcardClass66);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "1111111111" + "'", obj32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("1111111111", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str36 = caverphone28.encode("AA11111111");
        java.lang.String str38 = caverphone28.encode("");
        java.lang.String str40 = caverphone28.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass42 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("");
        boolean boolean34 = caverphone26.isCaverphoneEqual("AA11111111", "");
        java.lang.String str36 = caverphone26.encode("1111111111");
        boolean boolean39 = caverphone26.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str41 = caverphone26.caverphone("hi!");
        java.lang.String str43 = caverphone26.encode("1111111111");
        boolean boolean46 = caverphone26.isCaverphoneEqual("", "hi!");
        boolean boolean49 = caverphone26.isCaverphoneEqual("AA11111111", "");
        java.lang.String str51 = caverphone26.encode("hi!");
        java.lang.String str53 = caverphone26.encode("");
        java.lang.Object obj54 = caverphone0.encode((java.lang.Object) str53);
        java.lang.String str56 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "1111111111" + "'", obj54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        boolean boolean19 = caverphone13.isCaverphoneEqual("", "hi!");
        java.lang.String str21 = caverphone13.caverphone("");
        boolean boolean24 = caverphone13.isCaverphoneEqual("", "1111111111");
        boolean boolean27 = caverphone13.isCaverphoneEqual("", "");
        java.lang.String str29 = caverphone13.caverphone("hi!");
        java.lang.String str31 = caverphone13.caverphone("");
        java.lang.String str33 = caverphone13.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        boolean boolean37 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.Class<?> wildcardClass38 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        boolean boolean28 = caverphone22.isCaverphoneEqual("", "hi!");
        java.lang.String str30 = caverphone22.caverphone("");
        boolean boolean33 = caverphone22.isCaverphoneEqual("", "1111111111");
        java.lang.String str35 = caverphone22.encode("hi!");
        java.lang.String str37 = caverphone22.encode("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj47 = caverphone22.encode((java.lang.Object) "AA11111111");
        java.lang.String str49 = caverphone22.caverphone("AA11111111");
        java.lang.String str51 = caverphone22.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone52 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean55 = caverphone52.isCaverphoneEqual("1111111111", "");
        boolean boolean58 = caverphone52.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str60 = caverphone52.caverphone("AA11111111");
        boolean boolean63 = caverphone52.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj64 = caverphone22.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = caverphone0.encode(obj64);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "1111111111" + "'", obj21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "AA11111111" + "'", obj64, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "AA11111111" + "'", obj66, "AA11111111");
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str13 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.caverphone("AA11111111");
        java.lang.String str48 = caverphone36.caverphone("AA11111111");
        java.lang.String str50 = caverphone36.caverphone("hi!");
        java.lang.String str52 = caverphone36.caverphone("1111111111");
        java.lang.String str54 = caverphone36.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone55 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean58 = caverphone55.isCaverphoneEqual("hi!", "");
        java.lang.String str60 = caverphone55.caverphone("");
        boolean boolean63 = caverphone55.isCaverphoneEqual("AA11111111", "");
        java.lang.String str65 = caverphone55.caverphone("AA11111111");
        java.lang.String str67 = caverphone55.caverphone("AA11111111");
        java.lang.String str69 = caverphone55.caverphone("hi!");
        java.lang.Object obj70 = caverphone36.encode((java.lang.Object) "hi!");
        java.lang.String str72 = caverphone36.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = caverphone0.encode((java.lang.Object) caverphone36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "AA11111111" + "'", obj70, "AA11111111");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "AA11111111" + "'", str72, "AA11111111");
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str38 = caverphone36.caverphone("1111111111");
        java.lang.String str40 = caverphone36.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        java.lang.String str43 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass44 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass10 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str16 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.encode("hi!");
        java.lang.String str35 = caverphone28.caverphone("");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.String str47 = caverphone37.caverphone("AA11111111");
        boolean boolean50 = caverphone37.isCaverphoneEqual("", "1111111111");
        java.lang.String str52 = caverphone37.caverphone("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = caverphone0.encode((java.lang.Object) caverphone37);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("1111111111", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str36 = caverphone28.encode("AA11111111");
        java.lang.String str38 = caverphone28.encode("");
        java.lang.String str40 = caverphone28.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str43 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        boolean boolean27 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str29 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        boolean boolean7 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "");
        java.lang.String str23 = caverphone8.caverphone("");
        java.lang.String str25 = caverphone8.encode("1111111111");
        java.lang.String str27 = caverphone8.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) caverphone8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone0.encode("hi!");
        java.lang.String str27 = caverphone0.encode("");
        java.lang.String str29 = caverphone0.encode("");
        java.lang.String str31 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("1111111111");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        java.lang.String str13 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        java.lang.String str37 = caverphone0.encode("");
        boolean boolean40 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Class<?> wildcardClass41 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str15 = caverphone0.encode("hi!");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.String str21 = caverphone0.caverphone("AA11111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone0.encode("hi!");
        java.lang.String str27 = caverphone0.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = caverphone0.encode((java.lang.Object) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        boolean boolean19 = caverphone13.isCaverphoneEqual("", "hi!");
        java.lang.String str21 = caverphone13.caverphone("");
        boolean boolean24 = caverphone13.isCaverphoneEqual("", "1111111111");
        boolean boolean27 = caverphone13.isCaverphoneEqual("", "");
        java.lang.String str29 = caverphone13.caverphone("hi!");
        java.lang.String str31 = caverphone13.caverphone("");
        java.lang.String str33 = caverphone13.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        boolean boolean37 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean40 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.caverphone("AA11111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("", "");
        java.lang.String str28 = caverphone13.caverphone("");
        boolean boolean31 = caverphone13.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Class<?> wildcardClass32 = caverphone13.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = caverphone0.encode((java.lang.Object) wildcardClass32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str15 = caverphone13.caverphone("1111111111");
        java.lang.String str17 = caverphone13.encode("AA11111111");
        java.lang.String str19 = caverphone13.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = caverphone0.encode((java.lang.Object) caverphone13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str27 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass28 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("");
        java.lang.String str36 = caverphone25.caverphone("AA11111111");
        java.lang.String str38 = caverphone25.encode("");
        boolean boolean41 = caverphone25.isCaverphoneEqual("1111111111", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = caverphone0.encode((java.lang.Object) boolean41);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str26 = caverphone0.encode("1111111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str31 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("AA11111111");
        java.lang.String str34 = caverphone0.caverphone("AA11111111");
        java.lang.String str36 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str39 = caverphone37.encode("hi!");
        java.lang.Class<?> wildcardClass40 = caverphone37.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = caverphone0.encode((java.lang.Object) wildcardClass40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.encode("1111111111");
        boolean boolean29 = caverphone16.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str31 = caverphone16.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone32.caverphone("AA11111111");
        java.lang.String str44 = caverphone32.caverphone("AA11111111");
        java.lang.String str46 = caverphone32.caverphone("hi!");
        java.lang.String str48 = caverphone32.caverphone("1111111111");
        java.lang.String str50 = caverphone32.encode("1111111111");
        java.lang.Object obj51 = caverphone16.encode((java.lang.Object) str50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.String str24 = caverphone0.encode("1111111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        java.lang.String str28 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("");
        boolean boolean37 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone29.caverphone("AA11111111");
        boolean boolean42 = caverphone29.isCaverphoneEqual("", "");
        java.lang.String str44 = caverphone29.encode("1111111111");
        java.lang.String str46 = caverphone29.caverphone("hi!");
        java.lang.String str48 = caverphone29.encode("");
        java.lang.Object obj49 = caverphone0.encode((java.lang.Object) str48);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "1111111111" + "'", obj49, "1111111111");
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone0.caverphone("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("");
        boolean boolean19 = caverphone11.isCaverphoneEqual("AA11111111", "");
        java.lang.String str21 = caverphone11.caverphone("AA11111111");
        java.lang.String str23 = caverphone11.caverphone("AA11111111");
        java.lang.String str25 = caverphone11.caverphone("hi!");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.encode("1111111111");
        java.lang.String str20 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        java.lang.String str29 = caverphone21.caverphone("");
        boolean boolean32 = caverphone21.isCaverphoneEqual("", "1111111111");
        boolean boolean35 = caverphone21.isCaverphoneEqual("", "");
        boolean boolean38 = caverphone21.isCaverphoneEqual("", "");
        java.lang.String str40 = caverphone21.caverphone("");
        java.lang.Class<?> wildcardClass41 = caverphone21.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = caverphone0.encode((java.lang.Object) caverphone21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str27 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass28 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("1111111111", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str26 = caverphone18.encode("AA11111111");
        java.lang.String str28 = caverphone18.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = caverphone0.encode((java.lang.Object) caverphone18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("hi!");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str21 = caverphone0.encode("AA11111111");
        java.lang.String str23 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.encode("hi!");
        boolean boolean13 = caverphone5.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str15 = caverphone5.encode("AA11111111");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "AA11111111" + "'", obj16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str28 = caverphone26.caverphone("1111111111");
        java.lang.String str30 = caverphone26.caverphone("1111111111");
        java.lang.String str32 = caverphone26.caverphone("AA11111111");
        java.lang.Object obj33 = caverphone20.encode((java.lang.Object) str32);
        java.lang.String str35 = caverphone20.encode("1111111111");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass37 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone0.caverphone("AA11111111");
        java.lang.String str22 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("1111111111", "");
        boolean boolean28 = caverphone22.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str30 = caverphone22.encode("");
        java.lang.String str32 = caverphone22.caverphone("");
        java.lang.Class<?> wildcardClass33 = caverphone22.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = caverphone0.encode((java.lang.Object) caverphone22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass10 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass35 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("");
        java.lang.String str23 = caverphone0.encode("1111111111");
        java.lang.String str25 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("");
        boolean boolean37 = caverphone26.isCaverphoneEqual("", "1111111111");
        java.lang.String str39 = caverphone26.encode("hi!");
        java.lang.String str41 = caverphone26.encode("");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        java.lang.String str47 = caverphone42.caverphone("");
        boolean boolean50 = caverphone42.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj51 = caverphone26.encode((java.lang.Object) "AA11111111");
        java.lang.String str53 = caverphone26.caverphone("AA11111111");
        java.lang.String str55 = caverphone26.encode("hi!");
        boolean boolean58 = caverphone26.isCaverphoneEqual("1111111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "AA11111111" + "'", obj51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone38.caverphone("");
        boolean boolean49 = caverphone38.isCaverphoneEqual("", "1111111111");
        boolean boolean52 = caverphone38.isCaverphoneEqual("", "");
        boolean boolean55 = caverphone38.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str57 = caverphone38.encode("AA11111111");
        java.lang.String str59 = caverphone38.encode("1111111111");
        java.lang.Object obj60 = caverphone0.encode((java.lang.Object) str59);
        java.lang.String str62 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass63 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("", "hi!");
        java.lang.String str36 = caverphone28.caverphone("");
        boolean boolean39 = caverphone28.isCaverphoneEqual("", "1111111111");
        java.lang.String str41 = caverphone28.encode("hi!");
        java.lang.String str43 = caverphone28.encode("");
        org.apache.commons.codec.language.Caverphone caverphone44 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean47 = caverphone44.isCaverphoneEqual("hi!", "");
        java.lang.String str49 = caverphone44.caverphone("");
        boolean boolean52 = caverphone44.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj53 = caverphone28.encode((java.lang.Object) "AA11111111");
        boolean boolean56 = caverphone28.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str58 = caverphone28.caverphone("hi!");
        boolean boolean61 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str63 = caverphone28.caverphone("");
        java.lang.String str65 = caverphone28.caverphone("");
        java.lang.Object obj66 = caverphone0.encode((java.lang.Object) str65);
        java.lang.String str68 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "AA11111111" + "'", obj53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "1111111111" + "'", obj66, "1111111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone33 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean36 = caverphone33.isCaverphoneEqual("hi!", "");
        java.lang.String str38 = caverphone33.encode("hi!");
        java.lang.String str40 = caverphone33.caverphone("1111111111");
        java.lang.Object obj41 = caverphone26.encode((java.lang.Object) str40);
        java.lang.String str43 = caverphone26.caverphone("1111111111");
        java.lang.String str45 = caverphone26.encode("hi!");
        java.lang.String str47 = caverphone26.encode("");
        java.lang.String str49 = caverphone26.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        java.lang.String str28 = caverphone16.caverphone("hi!");
        java.lang.String str30 = caverphone16.encode("AA11111111");
        java.lang.String str32 = caverphone16.caverphone("AA11111111");
        java.lang.String str34 = caverphone16.caverphone("1111111111");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone38.caverphone("");
        boolean boolean49 = caverphone38.isCaverphoneEqual("", "1111111111");
        boolean boolean52 = caverphone38.isCaverphoneEqual("", "");
        boolean boolean55 = caverphone38.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str57 = caverphone38.encode("AA11111111");
        java.lang.String str59 = caverphone38.encode("1111111111");
        java.lang.Object obj60 = caverphone0.encode((java.lang.Object) str59);
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone4 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean7 = caverphone4.isCaverphoneEqual("hi!", "");
        java.lang.String str9 = caverphone4.caverphone("AA11111111");
        java.lang.String str11 = caverphone4.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        java.lang.String str17 = caverphone12.caverphone("");
        boolean boolean20 = caverphone12.isCaverphoneEqual("AA11111111", "");
        java.lang.String str22 = caverphone12.caverphone("AA11111111");
        boolean boolean25 = caverphone12.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj26 = caverphone4.encode((java.lang.Object) "");
        java.lang.String str28 = caverphone4.caverphone("");
        java.lang.String str30 = caverphone4.caverphone("AA11111111");
        java.lang.String str32 = caverphone4.caverphone("1111111111");
        boolean boolean35 = caverphone4.isCaverphoneEqual("hi!", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = caverphone0.encode((java.lang.Object) caverphone4);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "1111111111" + "'", obj26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = caverphone0.encode((java.lang.Object) (-1L));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.Object obj21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = caverphone0.encode(obj21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.caverphone("AA11111111");
        java.lang.String str46 = caverphone34.caverphone("hi!");
        java.lang.String str48 = caverphone34.caverphone("hi!");
        java.lang.String str50 = caverphone34.encode("1111111111");
        boolean boolean53 = caverphone34.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj55 = caverphone34.encode((java.lang.Object) "");
        java.lang.Object obj56 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "1111111111" + "'", obj56, "1111111111");
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.caverphone("AA11111111");
        java.lang.String str34 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.encode("hi!");
        java.lang.String str17 = caverphone10.caverphone("AA11111111");
        java.lang.String str19 = caverphone10.caverphone("hi!");
        java.lang.String str21 = caverphone10.caverphone("hi!");
        java.lang.String str23 = caverphone10.caverphone("1111111111");
        java.lang.Object obj24 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.caverphone("");
        boolean boolean18 = caverphone10.isCaverphoneEqual("AA11111111", "");
        java.lang.String str20 = caverphone10.caverphone("AA11111111");
        boolean boolean23 = caverphone10.isCaverphoneEqual("", "1111111111");
        java.lang.String str25 = caverphone10.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("");
        boolean boolean37 = caverphone26.isCaverphoneEqual("", "1111111111");
        boolean boolean40 = caverphone26.isCaverphoneEqual("", "");
        java.lang.String str42 = caverphone26.caverphone("hi!");
        java.lang.String str44 = caverphone26.caverphone("");
        java.lang.String str46 = caverphone26.caverphone("hi!");
        java.lang.String str48 = caverphone26.encode("");
        java.lang.String str50 = caverphone26.caverphone("AA11111111");
        java.lang.Object obj51 = caverphone10.encode((java.lang.Object) str50);
        java.lang.String str53 = caverphone10.caverphone("hi!");
        java.lang.Class<?> wildcardClass54 = caverphone10.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = caverphone0.encode((java.lang.Object) wildcardClass54);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "AA11111111" + "'", obj51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("");
        boolean boolean31 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str33 = caverphone23.encode("1111111111");
        boolean boolean36 = caverphone23.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj41 = caverphone23.encode((java.lang.Object) "");
        java.lang.String str43 = caverphone23.caverphone("1111111111");
        boolean boolean46 = caverphone23.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str48 = caverphone23.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = caverphone0.encode((java.lang.Object) caverphone23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone21.caverphone("1111111111");
        java.lang.String str28 = caverphone21.encode("");
        java.lang.String str30 = caverphone21.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.encode("1111111111");
        boolean boolean44 = caverphone31.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str46 = caverphone31.encode("AA11111111");
        java.lang.Object obj47 = caverphone21.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) str46);
        java.lang.Class<?> wildcardClass49 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone32.caverphone("AA11111111");
        java.lang.String str44 = caverphone32.caverphone("AA11111111");
        java.lang.String str46 = caverphone32.caverphone("hi!");
        java.lang.String str48 = caverphone32.encode("1111111111");
        boolean boolean51 = caverphone32.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass52 = caverphone32.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = caverphone0.encode((java.lang.Object) wildcardClass52);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        boolean boolean7 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass8 = caverphone0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str22 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("");
        boolean boolean31 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        boolean boolean36 = caverphone23.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str38 = caverphone23.encode("hi!");
        java.lang.Class<?> wildcardClass39 = caverphone23.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = caverphone0.encode((java.lang.Object) wildcardClass39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        java.lang.String str25 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.String str12 = caverphone0.encode("AA11111111");
        java.lang.String str14 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("");
        boolean boolean37 = caverphone26.isCaverphoneEqual("", "1111111111");
        java.lang.String str39 = caverphone26.encode("hi!");
        java.lang.String str41 = caverphone26.encode("");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        java.lang.String str47 = caverphone42.caverphone("");
        boolean boolean50 = caverphone42.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj51 = caverphone26.encode((java.lang.Object) "AA11111111");
        java.lang.String str53 = caverphone26.caverphone("AA11111111");
        java.lang.String str55 = caverphone26.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone56 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean59 = caverphone56.isCaverphoneEqual("1111111111", "");
        boolean boolean62 = caverphone56.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str64 = caverphone56.encode("");
        java.lang.String str66 = caverphone56.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone67 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean70 = caverphone67.isCaverphoneEqual("hi!", "");
        java.lang.String str72 = caverphone67.caverphone("AA11111111");
        java.lang.String str74 = caverphone67.caverphone("");
        java.lang.String str76 = caverphone67.encode("hi!");
        java.lang.Object obj77 = caverphone56.encode((java.lang.Object) str76);
        boolean boolean80 = caverphone56.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj81 = caverphone26.encode((java.lang.Object) "1111111111");
        java.lang.String str83 = caverphone26.encode("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj84 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "AA11111111" + "'", obj51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AA11111111" + "'", str66, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "AA11111111" + "'", str72, "AA11111111");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "1111111111" + "'", str74, "1111111111");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "AA11111111" + "'", str76, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "AA11111111" + "'", obj77, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "1111111111" + "'", obj81, "1111111111");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "AA11111111" + "'", str83, "AA11111111");
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("");
        boolean boolean37 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj38 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str40 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass41 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "AA11111111" + "'", obj38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone0.caverphone("");
        boolean boolean41 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("1111111111", "");
        boolean boolean48 = caverphone42.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str50 = caverphone42.encode("AA11111111");
        java.lang.String str52 = caverphone42.encode("");
        java.lang.String str54 = caverphone42.caverphone("");
        java.lang.String str56 = caverphone42.caverphone("1111111111");
        java.lang.String str58 = caverphone42.encode("1111111111");
        java.lang.String str60 = caverphone42.encode("AA11111111");
        java.lang.Object obj61 = caverphone0.encode((java.lang.Object) str60);
        java.lang.Class<?> wildcardClass62 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "AA11111111" + "'", obj61, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str29 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass30 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone8.encode("hi!");
        java.lang.String str23 = caverphone8.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("1111111111", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone24.encode("AA11111111");
        java.lang.Object obj33 = caverphone8.encode((java.lang.Object) "AA11111111");
        java.lang.String str35 = caverphone8.encode("");
        boolean boolean38 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone8.encode("hi!");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass42 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        boolean boolean11 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("", "hi!");
        boolean boolean21 = caverphone12.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Class<?> wildcardClass22 = caverphone12.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = caverphone0.encode((java.lang.Object) caverphone12);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("hi!");
        java.lang.String str27 = caverphone0.caverphone("");
        java.lang.Object obj28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = caverphone0.encode(obj28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str15 = caverphone0.encode("hi!");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.String str21 = caverphone0.encode("hi!");
        boolean boolean24 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.encode("hi!");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("AA11111111");
        boolean boolean34 = caverphone26.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.encode("hi!");
        java.lang.String str42 = caverphone35.caverphone("1111111111");
        java.lang.String str44 = caverphone35.encode("1111111111");
        java.lang.Object obj45 = caverphone26.encode((java.lang.Object) "1111111111");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass47 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "1111111111" + "'", obj46, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("1111111111", "");
        boolean boolean19 = caverphone13.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str21 = caverphone13.encode("AA11111111");
        java.lang.String str23 = caverphone13.encode("");
        java.lang.String str25 = caverphone13.caverphone("1111111111");
        java.lang.String str27 = caverphone13.caverphone("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) caverphone13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.encode("hi!");
        java.lang.String str22 = caverphone15.caverphone("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.Class<?> wildcardClass27 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        java.lang.String str28 = caverphone16.caverphone("AA11111111");
        java.lang.String str30 = caverphone16.caverphone("hi!");
        java.lang.String str32 = caverphone16.caverphone("1111111111");
        java.lang.String str34 = caverphone16.encode("1111111111");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str15 = caverphone0.encode("hi!");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass16 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.String str20 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.encode("hi!");
        java.lang.String str35 = caverphone28.caverphone("1111111111");
        java.lang.Object obj36 = caverphone21.encode((java.lang.Object) str35);
        java.lang.String str38 = caverphone21.caverphone("1111111111");
        java.lang.Object obj39 = caverphone0.encode((java.lang.Object) str38);
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "1111111111" + "'", obj39, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        boolean boolean41 = caverphone35.isCaverphoneEqual("", "hi!");
        java.lang.String str43 = caverphone35.caverphone("");
        boolean boolean46 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.String str48 = caverphone35.encode("hi!");
        java.lang.String str50 = caverphone35.encode("");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.caverphone("");
        boolean boolean59 = caverphone51.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj60 = caverphone35.encode((java.lang.Object) "AA11111111");
        boolean boolean63 = caverphone35.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str65 = caverphone35.encode("AA11111111");
        java.lang.Object obj66 = caverphone0.encode((java.lang.Object) str65);
        org.apache.commons.codec.language.Caverphone caverphone67 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean70 = caverphone67.isCaverphoneEqual("hi!", "");
        java.lang.String str72 = caverphone67.encode("hi!");
        java.lang.String str74 = caverphone67.caverphone("hi!");
        java.lang.String str76 = caverphone67.caverphone("hi!");
        java.lang.String str78 = caverphone67.caverphone("1111111111");
        boolean boolean81 = caverphone67.isCaverphoneEqual("hi!", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone82 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean85 = caverphone82.isCaverphoneEqual("hi!", "");
        java.lang.String str87 = caverphone82.caverphone("");
        boolean boolean90 = caverphone82.isCaverphoneEqual("AA11111111", "");
        java.lang.String str92 = caverphone82.encode("1111111111");
        boolean boolean95 = caverphone82.isCaverphoneEqual("AA11111111", "");
        java.lang.String str97 = caverphone82.caverphone("1111111111");
        java.lang.Object obj98 = caverphone67.encode((java.lang.Object) "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = caverphone0.encode((java.lang.Object) caverphone67);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "AA11111111" + "'", obj60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "AA11111111" + "'", obj66, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "AA11111111" + "'", str72, "AA11111111");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "AA11111111" + "'", str74, "AA11111111");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "AA11111111" + "'", str76, "AA11111111");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "1111111111" + "'", str78, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "1111111111" + "'", str87, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "1111111111" + "'", str92, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "1111111111" + "'", str97, "1111111111");
        org.junit.Assert.assertEquals("'" + obj98 + "' != '" + "1111111111" + "'", obj98, "1111111111");
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        boolean boolean45 = caverphone39.isCaverphoneEqual("", "hi!");
        boolean boolean48 = caverphone39.isCaverphoneEqual("hi!", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = caverphone0.encode((java.lang.Object) caverphone39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("1111111111");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        java.lang.String str28 = caverphone16.caverphone("AA11111111");
        java.lang.Object obj29 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "AA11111111" + "'", obj29, "AA11111111");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        boolean boolean31 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.caverphone("AA11111111");
        java.lang.String str42 = caverphone35.caverphone("");
        java.lang.String str44 = caverphone35.encode("hi!");
        java.lang.Object obj45 = caverphone0.encode((java.lang.Object) str44);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "AA11111111" + "'", obj45, "AA11111111");
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("");
        java.lang.Object obj19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = caverphone0.encode(obj19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("1111111111");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("", "hi!");
        java.lang.String str22 = caverphone14.caverphone("");
        boolean boolean25 = caverphone14.isCaverphoneEqual("", "1111111111");
        java.lang.String str27 = caverphone14.encode("hi!");
        java.lang.String str29 = caverphone14.encode("");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.caverphone("");
        boolean boolean38 = caverphone30.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj39 = caverphone14.encode((java.lang.Object) "AA11111111");
        boolean boolean42 = caverphone14.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str44 = caverphone14.encode("1111111111");
        boolean boolean47 = caverphone14.isCaverphoneEqual("", "AA11111111");
        boolean boolean50 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "AA11111111" + "'", obj39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("AA11111111");
        java.lang.String str26 = caverphone19.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("AA11111111");
        boolean boolean35 = caverphone27.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.encode("hi!");
        java.lang.String str43 = caverphone36.caverphone("1111111111");
        java.lang.String str45 = caverphone36.encode("1111111111");
        java.lang.Object obj46 = caverphone27.encode((java.lang.Object) "1111111111");
        java.lang.String str48 = caverphone27.caverphone("1111111111");
        boolean boolean51 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.Object obj52 = caverphone19.encode((java.lang.Object) "hi!");
        boolean boolean55 = caverphone19.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean58 = caverphone19.isCaverphoneEqual("", "");
        boolean boolean61 = caverphone19.isCaverphoneEqual("", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = caverphone0.encode((java.lang.Object) boolean61);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "1111111111" + "'", obj46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "AA11111111" + "'", obj52, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str30 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.caverphone("AA11111111");
        boolean boolean44 = caverphone31.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str46 = caverphone31.encode("hi!");
        java.lang.String str48 = caverphone31.caverphone("hi!");
        java.lang.String str50 = caverphone31.caverphone("");
        java.lang.String str52 = caverphone31.caverphone("AA11111111");
        boolean boolean55 = caverphone31.isCaverphoneEqual("hi!", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = caverphone0.encode((java.lang.Object) boolean55);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str38 = caverphone36.caverphone("1111111111");
        java.lang.String str40 = caverphone36.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        boolean boolean44 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.Class<?> wildcardClass45 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("", "hi!");
        java.lang.String str36 = caverphone28.caverphone("");
        boolean boolean39 = caverphone28.isCaverphoneEqual("", "1111111111");
        java.lang.String str41 = caverphone28.encode("hi!");
        java.lang.String str43 = caverphone28.encode("");
        org.apache.commons.codec.language.Caverphone caverphone44 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean47 = caverphone44.isCaverphoneEqual("hi!", "");
        java.lang.String str49 = caverphone44.caverphone("");
        boolean boolean52 = caverphone44.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj53 = caverphone28.encode((java.lang.Object) "AA11111111");
        boolean boolean56 = caverphone28.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str58 = caverphone28.caverphone("hi!");
        boolean boolean61 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str63 = caverphone28.caverphone("");
        java.lang.String str65 = caverphone28.caverphone("");
        java.lang.Object obj66 = caverphone0.encode((java.lang.Object) str65);
        org.apache.commons.codec.language.Caverphone caverphone67 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean70 = caverphone67.isCaverphoneEqual("hi!", "");
        java.lang.String str72 = caverphone67.caverphone("");
        boolean boolean75 = caverphone67.isCaverphoneEqual("AA11111111", "");
        java.lang.String str77 = caverphone67.caverphone("AA11111111");
        java.lang.String str79 = caverphone67.caverphone("hi!");
        java.lang.String str81 = caverphone67.caverphone("hi!");
        java.lang.String str83 = caverphone67.encode("1111111111");
        boolean boolean86 = caverphone67.isCaverphoneEqual("", "");
        java.lang.String str88 = caverphone67.caverphone("1111111111");
        java.lang.Object obj89 = caverphone0.encode((java.lang.Object) str88);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "AA11111111" + "'", obj53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "1111111111" + "'", obj66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "AA11111111" + "'", str77, "AA11111111");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "AA11111111" + "'", str79, "AA11111111");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AA11111111" + "'", str81, "AA11111111");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "1111111111" + "'", str83, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "1111111111" + "'", str88, "1111111111");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "1111111111" + "'", obj89, "1111111111");
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str20 = caverphone0.encode("1111111111");
        java.lang.Object obj21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = caverphone0.encode(obj21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        java.lang.String str27 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        java.lang.String str34 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.String str21 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Class<?> wildcardClass32 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        java.lang.String str28 = caverphone16.caverphone("AA11111111");
        java.lang.String str30 = caverphone16.caverphone("hi!");
        java.lang.String str32 = caverphone16.caverphone("1111111111");
        java.lang.String str34 = caverphone16.encode("1111111111");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        boolean boolean38 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone0.encode("hi!");
        java.lang.String str42 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("");
        java.lang.Object obj16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = caverphone0.encode(obj16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.caverphone("");
        boolean boolean17 = caverphone9.isCaverphoneEqual("AA11111111", "");
        java.lang.String str19 = caverphone9.caverphone("AA11111111");
        java.lang.String str21 = caverphone9.caverphone("AA11111111");
        java.lang.String str23 = caverphone9.encode("hi!");
        java.lang.String str25 = caverphone9.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = caverphone0.encode((java.lang.Object) caverphone9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone12.caverphone("");
        boolean boolean23 = caverphone12.isCaverphoneEqual("", "1111111111");
        java.lang.String str25 = caverphone12.encode("hi!");
        java.lang.String str27 = caverphone12.encode("");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj37 = caverphone12.encode((java.lang.Object) "AA11111111");
        boolean boolean40 = caverphone12.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str43 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "AA11111111" + "'", obj37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        java.lang.String str38 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone39.caverphone("");
        boolean boolean47 = caverphone39.isCaverphoneEqual("AA11111111", "");
        java.lang.String str49 = caverphone39.caverphone("AA11111111");
        boolean boolean52 = caverphone39.isCaverphoneEqual("", "");
        java.lang.String str54 = caverphone39.encode("1111111111");
        java.lang.String str56 = caverphone39.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = caverphone0.encode((java.lang.Object) caverphone39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("1111111111", "");
        boolean boolean16 = caverphone10.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str18 = caverphone10.encode("AA11111111");
        java.lang.String str20 = caverphone10.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = caverphone0.encode((java.lang.Object) caverphone10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("hi!");
        java.lang.String str27 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("1111111111", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str36 = caverphone28.encode("");
        java.lang.String str38 = caverphone28.encode("hi!");
        boolean boolean41 = caverphone28.isCaverphoneEqual("", "1111111111");
        java.lang.String str43 = caverphone28.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = caverphone0.encode((java.lang.Object) caverphone28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        boolean boolean5 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        boolean boolean12 = caverphone6.isCaverphoneEqual("", "hi!");
        java.lang.String str14 = caverphone6.caverphone("");
        boolean boolean17 = caverphone6.isCaverphoneEqual("", "1111111111");
        java.lang.String str19 = caverphone6.encode("hi!");
        java.lang.String str21 = caverphone6.encode("");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.caverphone("");
        boolean boolean30 = caverphone22.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj31 = caverphone6.encode((java.lang.Object) "AA11111111");
        boolean boolean34 = caverphone6.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone6.encode("1111111111");
        java.lang.String str38 = caverphone6.caverphone("AA11111111");
        java.lang.String str40 = caverphone6.caverphone("AA11111111");
        java.lang.String str42 = caverphone6.encode("1111111111");
        java.lang.Object obj43 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str45 = caverphone0.caverphone("");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "AA11111111" + "'", obj31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.encode("1111111111");
        boolean boolean47 = caverphone34.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj52 = caverphone34.encode((java.lang.Object) "");
        java.lang.String str54 = caverphone34.caverphone("1111111111");
        java.lang.String str56 = caverphone34.encode("hi!");
        java.lang.String str58 = caverphone34.caverphone("1111111111");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) str58);
        org.apache.commons.codec.language.Caverphone caverphone60 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean63 = caverphone60.isCaverphoneEqual("1111111111", "");
        java.lang.String str65 = caverphone60.caverphone("1111111111");
        java.lang.String str67 = caverphone60.encode("");
        boolean boolean70 = caverphone60.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj71 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str73 = caverphone0.encode("1111111111");
        boolean boolean76 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1111111111" + "'", str73, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str35 = caverphone0.caverphone("AA11111111");
        java.lang.String str37 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        boolean boolean41 = caverphone35.isCaverphoneEqual("", "hi!");
        java.lang.String str43 = caverphone35.caverphone("");
        boolean boolean46 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.String str48 = caverphone35.encode("hi!");
        java.lang.String str50 = caverphone35.encode("");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.caverphone("");
        boolean boolean59 = caverphone51.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj60 = caverphone35.encode((java.lang.Object) "AA11111111");
        boolean boolean63 = caverphone35.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str65 = caverphone35.encode("AA11111111");
        java.lang.Object obj66 = caverphone0.encode((java.lang.Object) str65);
        java.lang.String str68 = caverphone0.caverphone("AA11111111");
        java.lang.String str70 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "AA11111111" + "'", obj60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "AA11111111" + "'", obj66, "AA11111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AA11111111" + "'", str68, "AA11111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone20.isCaverphoneEqual("", "hi!");
        java.lang.String str28 = caverphone20.caverphone("");
        boolean boolean31 = caverphone20.isCaverphoneEqual("", "1111111111");
        boolean boolean34 = caverphone20.isCaverphoneEqual("", "");
        boolean boolean37 = caverphone20.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str39 = caverphone20.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = caverphone0.encode((java.lang.Object) caverphone20);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.caverphone("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        java.lang.String str18 = caverphone11.caverphone("");
        java.lang.String str20 = caverphone11.encode("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone0.encode("hi!");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.encode("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("AA11111111");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        java.lang.String str24 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("hi!");
        java.lang.String str34 = caverphone25.caverphone("hi!");
        java.lang.Class<?> wildcardClass35 = caverphone25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = caverphone0.encode((java.lang.Object) caverphone25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str15 = caverphone0.encode("hi!");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.String str21 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        boolean boolean28 = caverphone22.isCaverphoneEqual("", "hi!");
        java.lang.String str30 = caverphone22.caverphone("");
        boolean boolean33 = caverphone22.isCaverphoneEqual("", "1111111111");
        java.lang.String str35 = caverphone22.encode("hi!");
        java.lang.String str37 = caverphone22.encode("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj47 = caverphone22.encode((java.lang.Object) "AA11111111");
        boolean boolean50 = caverphone22.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str52 = caverphone22.caverphone("hi!");
        boolean boolean55 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str57 = caverphone22.caverphone("");
        java.lang.String str59 = caverphone22.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone60 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean63 = caverphone60.isCaverphoneEqual("hi!", "");
        boolean boolean66 = caverphone60.isCaverphoneEqual("", "hi!");
        java.lang.String str68 = caverphone60.caverphone("");
        boolean boolean71 = caverphone60.isCaverphoneEqual("", "1111111111");
        boolean boolean74 = caverphone60.isCaverphoneEqual("", "");
        boolean boolean77 = caverphone60.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str79 = caverphone60.encode("AA11111111");
        java.lang.String str81 = caverphone60.encode("1111111111");
        java.lang.Object obj82 = caverphone22.encode((java.lang.Object) str81);
        java.lang.String str84 = caverphone22.caverphone("1111111111");
        java.lang.String str86 = caverphone22.caverphone("");
        java.lang.String str88 = caverphone22.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = caverphone0.encode((java.lang.Object) caverphone22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "AA11111111" + "'", str79, "AA11111111");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "1111111111" + "'", str81, "1111111111");
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "1111111111" + "'", obj82, "1111111111");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "1111111111" + "'", str84, "1111111111");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "1111111111" + "'", str86, "1111111111");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "AA11111111" + "'", str88, "AA11111111");
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone20.isCaverphoneEqual("", "hi!");
        java.lang.String str28 = caverphone20.caverphone("");
        boolean boolean31 = caverphone20.isCaverphoneEqual("", "1111111111");
        java.lang.String str33 = caverphone20.encode("hi!");
        java.lang.String str35 = caverphone20.encode("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj45 = caverphone20.encode((java.lang.Object) "AA11111111");
        boolean boolean48 = caverphone20.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str50 = caverphone20.encode("1111111111");
        boolean boolean53 = caverphone20.isCaverphoneEqual("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = caverphone0.encode((java.lang.Object) caverphone20);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "AA11111111" + "'", obj45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.encode("");
        boolean boolean12 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str14 = caverphone0.encode("");
        java.lang.String str16 = caverphone0.encode("");
        java.lang.String str18 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str12 = caverphone10.caverphone("1111111111");
        java.lang.String str14 = caverphone10.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("AA11111111");
        boolean boolean23 = caverphone15.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.encode("hi!");
        java.lang.String str31 = caverphone24.caverphone("1111111111");
        java.lang.String str33 = caverphone24.encode("1111111111");
        java.lang.Object obj34 = caverphone15.encode((java.lang.Object) "1111111111");
        java.lang.String str36 = caverphone15.caverphone("1111111111");
        java.lang.Object obj37 = caverphone10.encode((java.lang.Object) "1111111111");
        boolean boolean40 = caverphone10.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.encode("hi!");
        java.lang.String str48 = caverphone41.caverphone("AA11111111");
        java.lang.String str50 = caverphone41.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.encode("hi!");
        java.lang.String str58 = caverphone51.caverphone("AA11111111");
        java.lang.String str60 = caverphone51.caverphone("hi!");
        java.lang.String str62 = caverphone51.caverphone("hi!");
        java.lang.String str64 = caverphone51.caverphone("1111111111");
        java.lang.Object obj65 = caverphone41.encode((java.lang.Object) "1111111111");
        java.lang.String str67 = caverphone41.encode("AA11111111");
        java.lang.String str69 = caverphone41.caverphone("1111111111");
        java.lang.Object obj70 = caverphone10.encode((java.lang.Object) str69);
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = caverphone0.encode((java.lang.Object) wildcardClass71);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "1111111111" + "'", obj37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "1111111111" + "'", obj65, "1111111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "1111111111" + "'", obj70, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str33 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.encode("");
        boolean boolean12 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str14 = caverphone0.encode("");
        java.lang.String str16 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("");
        boolean boolean25 = caverphone17.isCaverphoneEqual("AA11111111", "");
        java.lang.String str27 = caverphone17.caverphone("AA11111111");
        boolean boolean30 = caverphone17.isCaverphoneEqual("", "1111111111");
        java.lang.String str32 = caverphone17.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone33 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean36 = caverphone33.isCaverphoneEqual("hi!", "");
        boolean boolean39 = caverphone33.isCaverphoneEqual("", "hi!");
        java.lang.String str41 = caverphone33.caverphone("");
        boolean boolean44 = caverphone33.isCaverphoneEqual("", "1111111111");
        boolean boolean47 = caverphone33.isCaverphoneEqual("", "");
        java.lang.String str49 = caverphone33.caverphone("hi!");
        java.lang.String str51 = caverphone33.caverphone("");
        java.lang.String str53 = caverphone33.caverphone("hi!");
        java.lang.String str55 = caverphone33.encode("");
        java.lang.String str57 = caverphone33.caverphone("AA11111111");
        java.lang.Object obj58 = caverphone17.encode((java.lang.Object) str57);
        java.lang.String str60 = caverphone17.caverphone("hi!");
        java.lang.String str62 = caverphone17.caverphone("1111111111");
        java.lang.Object obj63 = caverphone0.encode((java.lang.Object) str62);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "1111111111" + "'", obj63, "1111111111");
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        boolean boolean31 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.Class<?> wildcardClass35 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.String str19 = caverphone0.caverphone("1111111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str24 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str41 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        boolean boolean22 = caverphone8.isCaverphoneEqual("", "");
        boolean boolean25 = caverphone8.isCaverphoneEqual("", "");
        java.lang.String str27 = caverphone8.caverphone("");
        boolean boolean30 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str33 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "AA11111111" + "'", obj31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.caverphone("hi!");
        java.lang.String str30 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("AA11111111");
        java.lang.String str38 = caverphone31.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone39.caverphone("");
        boolean boolean47 = caverphone39.isCaverphoneEqual("AA11111111", "");
        java.lang.String str49 = caverphone39.caverphone("AA11111111");
        boolean boolean52 = caverphone39.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj53 = caverphone31.encode((java.lang.Object) "");
        java.lang.String str55 = caverphone31.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone56 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean59 = caverphone56.isCaverphoneEqual("hi!", "");
        boolean boolean62 = caverphone56.isCaverphoneEqual("", "hi!");
        java.lang.String str64 = caverphone56.caverphone("");
        boolean boolean67 = caverphone56.isCaverphoneEqual("", "1111111111");
        java.lang.String str69 = caverphone56.encode("hi!");
        java.lang.String str71 = caverphone56.encode("");
        org.apache.commons.codec.language.Caverphone caverphone72 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean75 = caverphone72.isCaverphoneEqual("hi!", "");
        java.lang.String str77 = caverphone72.caverphone("");
        boolean boolean80 = caverphone72.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj81 = caverphone56.encode((java.lang.Object) "AA11111111");
        boolean boolean84 = caverphone56.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str86 = caverphone56.caverphone("hi!");
        boolean boolean89 = caverphone56.isCaverphoneEqual("hi!", "");
        java.lang.String str91 = caverphone56.caverphone("");
        java.lang.String str93 = caverphone56.caverphone("");
        java.lang.String str95 = caverphone56.encode("AA11111111");
        java.lang.Object obj96 = caverphone31.encode((java.lang.Object) str95);
        java.lang.Object obj97 = caverphone0.encode((java.lang.Object) str95);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "1111111111" + "'", obj53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "1111111111" + "'", str71, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "1111111111" + "'", str77, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "AA11111111" + "'", obj81, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "AA11111111" + "'", str86, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "1111111111" + "'", str91, "1111111111");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "1111111111" + "'", str93, "1111111111");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "AA11111111" + "'", str95, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + "AA11111111" + "'", obj96, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + "AA11111111" + "'", obj97, "AA11111111");
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("AA11111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("");
        boolean boolean25 = caverphone17.isCaverphoneEqual("AA11111111", "");
        java.lang.String str27 = caverphone17.encode("1111111111");
        boolean boolean30 = caverphone17.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.Class<?> wildcardClass31 = caverphone17.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = caverphone0.encode((java.lang.Object) caverphone17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.caverphone("AA11111111");
        boolean boolean13 = caverphone5.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("1111111111");
        java.lang.Object obj24 = caverphone5.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone5.caverphone("1111111111");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.encode("hi!");
        java.lang.String str38 = caverphone31.caverphone("AA11111111");
        java.lang.String str40 = caverphone31.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.encode("hi!");
        java.lang.String str48 = caverphone41.caverphone("AA11111111");
        java.lang.String str50 = caverphone41.caverphone("hi!");
        java.lang.String str52 = caverphone41.caverphone("hi!");
        java.lang.String str54 = caverphone41.caverphone("1111111111");
        java.lang.Object obj55 = caverphone31.encode((java.lang.Object) "1111111111");
        java.lang.String str57 = caverphone31.encode("AA11111111");
        java.lang.String str59 = caverphone31.caverphone("1111111111");
        java.lang.Object obj60 = caverphone0.encode((java.lang.Object) str59);
        java.lang.String str62 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone63 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean66 = caverphone63.isCaverphoneEqual("hi!", "");
        java.lang.String str68 = caverphone63.caverphone("AA11111111");
        java.lang.String str70 = caverphone63.encode("");
        java.lang.String str72 = caverphone63.caverphone("1111111111");
        boolean boolean75 = caverphone63.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str77 = caverphone63.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass78 = caverphone63.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = caverphone0.encode((java.lang.Object) wildcardClass78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AA11111111" + "'", str68, "AA11111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "AA11111111" + "'", str77, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.caverphone("AA11111111");
        java.lang.String str25 = caverphone13.caverphone("AA11111111");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str28 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        java.lang.String str35 = caverphone0.encode("hi!");
        java.lang.String str37 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone38.caverphone("");
        boolean boolean49 = caverphone38.isCaverphoneEqual("", "1111111111");
        boolean boolean52 = caverphone38.isCaverphoneEqual("", "");
        boolean boolean55 = caverphone38.isCaverphoneEqual("", "");
        java.lang.String str57 = caverphone38.caverphone("");
        boolean boolean60 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.String str62 = caverphone38.encode("1111111111");
        java.lang.Class<?> wildcardClass63 = caverphone38.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = caverphone0.encode((java.lang.Object) wildcardClass63);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("AA11111111");
        java.lang.String str23 = caverphone14.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.encode("hi!");
        java.lang.String str31 = caverphone24.caverphone("AA11111111");
        java.lang.String str33 = caverphone24.caverphone("hi!");
        java.lang.String str35 = caverphone24.caverphone("hi!");
        java.lang.String str37 = caverphone24.caverphone("1111111111");
        java.lang.Object obj38 = caverphone14.encode((java.lang.Object) "1111111111");
        java.lang.String str40 = caverphone14.encode("AA11111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        java.lang.String str23 = caverphone18.caverphone("");
        java.lang.Class<?> wildcardClass24 = caverphone18.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = caverphone0.encode((java.lang.Object) caverphone18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        java.lang.String str17 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        java.lang.String str23 = caverphone18.caverphone("");
        boolean boolean26 = caverphone18.isCaverphoneEqual("AA11111111", "");
        java.lang.String str28 = caverphone18.encode("1111111111");
        boolean boolean31 = caverphone18.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone32.caverphone("AA11111111");
        java.lang.String str44 = caverphone32.caverphone("AA11111111");
        java.lang.String str46 = caverphone32.caverphone("hi!");
        java.lang.String str48 = caverphone32.caverphone("1111111111");
        java.lang.Object obj49 = caverphone18.encode((java.lang.Object) str48);
        boolean boolean52 = caverphone18.isCaverphoneEqual("", "");
        java.lang.String str54 = caverphone18.encode("1111111111");
        java.lang.Object obj55 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "1111111111" + "'", obj49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("1111111111", "");
        boolean boolean15 = caverphone9.isCaverphoneEqual("hi!", "hi!");
        boolean boolean18 = caverphone9.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str21 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        boolean boolean28 = caverphone22.isCaverphoneEqual("", "hi!");
        java.lang.String str30 = caverphone22.caverphone("");
        boolean boolean33 = caverphone22.isCaverphoneEqual("", "1111111111");
        java.lang.String str35 = caverphone22.encode("hi!");
        java.lang.String str37 = caverphone22.encode("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("1111111111", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str46 = caverphone38.encode("AA11111111");
        java.lang.Object obj47 = caverphone22.encode((java.lang.Object) "AA11111111");
        java.lang.String str49 = caverphone22.encode("");
        boolean boolean52 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone22.encode("hi!");
        java.lang.String str56 = caverphone22.caverphone("hi!");
        java.lang.String str58 = caverphone22.caverphone("");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str61 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass62 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "AA11111111" + "'", obj19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("");
        java.lang.String str34 = caverphone0.encode("");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.String str47 = caverphone37.caverphone("AA11111111");
        java.lang.String str49 = caverphone37.caverphone("AA11111111");
        java.lang.String str51 = caverphone37.caverphone("hi!");
        java.lang.String str53 = caverphone37.caverphone("1111111111");
        java.lang.String str55 = caverphone37.encode("1111111111");
        java.lang.Object obj56 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone57 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean60 = caverphone57.isCaverphoneEqual("hi!", "");
        java.lang.String str62 = caverphone57.caverphone("");
        boolean boolean65 = caverphone57.isCaverphoneEqual("AA11111111", "");
        java.lang.String str67 = caverphone57.caverphone("AA11111111");
        java.lang.String str69 = caverphone57.caverphone("AA11111111");
        java.lang.String str71 = caverphone57.caverphone("hi!");
        java.lang.Object obj72 = caverphone0.encode((java.lang.Object) str71);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "1111111111" + "'", obj56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AA11111111" + "'", str71, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "AA11111111" + "'", obj72, "AA11111111");
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.encode("hi!");
        java.lang.String str22 = caverphone15.caverphone("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str28 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.Class<?> wildcardClass18 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("hi!");
        java.lang.String str21 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }
}

