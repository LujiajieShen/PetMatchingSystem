import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("1111111111");
        java.lang.String str11 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass12 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone38.caverphone("");
        boolean boolean49 = caverphone38.isCaverphoneEqual("", "1111111111");
        boolean boolean52 = caverphone38.isCaverphoneEqual("", "");
        boolean boolean55 = caverphone38.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str57 = caverphone38.encode("AA11111111");
        java.lang.String str59 = caverphone38.encode("1111111111");
        java.lang.Object obj60 = caverphone0.encode((java.lang.Object) str59);
        java.lang.String str62 = caverphone0.caverphone("1111111111");
        java.lang.String str64 = caverphone0.caverphone("");
        java.lang.String str66 = caverphone0.encode("AA11111111");
        java.lang.String str68 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AA11111111" + "'", str66, "AA11111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("1111111111", "");
        boolean boolean42 = caverphone36.isCaverphoneEqual("hi!", "hi!");
        boolean boolean45 = caverphone36.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str47 = caverphone36.caverphone("");
        java.lang.String str49 = caverphone36.encode("");
        java.lang.String str51 = caverphone36.encode("1111111111");
        boolean boolean54 = caverphone36.isCaverphoneEqual("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = caverphone0.encode((java.lang.Object) caverphone36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        java.lang.String str36 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.encode("");
        java.lang.String str39 = caverphone0.encode("");
        boolean boolean42 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        java.lang.String str17 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        java.lang.String str23 = caverphone18.caverphone("");
        boolean boolean26 = caverphone18.isCaverphoneEqual("AA11111111", "");
        java.lang.String str28 = caverphone18.encode("1111111111");
        boolean boolean31 = caverphone18.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str33 = caverphone18.caverphone("hi!");
        java.lang.String str35 = caverphone18.encode("1111111111");
        boolean boolean38 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.Object obj39 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "1111111111" + "'", obj39, "1111111111");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str26 = caverphone0.encode("1111111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean32 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        boolean boolean25 = caverphone19.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.encode("hi!");
        java.lang.String str33 = caverphone26.caverphone("1111111111");
        java.lang.Object obj34 = caverphone19.encode((java.lang.Object) str33);
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.caverphone("");
        boolean boolean43 = caverphone35.isCaverphoneEqual("AA11111111", "");
        java.lang.String str45 = caverphone35.caverphone("AA11111111");
        java.lang.String str47 = caverphone35.caverphone("AA11111111");
        java.lang.String str49 = caverphone35.caverphone("AA11111111");
        boolean boolean52 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.String str54 = caverphone35.encode("AA11111111");
        boolean boolean57 = caverphone35.isCaverphoneEqual("hi!", "hi!");
        java.lang.Object obj58 = caverphone19.encode((java.lang.Object) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = caverphone0.encode((java.lang.Object) caverphone19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        boolean boolean31 = caverphone25.isCaverphoneEqual("", "hi!");
        java.lang.String str33 = caverphone25.caverphone("");
        boolean boolean36 = caverphone25.isCaverphoneEqual("", "1111111111");
        java.lang.String str38 = caverphone25.encode("hi!");
        java.lang.String str40 = caverphone25.encode("");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("");
        boolean boolean49 = caverphone41.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj50 = caverphone25.encode((java.lang.Object) "AA11111111");
        boolean boolean53 = caverphone25.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean56 = caverphone25.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass57 = caverphone25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = caverphone0.encode((java.lang.Object) caverphone25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "AA11111111" + "'", obj50, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str22 = caverphone0.caverphone("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.Object obj12 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("AA11111111");
        java.lang.String str20 = caverphone13.caverphone("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        java.lang.String str23 = caverphone0.caverphone("hi!");
        boolean boolean26 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass27 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "1111111111" + "'", obj12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        java.lang.String str18 = caverphone11.caverphone("");
        java.lang.String str20 = caverphone11.encode("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone0.encode("hi!");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        java.lang.String str30 = caverphone0.caverphone("AA11111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        java.lang.String str40 = caverphone0.caverphone("hi!");
        java.lang.String str42 = caverphone0.encode("");
        java.lang.String str44 = caverphone0.encode("AA11111111");
        java.lang.String str46 = caverphone0.encode("AA11111111");
        java.lang.String str48 = caverphone0.encode("AA11111111");
        boolean boolean51 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.caverphone("AA11111111");
        boolean boolean41 = caverphone28.isCaverphoneEqual("", "");
        java.lang.String str43 = caverphone28.caverphone("");
        java.lang.String str45 = caverphone28.encode("1111111111");
        java.lang.String str47 = caverphone28.encode("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = caverphone0.encode((java.lang.Object) caverphone28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.encode("hi!");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("1111111111", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str25 = caverphone17.caverphone("AA11111111");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) str25);
        java.lang.String str28 = caverphone0.encode("");
        java.lang.String str30 = caverphone0.caverphone("AA11111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        java.lang.String str41 = caverphone0.encode("AA11111111");
        java.lang.String str43 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone44 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean47 = caverphone44.isCaverphoneEqual("hi!", "");
        java.lang.String str49 = caverphone44.encode("hi!");
        java.lang.String str51 = caverphone44.caverphone("AA11111111");
        java.lang.String str53 = caverphone44.caverphone("1111111111");
        java.lang.String str55 = caverphone44.encode("");
        boolean boolean58 = caverphone44.isCaverphoneEqual("1111111111", "");
        boolean boolean61 = caverphone44.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass62 = caverphone44.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = caverphone0.encode((java.lang.Object) wildcardClass62);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        java.lang.String str23 = caverphone18.caverphone("AA11111111");
        java.lang.String str25 = caverphone18.caverphone("hi!");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean29 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.caverphone("");
        boolean boolean38 = caverphone30.isCaverphoneEqual("AA11111111", "");
        java.lang.String str40 = caverphone30.caverphone("AA11111111");
        boolean boolean43 = caverphone30.isCaverphoneEqual("", "1111111111");
        java.lang.String str45 = caverphone30.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        boolean boolean52 = caverphone46.isCaverphoneEqual("", "hi!");
        java.lang.String str54 = caverphone46.caverphone("");
        boolean boolean57 = caverphone46.isCaverphoneEqual("", "1111111111");
        boolean boolean60 = caverphone46.isCaverphoneEqual("", "");
        java.lang.String str62 = caverphone46.caverphone("hi!");
        java.lang.String str64 = caverphone46.caverphone("");
        java.lang.String str66 = caverphone46.caverphone("hi!");
        java.lang.String str68 = caverphone46.encode("");
        java.lang.String str70 = caverphone46.caverphone("AA11111111");
        java.lang.Object obj71 = caverphone30.encode((java.lang.Object) str70);
        java.lang.String str73 = caverphone30.caverphone("hi!");
        java.lang.Class<?> wildcardClass74 = caverphone30.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = caverphone0.encode((java.lang.Object) wildcardClass74);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AA11111111" + "'", str66, "AA11111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AA11111111" + "'", str70, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "AA11111111" + "'", obj71, "AA11111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "AA11111111" + "'", str73, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone32.encode("1111111111");
        boolean boolean45 = caverphone32.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str47 = caverphone32.caverphone("hi!");
        java.lang.String str49 = caverphone32.encode("1111111111");
        boolean boolean52 = caverphone32.isCaverphoneEqual("", "AA11111111");
        boolean boolean55 = caverphone32.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str57 = caverphone32.encode("hi!");
        java.lang.Object obj58 = caverphone0.encode((java.lang.Object) str57);
        java.lang.String str60 = caverphone0.encode("AA11111111");
        java.lang.String str62 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("1111111111", "");
        boolean boolean35 = caverphone29.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str37 = caverphone29.encode("AA11111111");
        java.lang.String str39 = caverphone29.encode("");
        java.lang.String str41 = caverphone29.caverphone("");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "1111111111" + "'", obj42, "1111111111");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str38 = caverphone36.caverphone("1111111111");
        java.lang.String str40 = caverphone36.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        boolean boolean44 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        boolean boolean47 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass48 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean37 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str39 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("");
        boolean boolean37 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj38 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str40 = caverphone0.encode("");
        java.lang.String str42 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("hi!", "");
        java.lang.String str48 = caverphone43.caverphone("");
        boolean boolean51 = caverphone43.isCaverphoneEqual("AA11111111", "");
        java.lang.String str53 = caverphone43.caverphone("AA11111111");
        java.lang.String str55 = caverphone43.caverphone("AA11111111");
        java.lang.String str57 = caverphone43.caverphone("hi!");
        java.lang.String str59 = caverphone43.caverphone("hi!");
        java.lang.Class<?> wildcardClass60 = caverphone43.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = caverphone0.encode((java.lang.Object) wildcardClass60);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "AA11111111" + "'", obj38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("");
        java.lang.String str7 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        boolean boolean26 = caverphone20.isCaverphoneEqual("", "hi!");
        java.lang.String str28 = caverphone20.caverphone("");
        boolean boolean31 = caverphone20.isCaverphoneEqual("", "1111111111");
        boolean boolean34 = caverphone20.isCaverphoneEqual("", "");
        java.lang.String str36 = caverphone20.caverphone("hi!");
        java.lang.String str38 = caverphone20.caverphone("");
        java.lang.String str40 = caverphone20.caverphone("hi!");
        java.lang.String str42 = caverphone20.encode("");
        boolean boolean45 = caverphone20.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str47 = caverphone20.caverphone("");
        boolean boolean50 = caverphone20.isCaverphoneEqual("", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) boolean50);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone8.encode("hi!");
        java.lang.String str23 = caverphone8.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("1111111111", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone24.encode("AA11111111");
        java.lang.Object obj33 = caverphone8.encode((java.lang.Object) "AA11111111");
        java.lang.String str35 = caverphone8.encode("");
        boolean boolean38 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone8.encode("hi!");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean44 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean47 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        java.lang.String str29 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("1111111111", "");
        boolean boolean36 = caverphone30.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone30.encode("");
        java.lang.String str40 = caverphone30.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("AA11111111");
        java.lang.String str48 = caverphone41.caverphone("");
        java.lang.String str50 = caverphone41.encode("hi!");
        java.lang.Object obj51 = caverphone30.encode((java.lang.Object) str50);
        boolean boolean54 = caverphone30.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj55 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str57 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass58 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "AA11111111" + "'", obj51, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.encode("hi!");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str23 = caverphone13.caverphone("hi!");
        java.lang.String str25 = caverphone13.encode("AA11111111");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("AA11111111");
        boolean boolean21 = caverphone13.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.encode("hi!");
        java.lang.String str29 = caverphone22.caverphone("1111111111");
        java.lang.String str31 = caverphone22.encode("1111111111");
        java.lang.Object obj32 = caverphone13.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone33 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean36 = caverphone33.isCaverphoneEqual("hi!", "");
        boolean boolean39 = caverphone33.isCaverphoneEqual("", "hi!");
        java.lang.String str41 = caverphone33.caverphone("");
        boolean boolean44 = caverphone33.isCaverphoneEqual("", "1111111111");
        java.lang.String str46 = caverphone33.encode("hi!");
        java.lang.String str48 = caverphone33.encode("");
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone49.caverphone("");
        boolean boolean57 = caverphone49.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj58 = caverphone33.encode((java.lang.Object) "AA11111111");
        boolean boolean61 = caverphone33.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean64 = caverphone33.isCaverphoneEqual("hi!", "");
        java.lang.String str66 = caverphone33.caverphone("1111111111");
        boolean boolean69 = caverphone33.isCaverphoneEqual("", "");
        java.lang.Object obj70 = caverphone13.encode((java.lang.Object) "");
        java.lang.Object obj71 = caverphone0.encode(obj70);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "1111111111" + "'", obj32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "1111111111" + "'", obj70, "1111111111");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        boolean boolean35 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str37 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        java.lang.String str27 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass28 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass33 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str41 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str41 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("AA11111111");
        boolean boolean24 = caverphone16.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone16.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.encode("1111111111");
        java.lang.Object obj47 = caverphone16.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode(obj47);
        java.lang.String str50 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.caverphone("AA11111111");
        java.lang.String str58 = caverphone51.encode("");
        java.lang.String str60 = caverphone51.caverphone("1111111111");
        java.lang.String str62 = caverphone51.caverphone("");
        java.lang.String str64 = caverphone51.encode("");
        boolean boolean67 = caverphone51.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone68 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean71 = caverphone68.isCaverphoneEqual("1111111111", "");
        boolean boolean74 = caverphone68.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str76 = caverphone68.caverphone("AA11111111");
        java.lang.Object obj77 = caverphone51.encode((java.lang.Object) str76);
        java.lang.String str79 = caverphone51.encode("");
        java.lang.String str81 = caverphone51.caverphone("");
        java.lang.Object obj82 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "AA11111111" + "'", str76, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "AA11111111" + "'", obj77, "AA11111111");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "1111111111" + "'", str79, "1111111111");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "1111111111" + "'", str81, "1111111111");
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "1111111111" + "'", obj82, "1111111111");
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("AA11111111");
        java.lang.String str34 = caverphone0.caverphone("AA11111111");
        java.lang.String str36 = caverphone0.encode("1111111111");
        java.lang.String str38 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str31 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        boolean boolean10 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str19 = caverphone17.caverphone("1111111111");
        java.lang.String str21 = caverphone17.caverphone("1111111111");
        java.lang.String str23 = caverphone17.caverphone("AA11111111");
        java.lang.Object obj24 = caverphone11.encode((java.lang.Object) str23);
        java.lang.String str26 = caverphone11.caverphone("");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) str26);
        java.lang.String str29 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "AA11111111" + "'", obj24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        java.lang.String str6 = caverphone0.caverphone("AA11111111");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.caverphone("");
        boolean boolean18 = caverphone10.isCaverphoneEqual("AA11111111", "");
        java.lang.String str20 = caverphone10.encode("1111111111");
        boolean boolean23 = caverphone10.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str25 = caverphone10.caverphone("hi!");
        java.lang.String str27 = caverphone10.encode("1111111111");
        boolean boolean30 = caverphone10.isCaverphoneEqual("", "hi!");
        boolean boolean33 = caverphone10.isCaverphoneEqual("AA11111111", "");
        java.lang.String str35 = caverphone10.encode("hi!");
        java.lang.String str37 = caverphone10.encode("");
        java.lang.String str39 = caverphone10.encode("");
        boolean boolean42 = caverphone10.isCaverphoneEqual("", "");
        java.lang.String str44 = caverphone10.caverphone("1111111111");
        java.lang.Object obj45 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AA11111111" + "'", str6, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "");
        boolean boolean30 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass31 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.encode("hi!");
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        java.lang.String str31 = caverphone18.encode("hi!");
        java.lang.String str33 = caverphone18.encode("");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj43 = caverphone18.encode((java.lang.Object) "AA11111111");
        java.lang.String str45 = caverphone18.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("1111111111", "");
        boolean boolean52 = caverphone46.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str54 = caverphone46.encode("AA11111111");
        java.lang.String str56 = caverphone46.encode("");
        java.lang.String str58 = caverphone46.caverphone("1111111111");
        java.lang.Object obj59 = caverphone18.encode((java.lang.Object) "1111111111");
        java.lang.Object obj60 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean63 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "AA11111111" + "'", obj43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        boolean boolean10 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str12 = caverphone0.encode("");
        java.lang.String str14 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("AA11111111");
        java.lang.String str22 = caverphone15.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("");
        boolean boolean31 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        boolean boolean36 = caverphone23.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj37 = caverphone15.encode((java.lang.Object) "");
        java.lang.String str39 = caverphone15.caverphone("");
        java.lang.String str41 = caverphone15.caverphone("AA11111111");
        java.lang.String str43 = caverphone15.caverphone("1111111111");
        java.lang.Object obj44 = caverphone0.encode((java.lang.Object) str43);
        org.apache.commons.codec.language.Caverphone caverphone45 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean48 = caverphone45.isCaverphoneEqual("1111111111", "");
        boolean boolean51 = caverphone45.isCaverphoneEqual("hi!", "hi!");
        boolean boolean54 = caverphone45.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str56 = caverphone45.caverphone("");
        java.lang.String str58 = caverphone45.encode("hi!");
        java.lang.String str60 = caverphone45.encode("1111111111");
        java.lang.Object obj61 = caverphone0.encode((java.lang.Object) str60);
        java.lang.Class<?> wildcardClass62 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "1111111111" + "'", obj37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "1111111111" + "'", obj44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "1111111111" + "'", obj61, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.encode("");
        boolean boolean15 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        java.lang.String str24 = caverphone0.caverphone("hi!");
        java.lang.String str26 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        boolean boolean21 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str23 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("AA11111111");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.caverphone("AA11111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("", "");
        java.lang.String str42 = caverphone27.encode("1111111111");
        java.lang.Class<?> wildcardClass43 = caverphone27.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = caverphone0.encode((java.lang.Object) caverphone27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.encode("hi!");
        java.lang.String str28 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.encode("1111111111");
        java.lang.String str20 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str29 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.caverphone("AA11111111");
        boolean boolean29 = caverphone21.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.encode("hi!");
        java.lang.String str37 = caverphone30.caverphone("1111111111");
        java.lang.String str39 = caverphone30.encode("1111111111");
        java.lang.Object obj40 = caverphone21.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("");
        boolean boolean49 = caverphone41.isCaverphoneEqual("AA11111111", "");
        java.lang.String str51 = caverphone41.encode("1111111111");
        java.lang.Object obj52 = caverphone21.encode((java.lang.Object) str51);
        boolean boolean55 = caverphone21.isCaverphoneEqual("", "1111111111");
        java.lang.String str57 = caverphone21.caverphone("AA11111111");
        boolean boolean60 = caverphone21.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Object obj61 = caverphone17.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass62 = caverphone17.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = caverphone0.encode((java.lang.Object) caverphone17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "1111111111" + "'", obj40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "1111111111" + "'", obj61, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.encode("hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.encode("hi!");
        java.lang.String str42 = caverphone35.caverphone("hi!");
        java.lang.String str44 = caverphone35.caverphone("hi!");
        java.lang.Object obj45 = caverphone29.encode((java.lang.Object) str44);
        java.lang.String str47 = caverphone29.encode("");
        boolean boolean50 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.Object obj51 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "AA11111111" + "'", obj45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "AA11111111" + "'", obj51, "AA11111111");
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        boolean boolean40 = caverphone34.isCaverphoneEqual("", "hi!");
        java.lang.String str42 = caverphone34.caverphone("");
        boolean boolean45 = caverphone34.isCaverphoneEqual("", "1111111111");
        java.lang.String str47 = caverphone34.encode("hi!");
        java.lang.String str49 = caverphone34.encode("");
        org.apache.commons.codec.language.Caverphone caverphone50 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean53 = caverphone50.isCaverphoneEqual("hi!", "");
        java.lang.String str55 = caverphone50.caverphone("");
        boolean boolean58 = caverphone50.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj59 = caverphone34.encode((java.lang.Object) "AA11111111");
        boolean boolean62 = caverphone34.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str64 = caverphone34.encode("1111111111");
        java.lang.String str66 = caverphone34.caverphone("1111111111");
        java.lang.Object obj67 = caverphone0.encode((java.lang.Object) str66);
        java.lang.Class<?> wildcardClass68 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "AA11111111" + "'", obj59, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "1111111111" + "'", obj67, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone19.encode((java.lang.Object) "1111111111");
        boolean boolean38 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj39 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone40 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean43 = caverphone40.isCaverphoneEqual("hi!", "");
        java.lang.String str45 = caverphone40.caverphone("");
        boolean boolean48 = caverphone40.isCaverphoneEqual("AA11111111", "");
        java.lang.String str50 = caverphone40.caverphone("hi!");
        java.lang.String str52 = caverphone40.caverphone("");
        java.lang.String str54 = caverphone40.caverphone("1111111111");
        java.lang.String str56 = caverphone40.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = caverphone0.encode((java.lang.Object) caverphone40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "AA11111111" + "'", obj39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.encode("hi!");
        java.lang.String str33 = caverphone26.caverphone("AA11111111");
        java.lang.String str35 = caverphone26.caverphone("1111111111");
        java.lang.String str37 = caverphone26.encode("");
        java.lang.String str39 = caverphone26.encode("1111111111");
        java.lang.String str41 = caverphone26.encode("AA11111111");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) str41);
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "AA11111111" + "'", obj42, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str41 = caverphone39.caverphone("1111111111");
        boolean boolean44 = caverphone39.isCaverphoneEqual("1111111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = caverphone0.encode((java.lang.Object) boolean44);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean37 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone38.caverphone("");
        boolean boolean49 = caverphone38.isCaverphoneEqual("", "1111111111");
        java.lang.String str51 = caverphone38.encode("hi!");
        java.lang.String str53 = caverphone38.encode("");
        org.apache.commons.codec.language.Caverphone caverphone54 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean57 = caverphone54.isCaverphoneEqual("hi!", "");
        java.lang.String str59 = caverphone54.caverphone("");
        boolean boolean62 = caverphone54.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj63 = caverphone38.encode((java.lang.Object) "AA11111111");
        boolean boolean66 = caverphone38.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str68 = caverphone38.encode("1111111111");
        java.lang.String str70 = caverphone38.caverphone("1111111111");
        java.lang.String str72 = caverphone38.encode("AA11111111");
        boolean boolean75 = caverphone38.isCaverphoneEqual("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = caverphone0.encode((java.lang.Object) caverphone38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "AA11111111" + "'", obj63, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "1111111111" + "'", str68, "1111111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "AA11111111" + "'", str72, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        java.lang.String str34 = caverphone0.encode("");
        boolean boolean37 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.String str48 = caverphone38.caverphone("AA11111111");
        java.lang.String str50 = caverphone38.caverphone("AA11111111");
        java.lang.String str52 = caverphone38.caverphone("hi!");
        java.lang.String str54 = caverphone38.caverphone("1111111111");
        java.lang.String str56 = caverphone38.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone57 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean60 = caverphone57.isCaverphoneEqual("hi!", "");
        java.lang.String str62 = caverphone57.caverphone("");
        boolean boolean65 = caverphone57.isCaverphoneEqual("AA11111111", "");
        java.lang.String str67 = caverphone57.caverphone("AA11111111");
        java.lang.String str69 = caverphone57.caverphone("AA11111111");
        java.lang.String str71 = caverphone57.caverphone("hi!");
        java.lang.Object obj72 = caverphone38.encode((java.lang.Object) "hi!");
        java.lang.String str74 = caverphone38.encode("AA11111111");
        java.lang.String str76 = caverphone38.encode("1111111111");
        java.lang.Object obj77 = caverphone0.encode((java.lang.Object) str76);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AA11111111" + "'", str71, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "AA11111111" + "'", obj72, "AA11111111");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "AA11111111" + "'", str74, "AA11111111");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "1111111111" + "'", str76, "1111111111");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "1111111111" + "'", obj77, "1111111111");
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str29 = caverphone27.caverphone("1111111111");
        java.lang.String str31 = caverphone27.caverphone("1111111111");
        java.lang.String str33 = caverphone27.caverphone("AA11111111");
        java.lang.Object obj34 = caverphone21.encode((java.lang.Object) str33);
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        boolean boolean41 = caverphone35.isCaverphoneEqual("", "hi!");
        java.lang.String str43 = caverphone35.caverphone("");
        boolean boolean46 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.String str48 = caverphone35.encode("hi!");
        java.lang.String str50 = caverphone35.encode("");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.caverphone("");
        boolean boolean59 = caverphone51.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj60 = caverphone35.encode((java.lang.Object) "AA11111111");
        boolean boolean63 = caverphone35.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str65 = caverphone35.encode("AA11111111");
        java.lang.String str67 = caverphone35.caverphone("hi!");
        java.lang.Object obj68 = caverphone21.encode((java.lang.Object) str67);
        java.lang.Object obj69 = caverphone0.encode(obj68);
        java.lang.Object obj70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = caverphone0.encode(obj70);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "AA11111111" + "'", obj60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "AA11111111" + "'", obj68, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "AA11111111" + "'", obj69, "AA11111111");
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone8.encode("hi!");
        java.lang.String str23 = caverphone8.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("1111111111", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone24.encode("AA11111111");
        java.lang.Object obj33 = caverphone8.encode((java.lang.Object) "AA11111111");
        java.lang.String str35 = caverphone8.encode("");
        boolean boolean38 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone8.encode("hi!");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean44 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean47 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("hi!", "");
        boolean boolean54 = caverphone48.isCaverphoneEqual("", "hi!");
        java.lang.String str56 = caverphone48.caverphone("");
        boolean boolean59 = caverphone48.isCaverphoneEqual("", "1111111111");
        java.lang.String str61 = caverphone48.encode("hi!");
        java.lang.String str63 = caverphone48.encode("");
        org.apache.commons.codec.language.Caverphone caverphone64 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean67 = caverphone64.isCaverphoneEqual("hi!", "");
        java.lang.String str69 = caverphone64.caverphone("");
        boolean boolean72 = caverphone64.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj73 = caverphone48.encode((java.lang.Object) "AA11111111");
        boolean boolean76 = caverphone48.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean79 = caverphone48.isCaverphoneEqual("hi!", "");
        java.lang.String str81 = caverphone48.caverphone("1111111111");
        java.lang.String str83 = caverphone48.caverphone("");
        java.lang.Class<?> wildcardClass84 = caverphone48.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = caverphone0.encode((java.lang.Object) wildcardClass84);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "AA11111111" + "'", obj73, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "1111111111" + "'", str81, "1111111111");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "1111111111" + "'", str83, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str18 = caverphone16.caverphone("1111111111");
        java.lang.String str20 = caverphone16.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.caverphone("AA11111111");
        boolean boolean29 = caverphone21.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.encode("hi!");
        java.lang.String str37 = caverphone30.caverphone("1111111111");
        java.lang.String str39 = caverphone30.encode("1111111111");
        java.lang.Object obj40 = caverphone21.encode((java.lang.Object) "1111111111");
        java.lang.String str42 = caverphone21.caverphone("1111111111");
        java.lang.Object obj43 = caverphone16.encode((java.lang.Object) "1111111111");
        boolean boolean46 = caverphone16.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj47 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "1111111111" + "'", obj40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("1111111111");
        java.lang.String str28 = caverphone14.caverphone("");
        java.lang.String str30 = caverphone14.encode("hi!");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "AA11111111" + "'", obj31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        boolean boolean10 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str12 = caverphone0.encode("");
        java.lang.String str14 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("");
        boolean boolean23 = caverphone15.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone15.caverphone("AA11111111");
        boolean boolean28 = caverphone15.isCaverphoneEqual("", "1111111111");
        java.lang.String str30 = caverphone15.caverphone("AA11111111");
        boolean boolean33 = caverphone15.isCaverphoneEqual("1111111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = caverphone0.encode((java.lang.Object) boolean33);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.String str19 = caverphone0.caverphone("1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        java.lang.Object obj28 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "1111111111" + "'", obj28, "1111111111");
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("");
        boolean boolean19 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str21 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("1111111111", "");
        boolean boolean28 = caverphone22.isCaverphoneEqual("hi!", "hi!");
        boolean boolean31 = caverphone22.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str33 = caverphone22.caverphone("");
        java.lang.String str35 = caverphone22.caverphone("hi!");
        java.lang.String str37 = caverphone22.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = caverphone0.encode((java.lang.Object) caverphone22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str31 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass32 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.String str29 = caverphone16.encode("hi!");
        java.lang.String str31 = caverphone16.encode("");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj41 = caverphone16.encode((java.lang.Object) "AA11111111");
        boolean boolean44 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str46 = caverphone16.encode("1111111111");
        java.lang.String str48 = caverphone16.caverphone("hi!");
        java.lang.Class<?> wildcardClass49 = caverphone16.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        boolean boolean15 = caverphone9.isCaverphoneEqual("", "hi!");
        java.lang.String str17 = caverphone9.caverphone("");
        boolean boolean20 = caverphone9.isCaverphoneEqual("", "1111111111");
        java.lang.String str22 = caverphone9.encode("hi!");
        java.lang.String str24 = caverphone9.encode("");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("");
        boolean boolean33 = caverphone25.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj34 = caverphone9.encode((java.lang.Object) "AA11111111");
        java.lang.String str36 = caverphone9.caverphone("AA11111111");
        java.lang.Object obj37 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str39 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "AA11111111" + "'", obj37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        java.lang.String str28 = caverphone16.caverphone("AA11111111");
        java.lang.String str30 = caverphone16.caverphone("hi!");
        java.lang.String str32 = caverphone16.caverphone("1111111111");
        java.lang.String str34 = caverphone16.encode("1111111111");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass38 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean34 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str44 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass45 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        java.lang.String str17 = caverphone12.caverphone("");
        boolean boolean20 = caverphone12.isCaverphoneEqual("AA11111111", "");
        java.lang.String str22 = caverphone12.caverphone("AA11111111");
        boolean boolean25 = caverphone12.isCaverphoneEqual("AA11111111", "1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = caverphone0.encode((java.lang.Object) boolean25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("AA11111111");
        boolean boolean24 = caverphone16.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone16.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.encode("1111111111");
        java.lang.Object obj47 = caverphone16.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode(obj47);
        java.lang.String str50 = caverphone0.caverphone("1111111111");
        java.lang.String str52 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.caverphone("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        boolean boolean10 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        boolean boolean30 = caverphone16.isCaverphoneEqual("", "");
        java.lang.String str32 = caverphone16.caverphone("hi!");
        java.lang.String str34 = caverphone16.caverphone("");
        java.lang.String str36 = caverphone16.caverphone("hi!");
        java.lang.String str38 = caverphone16.encode("");
        java.lang.String str40 = caverphone16.caverphone("AA11111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        java.lang.String str43 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.caverphone("");
        java.lang.String str28 = caverphone0.encode("");
        boolean boolean31 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass32 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.caverphone("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.caverphone("1111111111");
        java.lang.String str27 = caverphone0.encode("");
        java.lang.String str29 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass30 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        java.lang.String str17 = caverphone0.encode("");
        java.lang.String str19 = caverphone0.encode("1111111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str24 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        java.lang.String str28 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str23 = caverphone0.encode("1111111111");
        java.lang.String str25 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("AA11111111");
        java.lang.String str30 = caverphone23.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.caverphone("AA11111111");
        boolean boolean44 = caverphone31.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj45 = caverphone23.encode((java.lang.Object) "");
        boolean boolean48 = caverphone23.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass49 = caverphone23.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = caverphone0.encode((java.lang.Object) wildcardClass49);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean27 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str30 = caverphone28.caverphone("1111111111");
        java.lang.String str32 = caverphone28.caverphone("1111111111");
        boolean boolean35 = caverphone28.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        boolean boolean25 = caverphone19.isCaverphoneEqual("", "hi!");
        java.lang.String str27 = caverphone19.encode("hi!");
        java.lang.String str29 = caverphone19.encode("");
        java.lang.String str31 = caverphone19.encode("");
        java.lang.Object obj32 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "1111111111" + "'", obj32, "1111111111");
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone40 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean43 = caverphone40.isCaverphoneEqual("hi!", "");
        boolean boolean46 = caverphone40.isCaverphoneEqual("", "hi!");
        java.lang.String str48 = caverphone40.caverphone("");
        boolean boolean51 = caverphone40.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj52 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str54 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "AA11111111" + "'", obj52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        boolean boolean10 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("AA11111111");
        java.lang.String str23 = caverphone14.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.encode("hi!");
        java.lang.String str31 = caverphone24.caverphone("AA11111111");
        java.lang.String str33 = caverphone24.caverphone("hi!");
        java.lang.String str35 = caverphone24.caverphone("hi!");
        java.lang.String str37 = caverphone24.caverphone("1111111111");
        java.lang.Object obj38 = caverphone14.encode((java.lang.Object) "1111111111");
        java.lang.String str40 = caverphone14.encode("AA11111111");
        java.lang.String str42 = caverphone14.caverphone("1111111111");
        java.lang.Object obj43 = caverphone0.encode((java.lang.Object) str42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone21.caverphone("1111111111");
        java.lang.String str28 = caverphone21.encode("");
        boolean boolean31 = caverphone21.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str33 = caverphone21.caverphone("1111111111");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.caverphone("1111111111");
        boolean boolean41 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        boolean boolean48 = caverphone42.isCaverphoneEqual("", "hi!");
        java.lang.String str50 = caverphone42.caverphone("");
        boolean boolean53 = caverphone42.isCaverphoneEqual("", "1111111111");
        java.lang.String str55 = caverphone42.encode("hi!");
        java.lang.String str57 = caverphone42.encode("");
        java.lang.String str59 = caverphone42.caverphone("hi!");
        java.lang.String str61 = caverphone42.encode("");
        boolean boolean64 = caverphone42.isCaverphoneEqual("", "hi!");
        boolean boolean67 = caverphone42.isCaverphoneEqual("AA11111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = caverphone0.encode((java.lang.Object) boolean67);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        boolean boolean37 = caverphone0.isCaverphoneEqual("hi!", "");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.String str48 = caverphone38.caverphone("AA11111111");
        boolean boolean51 = caverphone38.isCaverphoneEqual("", "");
        java.lang.String str53 = caverphone38.encode("1111111111");
        java.lang.String str55 = caverphone38.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = caverphone0.encode((java.lang.Object) caverphone38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.encode("hi!");
        java.lang.String str13 = caverphone6.caverphone("hi!");
        java.lang.String str15 = caverphone6.caverphone("hi!");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) str15);
        java.lang.String str18 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "AA11111111" + "'", obj16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str18 = caverphone0.encode("1111111111");
        java.lang.String str20 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        boolean boolean30 = caverphone21.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean33 = caverphone21.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.encode("1111111111");
        boolean boolean47 = caverphone34.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj48 = caverphone21.encode((java.lang.Object) "");
        java.lang.String str50 = caverphone21.encode("");
        java.lang.Object obj51 = caverphone0.encode((java.lang.Object) str50);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        java.lang.String str27 = caverphone0.encode("AA11111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("1111111111");
        java.lang.String str12 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("");
        boolean boolean19 = caverphone11.isCaverphoneEqual("AA11111111", "");
        java.lang.String str21 = caverphone11.encode("1111111111");
        boolean boolean24 = caverphone11.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str26 = caverphone11.caverphone("hi!");
        java.lang.String str28 = caverphone11.encode("1111111111");
        boolean boolean31 = caverphone11.isCaverphoneEqual("", "AA11111111");
        boolean boolean34 = caverphone11.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.caverphone("AA11111111");
        java.lang.String str48 = caverphone36.caverphone("hi!");
        java.lang.String str50 = caverphone36.caverphone("hi!");
        java.lang.String str52 = caverphone36.encode("1111111111");
        java.lang.String str54 = caverphone36.caverphone("");
        java.lang.String str56 = caverphone36.encode("AA11111111");
        java.lang.Object obj57 = caverphone0.encode((java.lang.Object) str56);
        java.lang.String str59 = caverphone0.caverphone("1111111111");
        java.lang.String str61 = caverphone0.caverphone("1111111111");
        java.lang.String str63 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "AA11111111" + "'", obj57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean26 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone27.caverphone("");
        java.lang.String str37 = caverphone27.encode("");
        boolean boolean40 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone27.encode("");
        java.lang.Object obj43 = caverphone0.encode((java.lang.Object) str42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        java.lang.String str38 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone39.caverphone("");
        boolean boolean47 = caverphone39.isCaverphoneEqual("AA11111111", "");
        java.lang.String str49 = caverphone39.caverphone("AA11111111");
        java.lang.String str51 = caverphone39.caverphone("AA11111111");
        java.lang.String str53 = caverphone39.caverphone("AA11111111");
        boolean boolean56 = caverphone39.isCaverphoneEqual("", "1111111111");
        java.lang.String str58 = caverphone39.encode("AA11111111");
        java.lang.String str60 = caverphone39.encode("hi!");
        java.lang.Class<?> wildcardClass61 = caverphone39.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = caverphone0.encode((java.lang.Object) wildcardClass61);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = caverphone0.encode((java.lang.Object) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone3 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean6 = caverphone3.isCaverphoneEqual("hi!", "");
        java.lang.String str8 = caverphone3.encode("hi!");
        java.lang.String str10 = caverphone3.caverphone("hi!");
        java.lang.String str12 = caverphone3.caverphone("hi!");
        boolean boolean15 = caverphone3.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean18 = caverphone3.isCaverphoneEqual("", "hi!");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "AA11111111" + "'", obj19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass35 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str44 = caverphone0.encode("");
        boolean boolean47 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean50 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.encode("hi!");
        java.lang.String str22 = caverphone15.caverphone("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("1111111111", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str34 = caverphone26.caverphone("AA11111111");
        java.lang.String str36 = caverphone26.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.String str47 = caverphone37.encode("1111111111");
        boolean boolean50 = caverphone37.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str52 = caverphone37.caverphone("hi!");
        java.lang.String str54 = caverphone37.encode("1111111111");
        boolean boolean57 = caverphone37.isCaverphoneEqual("", "AA11111111");
        boolean boolean60 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj61 = caverphone26.encode((java.lang.Object) "");
        java.lang.String str63 = caverphone26.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "1111111111" + "'", obj61, "1111111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        boolean boolean25 = caverphone19.isCaverphoneEqual("", "hi!");
        java.lang.String str27 = caverphone19.caverphone("");
        boolean boolean30 = caverphone19.isCaverphoneEqual("", "1111111111");
        java.lang.String str32 = caverphone19.encode("hi!");
        java.lang.String str34 = caverphone19.encode("");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.caverphone("");
        boolean boolean43 = caverphone35.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj44 = caverphone19.encode((java.lang.Object) "AA11111111");
        boolean boolean47 = caverphone19.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean50 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str52 = caverphone19.caverphone("1111111111");
        java.lang.String str54 = caverphone19.encode("hi!");
        java.lang.Class<?> wildcardClass55 = caverphone19.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = caverphone0.encode((java.lang.Object) caverphone19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "AA11111111" + "'", obj44, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean26 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone12.caverphone("");
        boolean boolean23 = caverphone12.isCaverphoneEqual("", "1111111111");
        java.lang.String str25 = caverphone12.encode("hi!");
        java.lang.String str27 = caverphone12.encode("");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj37 = caverphone12.encode((java.lang.Object) "AA11111111");
        boolean boolean40 = caverphone12.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean44 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone45 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean48 = caverphone45.isCaverphoneEqual("hi!", "");
        java.lang.String str50 = caverphone45.caverphone("");
        boolean boolean53 = caverphone45.isCaverphoneEqual("AA11111111", "");
        java.lang.String str55 = caverphone45.caverphone("AA11111111");
        java.lang.String str57 = caverphone45.caverphone("hi!");
        java.lang.String str59 = caverphone45.caverphone("hi!");
        java.lang.String str61 = caverphone45.encode("1111111111");
        boolean boolean64 = caverphone45.isCaverphoneEqual("", "");
        java.lang.String str66 = caverphone45.caverphone("1111111111");
        boolean boolean69 = caverphone45.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean72 = caverphone45.isCaverphoneEqual("1111111111", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = caverphone0.encode((java.lang.Object) boolean72);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "AA11111111" + "'", obj37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        boolean boolean40 = caverphone34.isCaverphoneEqual("", "hi!");
        java.lang.String str42 = caverphone34.caverphone("");
        boolean boolean45 = caverphone34.isCaverphoneEqual("", "1111111111");
        java.lang.String str47 = caverphone34.encode("hi!");
        java.lang.String str49 = caverphone34.encode("");
        org.apache.commons.codec.language.Caverphone caverphone50 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean53 = caverphone50.isCaverphoneEqual("hi!", "");
        java.lang.String str55 = caverphone50.caverphone("");
        boolean boolean58 = caverphone50.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj59 = caverphone34.encode((java.lang.Object) "AA11111111");
        boolean boolean62 = caverphone34.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str64 = caverphone34.encode("1111111111");
        java.lang.String str66 = caverphone34.caverphone("1111111111");
        java.lang.Object obj67 = caverphone0.encode((java.lang.Object) str66);
        java.lang.String str69 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass70 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "AA11111111" + "'", obj59, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "1111111111" + "'", obj67, "1111111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str23 = caverphone0.caverphone("AA11111111");
        boolean boolean26 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str41 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        java.lang.String str34 = caverphone0.encode("");
        boolean boolean37 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("");
        java.lang.String str21 = caverphone0.encode("AA11111111");
        java.lang.String str23 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.encode("hi!");
        boolean boolean13 = caverphone5.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str15 = caverphone5.encode("AA11111111");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "AA11111111" + "'", obj16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass9 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str41 = caverphone0.encode("");
        java.lang.String str43 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str13 = caverphone0.caverphone("");
        java.lang.String str15 = caverphone0.caverphone("1111111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str23 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("1111111111");
        java.lang.String str12 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        java.lang.String str27 = caverphone0.encode("hi!");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str25 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.encode("hi!");
        java.lang.String str13 = caverphone6.caverphone("hi!");
        java.lang.String str15 = caverphone6.caverphone("hi!");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) str15);
        java.lang.String str18 = caverphone0.caverphone("");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str23 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "AA11111111" + "'", obj16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.caverphone("AA11111111");
        java.lang.String str39 = caverphone27.caverphone("AA11111111");
        java.lang.String str41 = caverphone27.caverphone("hi!");
        java.lang.String str43 = caverphone27.caverphone("1111111111");
        java.lang.String str45 = caverphone27.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.caverphone("");
        boolean boolean54 = caverphone46.isCaverphoneEqual("AA11111111", "");
        java.lang.String str56 = caverphone46.caverphone("AA11111111");
        java.lang.String str58 = caverphone46.caverphone("AA11111111");
        java.lang.String str60 = caverphone46.caverphone("hi!");
        java.lang.Object obj61 = caverphone27.encode((java.lang.Object) "hi!");
        java.lang.String str63 = caverphone27.encode("AA11111111");
        java.lang.String str65 = caverphone27.encode("AA11111111");
        java.lang.String str67 = caverphone27.caverphone("hi!");
        java.lang.String str69 = caverphone27.encode("");
        java.lang.String str71 = caverphone27.encode("AA11111111");
        java.lang.String str73 = caverphone27.encode("AA11111111");
        java.lang.String str75 = caverphone27.encode("AA11111111");
        java.lang.Object obj76 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "AA11111111" + "'", obj61, "AA11111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AA11111111" + "'", str71, "AA11111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "AA11111111" + "'", str73, "AA11111111");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "AA11111111" + "'", str75, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "AA11111111" + "'", obj76, "AA11111111");
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str30 = caverphone0.caverphone("AA11111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        boolean boolean15 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str22 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str23 = caverphone0.caverphone("hi!");
        java.lang.Object obj24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = caverphone0.encode(obj24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str38 = caverphone36.caverphone("1111111111");
        java.lang.String str40 = caverphone36.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        boolean boolean44 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str46 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("1111111111", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str36 = caverphone28.encode("");
        java.lang.String str38 = caverphone28.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone39.caverphone("AA11111111");
        java.lang.String str46 = caverphone39.caverphone("");
        java.lang.String str48 = caverphone39.encode("hi!");
        java.lang.Object obj49 = caverphone28.encode((java.lang.Object) str48);
        boolean boolean52 = caverphone28.isCaverphoneEqual("1111111111", "");
        java.lang.String str54 = caverphone28.encode("hi!");
        java.lang.String str56 = caverphone28.caverphone("1111111111");
        java.lang.Object obj57 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone58 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean61 = caverphone58.isCaverphoneEqual("1111111111", "");
        java.lang.String str63 = caverphone58.caverphone("1111111111");
        java.lang.String str65 = caverphone58.encode("");
        java.lang.String str67 = caverphone58.encode("hi!");
        java.lang.String str69 = caverphone58.encode("1111111111");
        java.lang.String str71 = caverphone58.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass72 = caverphone58.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = caverphone0.encode((java.lang.Object) wildcardClass72);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "AA11111111" + "'", obj49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "1111111111" + "'", obj57, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AA11111111" + "'", str71, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str24 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.String str24 = caverphone0.encode("");
        java.lang.String str26 = caverphone0.caverphone("1111111111");
        java.lang.String str28 = caverphone0.caverphone("AA11111111");
        java.lang.String str30 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("");
        java.lang.String str23 = caverphone0.encode("1111111111");
        java.lang.String str25 = caverphone0.encode("AA11111111");
        java.lang.String str27 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.caverphone("AA11111111");
        boolean boolean41 = caverphone28.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass42 = caverphone28.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = caverphone0.encode((java.lang.Object) caverphone28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        java.lang.String str17 = caverphone0.encode("");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        java.lang.Object obj12 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("AA11111111");
        java.lang.String str20 = caverphone13.caverphone("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.encode("hi!");
        java.lang.String str29 = caverphone22.caverphone("1111111111");
        java.lang.String str31 = caverphone22.encode("AA11111111");
        boolean boolean34 = caverphone22.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "1111111111" + "'", obj12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("");
        java.lang.String str17 = caverphone0.encode("");
        java.lang.String str19 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str29 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass30 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("hi!");
        java.lang.String str37 = caverphone0.encode("");
        boolean boolean40 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str42 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass43 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("1111111111", "");
        boolean boolean31 = caverphone25.isCaverphoneEqual("hi!", "hi!");
        boolean boolean34 = caverphone25.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str36 = caverphone25.caverphone("");
        java.lang.String str38 = caverphone25.caverphone("hi!");
        java.lang.String str40 = caverphone25.caverphone("hi!");
        java.lang.String str42 = caverphone25.caverphone("hi!");
        java.lang.String str44 = caverphone25.encode("");
        java.lang.String str46 = caverphone25.caverphone("1111111111");
        java.lang.Object obj47 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str49 = caverphone0.caverphone("AA11111111");
        java.lang.String str51 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        boolean boolean37 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str39 = caverphone0.caverphone("hi!");
        java.lang.String str41 = caverphone0.encode("1111111111");
        boolean boolean44 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.encode("");
        java.lang.String str39 = caverphone0.caverphone("");
        java.lang.String str41 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        boolean boolean31 = caverphone25.isCaverphoneEqual("", "hi!");
        java.lang.String str33 = caverphone25.caverphone("");
        boolean boolean36 = caverphone25.isCaverphoneEqual("", "1111111111");
        java.lang.String str38 = caverphone25.encode("hi!");
        java.lang.String str40 = caverphone25.encode("");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("");
        boolean boolean49 = caverphone41.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj50 = caverphone25.encode((java.lang.Object) "AA11111111");
        boolean boolean53 = caverphone25.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str55 = caverphone25.caverphone("hi!");
        boolean boolean58 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str60 = caverphone25.caverphone("");
        java.lang.String str62 = caverphone25.caverphone("");
        java.lang.String str64 = caverphone25.encode("AA11111111");
        java.lang.Object obj65 = caverphone0.encode((java.lang.Object) str64);
        boolean boolean68 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str70 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "AA11111111" + "'", obj50, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "AA11111111" + "'", obj65, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        boolean boolean37 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("1111111111", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str46 = caverphone38.encode("AA11111111");
        java.lang.String str48 = caverphone38.caverphone("AA11111111");
        java.lang.String str50 = caverphone38.encode("");
        java.lang.Object obj51 = caverphone0.encode((java.lang.Object) str50);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        java.lang.String str27 = caverphone0.caverphone("1111111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("AA11111111");
        java.lang.String str34 = caverphone27.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.caverphone("");
        boolean boolean43 = caverphone35.isCaverphoneEqual("AA11111111", "");
        java.lang.String str45 = caverphone35.caverphone("AA11111111");
        boolean boolean48 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj49 = caverphone27.encode((java.lang.Object) "");
        java.lang.String str51 = caverphone27.caverphone("");
        java.lang.String str53 = caverphone27.caverphone("AA11111111");
        java.lang.Object obj54 = caverphone0.encode((java.lang.Object) str53);
        java.lang.String str56 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "1111111111" + "'", obj49, "1111111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "AA11111111" + "'", obj54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        java.lang.String str41 = caverphone0.encode("AA11111111");
        java.lang.String str43 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        boolean boolean41 = caverphone35.isCaverphoneEqual("", "hi!");
        java.lang.String str43 = caverphone35.caverphone("");
        boolean boolean46 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.String str48 = caverphone35.encode("hi!");
        java.lang.String str50 = caverphone35.encode("");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.caverphone("");
        boolean boolean59 = caverphone51.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj60 = caverphone35.encode((java.lang.Object) "AA11111111");
        boolean boolean63 = caverphone35.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str65 = caverphone35.encode("AA11111111");
        java.lang.Object obj66 = caverphone0.encode((java.lang.Object) str65);
        java.lang.String str68 = caverphone0.caverphone("AA11111111");
        java.lang.String str70 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass71 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "AA11111111" + "'", obj60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "AA11111111" + "'", obj66, "AA11111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AA11111111" + "'", str68, "AA11111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("");
        java.lang.String str20 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.caverphone("");
        boolean boolean29 = caverphone21.isCaverphoneEqual("AA11111111", "");
        java.lang.String str31 = caverphone21.encode("1111111111");
        boolean boolean34 = caverphone21.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str36 = caverphone21.caverphone("hi!");
        java.lang.String str38 = caverphone21.encode("1111111111");
        boolean boolean41 = caverphone21.isCaverphoneEqual("", "AA11111111");
        boolean boolean44 = caverphone21.isCaverphoneEqual("AA11111111", "");
        boolean boolean47 = caverphone21.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str50 = caverphone0.encode("AA11111111");
        java.lang.String str52 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str19 = caverphone0.encode("");
        java.lang.String str21 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        java.lang.String str40 = caverphone0.caverphone("hi!");
        java.lang.String str42 = caverphone0.encode("");
        java.lang.String str44 = caverphone0.encode("AA11111111");
        java.lang.String str46 = caverphone0.encode("AA11111111");
        java.lang.String str48 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone49.caverphone("AA11111111");
        java.lang.String str56 = caverphone49.encode("");
        java.lang.String str58 = caverphone49.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone59 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean62 = caverphone59.isCaverphoneEqual("1111111111", "");
        boolean boolean65 = caverphone59.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str67 = caverphone59.encode("AA11111111");
        java.lang.String str69 = caverphone59.caverphone("AA11111111");
        java.lang.Object obj70 = caverphone49.encode((java.lang.Object) "AA11111111");
        boolean boolean73 = caverphone49.isCaverphoneEqual("1111111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = caverphone0.encode((java.lang.Object) caverphone49);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "AA11111111" + "'", obj70, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.encode("");
        boolean boolean15 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.String str29 = caverphone16.encode("hi!");
        java.lang.String str31 = caverphone16.encode("");
        java.lang.String str33 = caverphone16.caverphone("hi!");
        java.lang.String str35 = caverphone16.encode("hi!");
        boolean boolean38 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str40 = caverphone16.encode("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.String str20 = caverphone0.encode("hi!");
        java.lang.String str22 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.encode("hi!");
        boolean boolean26 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str23 = caverphone0.encode("1111111111");
        boolean boolean26 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str28 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("");
        boolean boolean37 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone29.caverphone("AA11111111");
        boolean boolean42 = caverphone29.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass43 = caverphone29.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = caverphone0.encode((java.lang.Object) wildcardClass43);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.encode("hi!");
        java.lang.String str22 = caverphone15.caverphone("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str28 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("1111111111", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str23 = caverphone15.encode("");
        boolean boolean26 = caverphone15.isCaverphoneEqual("1111111111", "");
        boolean boolean29 = caverphone15.isCaverphoneEqual("", "");
        java.lang.Object obj30 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "1111111111" + "'", obj30, "1111111111");
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("");
        boolean boolean33 = caverphone25.isCaverphoneEqual("AA11111111", "");
        java.lang.String str35 = caverphone25.caverphone("AA11111111");
        boolean boolean38 = caverphone25.isCaverphoneEqual("", "1111111111");
        java.lang.String str40 = caverphone25.caverphone("AA11111111");
        boolean boolean43 = caverphone25.isCaverphoneEqual("", "1111111111");
        boolean boolean46 = caverphone25.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str48 = caverphone25.encode("1111111111");
        boolean boolean51 = caverphone25.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass52 = caverphone25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = caverphone0.encode((java.lang.Object) caverphone25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.Class<?> wildcardClass19 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.encode("1111111111");
        java.lang.String str22 = caverphone0.encode("1111111111");
        java.lang.Object obj23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = caverphone0.encode(obj23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("AA11111111");
        boolean boolean22 = caverphone14.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.encode("hi!");
        java.lang.String str30 = caverphone23.caverphone("1111111111");
        java.lang.String str32 = caverphone23.encode("1111111111");
        java.lang.Object obj33 = caverphone14.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.encode("1111111111");
        java.lang.Object obj45 = caverphone14.encode((java.lang.Object) str44);
        boolean boolean48 = caverphone14.isCaverphoneEqual("", "1111111111");
        java.lang.String str50 = caverphone14.encode("AA11111111");
        java.lang.String str52 = caverphone14.encode("");
        java.lang.String str54 = caverphone14.encode("");
        java.lang.Object obj55 = caverphone0.encode((java.lang.Object) str54);
        boolean boolean58 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str18 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.encode("hi!");
        java.lang.String str26 = caverphone19.caverphone("AA11111111");
        java.lang.String str28 = caverphone19.caverphone("1111111111");
        java.lang.String str30 = caverphone19.encode("");
        boolean boolean33 = caverphone19.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Class<?> wildcardClass34 = caverphone19.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = caverphone0.encode((java.lang.Object) wildcardClass34);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.Class<?> wildcardClass27 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        java.lang.String str36 = caverphone0.caverphone("");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str41 = caverphone0.encode("hi!");
        java.lang.String str43 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.caverphone("AA11111111");
        boolean boolean27 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj28 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("");
        boolean boolean37 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone29.caverphone("AA11111111");
        java.lang.String str41 = caverphone29.caverphone("AA11111111");
        java.lang.String str43 = caverphone29.caverphone("AA11111111");
        boolean boolean46 = caverphone29.isCaverphoneEqual("", "1111111111");
        java.lang.String str48 = caverphone29.encode("AA11111111");
        java.lang.String str50 = caverphone29.encode("hi!");
        java.lang.String str52 = caverphone29.caverphone("");
        java.lang.Class<?> wildcardClass53 = caverphone29.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = caverphone0.encode((java.lang.Object) wildcardClass53);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "AA11111111" + "'", obj28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("");
        java.lang.String str23 = caverphone0.encode("1111111111");
        java.lang.String str25 = caverphone0.encode("AA11111111");
        java.lang.String str27 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass28 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        java.lang.String str36 = caverphone0.caverphone("");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        boolean boolean41 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        boolean boolean31 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone32.encode("1111111111");
        boolean boolean45 = caverphone32.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj47 = caverphone32.encode((java.lang.Object) "AA11111111");
        boolean boolean50 = caverphone32.isCaverphoneEqual("", "hi!");
        java.lang.String str52 = caverphone32.caverphone("AA11111111");
        java.lang.String str54 = caverphone32.encode("");
        java.lang.String str56 = caverphone32.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = caverphone0.encode((java.lang.Object) caverphone32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone0.caverphone("AA11111111");
        java.lang.String str22 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("1111111111");
        java.lang.String str9 = caverphone0.encode("AA11111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.caverphone("AA11111111");
        java.lang.String str25 = caverphone13.caverphone("AA11111111");
        java.lang.String str27 = caverphone13.encode("hi!");
        java.lang.String str29 = caverphone13.caverphone("1111111111");
        java.lang.Class<?> wildcardClass30 = caverphone13.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = caverphone0.encode((java.lang.Object) wildcardClass30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.encode("");
        java.lang.String str39 = caverphone0.caverphone("AA11111111");
        java.lang.String str41 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        java.lang.String str36 = caverphone0.caverphone("hi!");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        java.lang.String str24 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("1111111111", "");
        boolean boolean31 = caverphone25.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str33 = caverphone25.encode("");
        java.lang.String str35 = caverphone25.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("AA11111111");
        java.lang.String str43 = caverphone36.caverphone("");
        java.lang.String str45 = caverphone36.encode("hi!");
        java.lang.Object obj46 = caverphone25.encode((java.lang.Object) str45);
        boolean boolean49 = caverphone25.isCaverphoneEqual("1111111111", "");
        java.lang.String str51 = caverphone25.encode("hi!");
        java.lang.String str53 = caverphone25.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass54 = caverphone25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = caverphone0.encode((java.lang.Object) caverphone25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "AA11111111" + "'", obj46, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("");
        java.lang.String str11 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.String str21 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        java.lang.String str24 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.caverphone("");
        boolean boolean43 = caverphone35.isCaverphoneEqual("AA11111111", "");
        java.lang.String str45 = caverphone35.caverphone("AA11111111");
        java.lang.String str47 = caverphone35.caverphone("hi!");
        java.lang.String str49 = caverphone35.caverphone("1111111111");
        java.lang.Class<?> wildcardClass50 = caverphone35.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) wildcardClass50);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.Class<?> wildcardClass27 = caverphone23.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = caverphone0.encode((java.lang.Object) caverphone23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.caverphone("AA11111111");
        boolean boolean13 = caverphone5.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("1111111111");
        java.lang.Object obj24 = caverphone5.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone5.caverphone("1111111111");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str35 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str8 = caverphone6.caverphone("1111111111");
        java.lang.String str10 = caverphone6.caverphone("1111111111");
        java.lang.String str12 = caverphone6.caverphone("AA11111111");
        java.lang.Object obj13 = caverphone0.encode((java.lang.Object) str12);
        java.lang.String str15 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.String str26 = caverphone16.encode("");
        boolean boolean29 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj30 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass35 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "AA11111111" + "'", obj13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "AA11111111" + "'", obj30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone21.caverphone("1111111111");
        java.lang.String str28 = caverphone21.encode("");
        boolean boolean31 = caverphone21.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str33 = caverphone21.caverphone("1111111111");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.caverphone("1111111111");
        java.lang.String str40 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.caverphone("1111111111");
        java.lang.String str25 = caverphone0.caverphone("1111111111");
        java.lang.String str27 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str35 = caverphone0.encode("AA11111111");
        boolean boolean38 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        java.lang.String str17 = caverphone0.encode("");
        java.lang.String str19 = caverphone0.encode("1111111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.encode("hi!");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        java.lang.String str41 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        java.lang.String str47 = caverphone42.caverphone("");
        boolean boolean50 = caverphone42.isCaverphoneEqual("AA11111111", "");
        java.lang.String str52 = caverphone42.encode("1111111111");
        boolean boolean55 = caverphone42.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str57 = caverphone42.caverphone("hi!");
        java.lang.String str59 = caverphone42.encode("1111111111");
        boolean boolean62 = caverphone42.isCaverphoneEqual("", "AA11111111");
        boolean boolean65 = caverphone42.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str67 = caverphone42.caverphone("");
        java.lang.Object obj68 = caverphone0.encode((java.lang.Object) str67);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "1111111111" + "'", obj68, "1111111111");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean32 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str34 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.encode("hi!");
        java.lang.String str36 = caverphone29.caverphone("hi!");
        java.lang.String str38 = caverphone29.encode("1111111111");
        java.lang.String str40 = caverphone29.caverphone("AA11111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        boolean boolean48 = caverphone42.isCaverphoneEqual("", "hi!");
        java.lang.String str50 = caverphone42.encode("hi!");
        java.lang.String str52 = caverphone42.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = caverphone0.encode((java.lang.Object) caverphone42);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        boolean boolean38 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str24 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str41 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass10 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone0.caverphone("AA11111111");
        java.lang.String str22 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        boolean boolean29 = caverphone23.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.encode("hi!");
        java.lang.String str37 = caverphone30.caverphone("1111111111");
        java.lang.Object obj38 = caverphone23.encode((java.lang.Object) str37);
        java.lang.String str40 = caverphone23.caverphone("1111111111");
        boolean boolean43 = caverphone23.isCaverphoneEqual("", "");
        java.lang.String str45 = caverphone23.caverphone("hi!");
        java.lang.String str47 = caverphone23.encode("");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) str47);
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone49.caverphone("");
        boolean boolean57 = caverphone49.isCaverphoneEqual("AA11111111", "");
        java.lang.String str59 = caverphone49.caverphone("AA11111111");
        boolean boolean62 = caverphone49.isCaverphoneEqual("", "1111111111");
        java.lang.String str64 = caverphone49.caverphone("AA11111111");
        boolean boolean67 = caverphone49.isCaverphoneEqual("", "1111111111");
        boolean boolean70 = caverphone49.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str72 = caverphone49.encode("1111111111");
        boolean boolean75 = caverphone49.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str77 = caverphone49.caverphone("1111111111");
        java.lang.Object obj78 = caverphone0.encode((java.lang.Object) str77);
        java.lang.Class<?> wildcardClass79 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "1111111111" + "'", str77, "1111111111");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "1111111111" + "'", obj78, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str38 = caverphone36.caverphone("1111111111");
        java.lang.String str40 = caverphone36.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        boolean boolean44 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone0.encode("");
        java.lang.String str48 = caverphone0.caverphone("AA11111111");
        java.lang.String str50 = caverphone0.encode("1111111111");
        boolean boolean53 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        boolean boolean10 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        java.lang.String str29 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("1111111111", "");
        boolean boolean36 = caverphone30.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone30.encode("");
        java.lang.String str40 = caverphone30.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("AA11111111");
        java.lang.String str48 = caverphone41.caverphone("");
        java.lang.String str50 = caverphone41.encode("hi!");
        java.lang.Object obj51 = caverphone30.encode((java.lang.Object) str50);
        boolean boolean54 = caverphone30.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj55 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str57 = caverphone0.encode("hi!");
        java.lang.String str59 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "AA11111111" + "'", obj51, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        boolean boolean29 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.String str31 = caverphone16.caverphone("AA11111111");
        boolean boolean34 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone16.caverphone("AA11111111");
        java.lang.String str38 = caverphone16.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("1111111111", "");
        boolean boolean45 = caverphone39.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str47 = caverphone39.encode("AA11111111");
        java.lang.String str49 = caverphone39.encode("");
        boolean boolean52 = caverphone39.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str54 = caverphone39.caverphone("hi!");
        java.lang.Object obj55 = caverphone16.encode((java.lang.Object) "hi!");
        java.lang.String str57 = caverphone16.encode("AA11111111");
        java.lang.Object obj58 = caverphone0.encode((java.lang.Object) str57);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "AA11111111" + "'", obj55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        boolean boolean27 = caverphone14.isCaverphoneEqual("", "1111111111");
        java.lang.String str29 = caverphone14.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        boolean boolean36 = caverphone30.isCaverphoneEqual("", "hi!");
        java.lang.String str38 = caverphone30.caverphone("");
        boolean boolean41 = caverphone30.isCaverphoneEqual("", "1111111111");
        boolean boolean44 = caverphone30.isCaverphoneEqual("", "");
        java.lang.String str46 = caverphone30.caverphone("hi!");
        java.lang.String str48 = caverphone30.caverphone("");
        java.lang.String str50 = caverphone30.caverphone("hi!");
        java.lang.String str52 = caverphone30.encode("");
        java.lang.String str54 = caverphone30.caverphone("AA11111111");
        java.lang.Object obj55 = caverphone14.encode((java.lang.Object) str54);
        java.lang.String str57 = caverphone14.caverphone("hi!");
        java.lang.Class<?> wildcardClass58 = caverphone14.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "AA11111111" + "'", obj55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        boolean boolean12 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass17 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        boolean boolean11 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("AA11111111");
        boolean boolean24 = caverphone16.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone16.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.encode("1111111111");
        java.lang.Object obj47 = caverphone16.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode(obj47);
        java.lang.String str50 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass51 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        boolean boolean26 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean29 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.Class<?> wildcardClass30 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("1111111111", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str25 = caverphone17.caverphone("AA11111111");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) str25);
        java.lang.String str28 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = caverphone0.encode((java.lang.Object) 1.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean25 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.String str20 = caverphone0.encode("hi!");
        java.lang.String str22 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        java.lang.String str18 = caverphone11.caverphone("");
        java.lang.String str20 = caverphone11.encode("hi!");
        java.lang.Object obj21 = caverphone0.encode((java.lang.Object) str20);
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean27 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "AA11111111" + "'", obj21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.caverphone("");
        boolean boolean30 = caverphone22.isCaverphoneEqual("AA11111111", "");
        java.lang.String str32 = caverphone22.caverphone("AA11111111");
        java.lang.String str34 = caverphone22.caverphone("hi!");
        java.lang.String str36 = caverphone22.caverphone("1111111111");
        java.lang.Class<?> wildcardClass37 = caverphone22.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = caverphone0.encode((java.lang.Object) caverphone22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("AA11111111");
        boolean boolean24 = caverphone16.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone16.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.encode("1111111111");
        java.lang.Object obj47 = caverphone16.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode(obj47);
        java.lang.String str50 = caverphone0.caverphone("");
        java.lang.String str52 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass53 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str23 = caverphone0.encode("1111111111");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("1111111111", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("hi!", "hi!");
        boolean boolean35 = caverphone26.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str37 = caverphone26.caverphone("");
        java.lang.String str39 = caverphone26.encode("hi!");
        java.lang.String str41 = caverphone26.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        boolean boolean48 = caverphone42.isCaverphoneEqual("", "hi!");
        java.lang.String str50 = caverphone42.caverphone("");
        boolean boolean53 = caverphone42.isCaverphoneEqual("", "1111111111");
        java.lang.String str55 = caverphone42.encode("hi!");
        java.lang.Object obj56 = caverphone26.encode((java.lang.Object) "hi!");
        java.lang.String str58 = caverphone26.caverphone("AA11111111");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) str58);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "AA11111111" + "'", obj56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "AA11111111" + "'", obj59, "AA11111111");
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.encode("hi!");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        java.lang.String str41 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str18 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("1111111111", "");
        boolean boolean25 = caverphone19.isCaverphoneEqual("hi!", "hi!");
        boolean boolean28 = caverphone19.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str30 = caverphone19.caverphone("");
        java.lang.String str32 = caverphone19.encode("");
        java.lang.String str34 = caverphone19.encode("1111111111");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.encode("hi!");
        java.lang.String str43 = caverphone36.caverphone("1111111111");
        java.lang.String str45 = caverphone36.encode("");
        java.lang.String str47 = caverphone36.caverphone("AA11111111");
        java.lang.String str49 = caverphone36.encode("");
        boolean boolean52 = caverphone36.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str54 = caverphone36.encode("AA11111111");
        java.lang.Object obj55 = caverphone0.encode((java.lang.Object) str54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "AA11111111" + "'", obj55, "AA11111111");
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.caverphone("AA11111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("", "");
        java.lang.String str42 = caverphone27.caverphone("");
        java.lang.String str44 = caverphone27.encode("1111111111");
        java.lang.Class<?> wildcardClass45 = caverphone27.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = caverphone0.encode((java.lang.Object) caverphone27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        java.lang.String str24 = caverphone0.encode("");
        java.lang.String str26 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass27 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.encode("hi!");
        java.lang.String str17 = caverphone10.caverphone("AA11111111");
        java.lang.String str19 = caverphone10.caverphone("hi!");
        java.lang.String str21 = caverphone10.caverphone("hi!");
        java.lang.String str23 = caverphone10.caverphone("1111111111");
        java.lang.Object obj24 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        java.lang.String str30 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.caverphone("AA11111111");
        boolean boolean13 = caverphone5.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("1111111111");
        java.lang.Object obj24 = caverphone5.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone5.caverphone("1111111111");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.encode("hi!");
        java.lang.String str38 = caverphone31.caverphone("AA11111111");
        java.lang.String str40 = caverphone31.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.encode("hi!");
        java.lang.String str48 = caverphone41.caverphone("AA11111111");
        java.lang.String str50 = caverphone41.caverphone("hi!");
        java.lang.String str52 = caverphone41.caverphone("hi!");
        java.lang.String str54 = caverphone41.caverphone("1111111111");
        java.lang.Object obj55 = caverphone31.encode((java.lang.Object) "1111111111");
        java.lang.String str57 = caverphone31.encode("AA11111111");
        java.lang.String str59 = caverphone31.caverphone("1111111111");
        java.lang.Object obj60 = caverphone0.encode((java.lang.Object) str59);
        java.lang.String str62 = caverphone0.caverphone("hi!");
        boolean boolean65 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        boolean boolean35 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str37 = caverphone0.caverphone("AA11111111");
        java.lang.String str39 = caverphone0.caverphone("1111111111");
        java.lang.String str41 = caverphone0.encode("1111111111");
        java.lang.String str43 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.encode("");
        boolean boolean10 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str30 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("");
        java.lang.String str34 = caverphone0.encode("");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.String str47 = caverphone37.caverphone("AA11111111");
        java.lang.String str49 = caverphone37.caverphone("AA11111111");
        java.lang.String str51 = caverphone37.caverphone("hi!");
        java.lang.String str53 = caverphone37.caverphone("1111111111");
        java.lang.String str55 = caverphone37.encode("1111111111");
        java.lang.Object obj56 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean59 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "1111111111" + "'", obj56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj11 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("1111111111");
        java.lang.String str28 = caverphone14.caverphone("");
        java.lang.String str30 = caverphone14.encode("hi!");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) "hi!");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("1111111111", "");
        boolean boolean38 = caverphone32.isCaverphoneEqual("hi!", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj43 = caverphone32.encode((java.lang.Object) "1111111111");
        java.lang.String str45 = caverphone32.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.caverphone("");
        boolean boolean54 = caverphone46.isCaverphoneEqual("AA11111111", "");
        java.lang.String str56 = caverphone46.caverphone("AA11111111");
        java.lang.String str58 = caverphone46.caverphone("1111111111");
        java.lang.String str60 = caverphone46.caverphone("");
        java.lang.String str62 = caverphone46.encode("hi!");
        java.lang.Object obj63 = caverphone32.encode((java.lang.Object) "hi!");
        boolean boolean66 = caverphone32.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass67 = caverphone32.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = caverphone0.encode((java.lang.Object) caverphone32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "1111111111" + "'", obj11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "AA11111111" + "'", obj31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "AA11111111" + "'", obj63, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str27 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("1111111111", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str36 = caverphone28.encode("AA11111111");
        java.lang.String str38 = caverphone28.encode("");
        java.lang.String str40 = caverphone28.caverphone("");
        java.lang.String str42 = caverphone28.caverphone("1111111111");
        java.lang.String str44 = caverphone28.caverphone("hi!");
        boolean boolean47 = caverphone28.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.encode("AA11111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        java.lang.String str28 = caverphone16.caverphone("AA11111111");
        java.lang.String str30 = caverphone16.caverphone("hi!");
        java.lang.String str32 = caverphone16.caverphone("1111111111");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str35 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass36 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("1111111111");
        java.lang.String str21 = caverphone0.caverphone("");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass30 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.encode("hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        java.lang.String str27 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.encode("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("AA11111111");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("");
        boolean boolean31 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        java.lang.String str35 = caverphone23.caverphone("hi!");
        java.lang.String str37 = caverphone23.caverphone("hi!");
        java.lang.String str39 = caverphone23.encode("hi!");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        java.lang.String str27 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.caverphone("AA11111111");
        java.lang.String str40 = caverphone28.caverphone("AA11111111");
        java.lang.String str42 = caverphone28.caverphone("AA11111111");
        java.lang.String str44 = caverphone28.caverphone("");
        java.lang.Object obj45 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.caverphone("AA11111111");
        java.lang.String str53 = caverphone46.encode("");
        java.lang.String str55 = caverphone46.caverphone("1111111111");
        java.lang.String str57 = caverphone46.caverphone("");
        java.lang.String str59 = caverphone46.encode("");
        boolean boolean62 = caverphone46.isCaverphoneEqual("", "AA11111111");
        java.lang.String str64 = caverphone46.caverphone("hi!");
        java.lang.Object obj65 = caverphone0.encode((java.lang.Object) str64);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "AA11111111" + "'", obj65, "AA11111111");
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        boolean boolean28 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str30 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("AA11111111");
        java.lang.String str38 = caverphone31.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone39 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean42 = caverphone39.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone39.caverphone("");
        boolean boolean47 = caverphone39.isCaverphoneEqual("AA11111111", "");
        java.lang.String str49 = caverphone39.caverphone("AA11111111");
        boolean boolean52 = caverphone39.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj53 = caverphone31.encode((java.lang.Object) "");
        boolean boolean56 = caverphone31.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str58 = caverphone31.encode("hi!");
        java.lang.String str60 = caverphone31.caverphone("1111111111");
        java.lang.String str62 = caverphone31.caverphone("1111111111");
        java.lang.Object obj63 = caverphone0.encode((java.lang.Object) str62);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "1111111111" + "'", obj53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "1111111111" + "'", obj63, "1111111111");
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.encode("hi!");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str28 = caverphone13.caverphone("hi!");
        java.lang.String str30 = caverphone13.encode("1111111111");
        boolean boolean33 = caverphone13.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone13.isCaverphoneEqual("AA11111111", "");
        boolean boolean39 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.String str41 = caverphone13.caverphone("hi!");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) str41);
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("1111111111", "");
        boolean boolean49 = caverphone43.isCaverphoneEqual("hi!", "hi!");
        boolean boolean52 = caverphone43.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str54 = caverphone43.caverphone("");
        java.lang.String str56 = caverphone43.caverphone("hi!");
        java.lang.String str58 = caverphone43.caverphone("hi!");
        java.lang.String str60 = caverphone43.caverphone("hi!");
        java.lang.String str62 = caverphone43.encode("");
        java.lang.Object obj63 = caverphone0.encode((java.lang.Object) str62);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "AA11111111" + "'", obj42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "1111111111" + "'", obj63, "1111111111");
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        java.lang.String str36 = caverphone0.caverphone("");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str41 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass42 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        java.lang.String str24 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass25 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        java.lang.String str29 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        java.lang.String str27 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.caverphone("AA11111111");
        java.lang.String str40 = caverphone28.caverphone("AA11111111");
        java.lang.String str42 = caverphone28.caverphone("AA11111111");
        java.lang.String str44 = caverphone28.caverphone("");
        java.lang.Object obj45 = caverphone0.encode((java.lang.Object) "");
        boolean boolean48 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone49 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean52 = caverphone49.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone49.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone55 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str57 = caverphone55.caverphone("1111111111");
        java.lang.String str59 = caverphone55.caverphone("1111111111");
        java.lang.String str61 = caverphone55.caverphone("AA11111111");
        java.lang.Object obj62 = caverphone49.encode((java.lang.Object) str61);
        boolean boolean65 = caverphone49.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str67 = caverphone49.caverphone("hi!");
        java.lang.Object obj68 = caverphone0.encode((java.lang.Object) str67);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "AA11111111" + "'", obj62, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "AA11111111" + "'", obj68, "AA11111111");
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str31 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("AA11111111");
        boolean boolean27 = caverphone19.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.encode("hi!");
        java.lang.String str35 = caverphone28.caverphone("1111111111");
        java.lang.String str37 = caverphone28.encode("1111111111");
        java.lang.Object obj38 = caverphone19.encode((java.lang.Object) "1111111111");
        java.lang.String str40 = caverphone19.caverphone("1111111111");
        boolean boolean43 = caverphone19.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str45 = caverphone19.caverphone("1111111111");
        java.lang.String str47 = caverphone19.encode("AA11111111");
        java.lang.String str49 = caverphone19.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone50 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean53 = caverphone50.isCaverphoneEqual("hi!", "");
        java.lang.String str55 = caverphone50.caverphone("");
        boolean boolean58 = caverphone50.isCaverphoneEqual("AA11111111", "");
        java.lang.String str60 = caverphone50.caverphone("AA11111111");
        boolean boolean63 = caverphone50.isCaverphoneEqual("", "1111111111");
        java.lang.String str65 = caverphone50.caverphone("AA11111111");
        boolean boolean68 = caverphone50.isCaverphoneEqual("", "1111111111");
        boolean boolean71 = caverphone50.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str73 = caverphone50.encode("1111111111");
        java.lang.String str75 = caverphone50.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone76 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean79 = caverphone76.isCaverphoneEqual("hi!", "");
        boolean boolean82 = caverphone76.isCaverphoneEqual("", "hi!");
        java.lang.String str84 = caverphone76.caverphone("");
        java.lang.String str86 = caverphone76.caverphone("");
        java.lang.Object obj87 = caverphone50.encode((java.lang.Object) "");
        boolean boolean90 = caverphone50.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj91 = caverphone19.encode((java.lang.Object) "1111111111");
        java.lang.String str93 = caverphone19.caverphone("");
        java.lang.Object obj94 = caverphone0.encode((java.lang.Object) str93);
        boolean boolean97 = caverphone0.isCaverphoneEqual("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AA11111111" + "'", str49, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1111111111" + "'", str73, "1111111111");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "AA11111111" + "'", str75, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "1111111111" + "'", str84, "1111111111");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "1111111111" + "'", str86, "1111111111");
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "1111111111" + "'", obj87, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + "1111111111" + "'", obj91, "1111111111");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "1111111111" + "'", str93, "1111111111");
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + "1111111111" + "'", obj94, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.encode("");
        java.lang.String str39 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass40 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("");
        java.lang.String str20 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("", "hi!");
        java.lang.String str25 = caverphone17.encode("hi!");
        java.lang.String str27 = caverphone17.caverphone("1111111111");
        java.lang.Object obj28 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "1111111111" + "'", obj28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        boolean boolean22 = caverphone8.isCaverphoneEqual("", "");
        boolean boolean25 = caverphone8.isCaverphoneEqual("", "");
        java.lang.String str27 = caverphone8.caverphone("");
        boolean boolean30 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str33 = caverphone0.caverphone("AA11111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "AA11111111" + "'", obj31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.encode("1111111111");
        boolean boolean47 = caverphone34.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj52 = caverphone34.encode((java.lang.Object) "");
        java.lang.String str54 = caverphone34.caverphone("1111111111");
        java.lang.String str56 = caverphone34.encode("hi!");
        java.lang.String str58 = caverphone34.caverphone("1111111111");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) str58);
        org.apache.commons.codec.language.Caverphone caverphone60 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean63 = caverphone60.isCaverphoneEqual("1111111111", "");
        java.lang.String str65 = caverphone60.caverphone("1111111111");
        java.lang.String str67 = caverphone60.encode("");
        boolean boolean70 = caverphone60.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj71 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str73 = caverphone0.encode("1111111111");
        java.lang.String str75 = caverphone0.encode("");
        boolean boolean78 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str80 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1111111111" + "'", str73, "1111111111");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "1111111111" + "'", str75, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "1111111111" + "'", str80, "1111111111");
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        java.lang.String str21 = caverphone0.encode("hi!");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str26 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone27.caverphone("");
        boolean boolean38 = caverphone27.isCaverphoneEqual("", "1111111111");
        java.lang.String str40 = caverphone27.encode("hi!");
        java.lang.String str42 = caverphone27.encode("");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("hi!", "");
        java.lang.String str48 = caverphone43.caverphone("");
        boolean boolean51 = caverphone43.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj52 = caverphone27.encode((java.lang.Object) "AA11111111");
        boolean boolean55 = caverphone27.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str57 = caverphone27.caverphone("hi!");
        boolean boolean60 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str62 = caverphone27.caverphone("");
        java.lang.String str64 = caverphone27.caverphone("");
        java.lang.String str66 = caverphone27.encode("AA11111111");
        java.lang.String str68 = caverphone27.encode("AA11111111");
        java.lang.String str70 = caverphone27.encode("AA11111111");
        java.lang.Object obj71 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "AA11111111" + "'", obj52, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AA11111111" + "'", str66, "AA11111111");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AA11111111" + "'", str68, "AA11111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AA11111111" + "'", str70, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "AA11111111" + "'", obj71, "AA11111111");
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.encode("hi!");
        java.lang.String str31 = caverphone24.caverphone("1111111111");
        java.lang.String str33 = caverphone24.encode("1111111111");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str38 = caverphone36.caverphone("1111111111");
        java.lang.String str40 = caverphone36.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        boolean boolean44 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone0.encode("");
        java.lang.String str48 = caverphone0.caverphone("AA11111111");
        java.lang.String str50 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        boolean boolean57 = caverphone51.isCaverphoneEqual("", "hi!");
        java.lang.String str59 = caverphone51.caverphone("");
        boolean boolean62 = caverphone51.isCaverphoneEqual("", "1111111111");
        boolean boolean65 = caverphone51.isCaverphoneEqual("", "");
        java.lang.String str67 = caverphone51.caverphone("hi!");
        java.lang.String str69 = caverphone51.caverphone("");
        java.lang.String str71 = caverphone51.caverphone("hi!");
        java.lang.String str73 = caverphone51.caverphone("");
        boolean boolean76 = caverphone51.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj77 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str79 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AA11111111" + "'", str67, "AA11111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AA11111111" + "'", str71, "AA11111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1111111111" + "'", str73, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "1111111111" + "'", obj77, "1111111111");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "1111111111" + "'", str79, "1111111111");
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("");
        boolean boolean33 = caverphone25.isCaverphoneEqual("AA11111111", "");
        java.lang.String str35 = caverphone25.caverphone("AA11111111");
        java.lang.String str37 = caverphone25.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone38.caverphone("");
        boolean boolean49 = caverphone38.isCaverphoneEqual("", "1111111111");
        boolean boolean52 = caverphone38.isCaverphoneEqual("", "");
        java.lang.String str54 = caverphone38.caverphone("hi!");
        java.lang.String str56 = caverphone38.caverphone("");
        java.lang.String str58 = caverphone38.caverphone("hi!");
        java.lang.Object obj59 = caverphone25.encode((java.lang.Object) str58);
        java.lang.Class<?> wildcardClass60 = caverphone25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = caverphone0.encode((java.lang.Object) caverphone25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "AA11111111" + "'", obj15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "AA11111111" + "'", obj59, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("AA11111111");
        boolean boolean24 = caverphone16.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone16.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.encode("1111111111");
        java.lang.Object obj47 = caverphone16.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode(obj47);
        boolean boolean51 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean54 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str23 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.encode("hi!");
        java.lang.String str41 = caverphone34.caverphone("AA11111111");
        java.lang.String str43 = caverphone34.caverphone("hi!");
        boolean boolean46 = caverphone34.isCaverphoneEqual("", "AA11111111");
        java.lang.Object obj47 = caverphone0.encode((java.lang.Object) "");
        boolean boolean50 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str52 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass53 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.encode("AA11111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        boolean boolean43 = caverphone37.isCaverphoneEqual("", "hi!");
        java.lang.String str45 = caverphone37.caverphone("");
        boolean boolean48 = caverphone37.isCaverphoneEqual("", "1111111111");
        java.lang.String str50 = caverphone37.encode("hi!");
        java.lang.String str52 = caverphone37.encode("");
        org.apache.commons.codec.language.Caverphone caverphone53 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean56 = caverphone53.isCaverphoneEqual("hi!", "");
        java.lang.String str58 = caverphone53.caverphone("");
        boolean boolean61 = caverphone53.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj62 = caverphone37.encode((java.lang.Object) "AA11111111");
        boolean boolean65 = caverphone37.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass66 = caverphone37.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = caverphone0.encode((java.lang.Object) wildcardClass66);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "AA11111111" + "'", obj62, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.encode("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        java.lang.String str38 = caverphone0.encode("");
        java.lang.String str40 = caverphone0.encode("");
        java.lang.String str42 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("");
        boolean boolean25 = caverphone17.isCaverphoneEqual("AA11111111", "");
        java.lang.String str27 = caverphone17.caverphone("AA11111111");
        java.lang.String str29 = caverphone17.caverphone("AA11111111");
        java.lang.String str31 = caverphone17.caverphone("hi!");
        java.lang.String str33 = caverphone17.caverphone("hi!");
        java.lang.String str35 = caverphone17.encode("");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "");
        boolean boolean39 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone0.caverphone("AA11111111");
        java.lang.String str22 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        boolean boolean29 = caverphone23.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.encode("hi!");
        java.lang.String str37 = caverphone30.caverphone("1111111111");
        java.lang.Object obj38 = caverphone23.encode((java.lang.Object) str37);
        java.lang.String str40 = caverphone23.caverphone("1111111111");
        boolean boolean43 = caverphone23.isCaverphoneEqual("", "");
        java.lang.String str45 = caverphone23.caverphone("hi!");
        java.lang.String str47 = caverphone23.encode("");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) str47);
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.encode("1111111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj45 = caverphone27.encode((java.lang.Object) "");
        java.lang.String str47 = caverphone27.caverphone("hi!");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) str47);
        java.lang.String str50 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.encode("");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str44 = caverphone0.caverphone("");
        java.lang.String str46 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.caverphone("");
        boolean boolean29 = caverphone21.isCaverphoneEqual("AA11111111", "");
        java.lang.String str31 = caverphone21.caverphone("AA11111111");
        boolean boolean34 = caverphone21.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone21.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        boolean boolean43 = caverphone37.isCaverphoneEqual("", "hi!");
        java.lang.String str45 = caverphone37.caverphone("");
        boolean boolean48 = caverphone37.isCaverphoneEqual("", "1111111111");
        boolean boolean51 = caverphone37.isCaverphoneEqual("", "");
        java.lang.String str53 = caverphone37.caverphone("hi!");
        java.lang.String str55 = caverphone37.caverphone("");
        java.lang.String str57 = caverphone37.caverphone("hi!");
        java.lang.String str59 = caverphone37.encode("");
        java.lang.String str61 = caverphone37.caverphone("AA11111111");
        java.lang.Object obj62 = caverphone21.encode((java.lang.Object) str61);
        java.lang.Object obj63 = caverphone0.encode(obj62);
        org.apache.commons.codec.language.Caverphone caverphone64 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean67 = caverphone64.isCaverphoneEqual("hi!", "");
        java.lang.String str69 = caverphone64.caverphone("");
        boolean boolean72 = caverphone64.isCaverphoneEqual("AA11111111", "");
        java.lang.String str74 = caverphone64.encode("1111111111");
        boolean boolean77 = caverphone64.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str79 = caverphone64.caverphone("hi!");
        java.lang.String str81 = caverphone64.encode("AA11111111");
        boolean boolean84 = caverphone64.isCaverphoneEqual("", "");
        java.lang.Object obj85 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str87 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "AA11111111" + "'", obj62, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "AA11111111" + "'", obj63, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "1111111111" + "'", str74, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "AA11111111" + "'", str79, "AA11111111");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AA11111111" + "'", str81, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "1111111111" + "'", obj85, "1111111111");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "AA11111111" + "'", str87, "AA11111111");
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.caverphone("");
        java.lang.String str34 = caverphone0.encode("");
        java.lang.String str36 = caverphone0.caverphone("AA11111111");
        java.lang.String str38 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass39 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean16 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str18 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("1111111111", "");
        boolean boolean25 = caverphone19.isCaverphoneEqual("hi!", "hi!");
        boolean boolean28 = caverphone19.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str30 = caverphone19.caverphone("");
        java.lang.String str32 = caverphone19.encode("");
        java.lang.String str34 = caverphone19.encode("1111111111");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        boolean boolean38 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Object obj39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = caverphone0.encode(obj39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("1111111111", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str20 = caverphone12.encode("");
        java.lang.String str22 = caverphone12.encode("hi!");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) str22);
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "AA11111111" + "'", obj23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.caverphone("");
        boolean boolean15 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str17 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.encode("hi!");
        java.lang.String str20 = caverphone13.caverphone("hi!");
        java.lang.String str22 = caverphone13.caverphone("hi!");
        java.lang.String str24 = caverphone13.caverphone("hi!");
        java.lang.String str26 = caverphone13.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = caverphone0.encode((java.lang.Object) caverphone13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        boolean boolean27 = caverphone21.isCaverphoneEqual("", "hi!");
        java.lang.String str29 = caverphone21.caverphone("");
        boolean boolean32 = caverphone21.isCaverphoneEqual("", "1111111111");
        java.lang.String str34 = caverphone21.encode("hi!");
        java.lang.String str36 = caverphone21.encode("");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj46 = caverphone21.encode((java.lang.Object) "AA11111111");
        java.lang.String str48 = caverphone21.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass49 = caverphone21.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = caverphone0.encode((java.lang.Object) caverphone21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "AA11111111" + "'", obj46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str19 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj29 = caverphone16.encode((java.lang.Object) "");
        java.lang.Object obj30 = caverphone0.encode(obj29);
        java.lang.Class<?> wildcardClass31 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "1111111111" + "'", obj29, "1111111111");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "1111111111" + "'", obj30, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass9 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str20 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone21.caverphone("1111111111");
        java.lang.String str28 = caverphone21.encode("");
        java.lang.String str30 = caverphone21.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.caverphone("");
        boolean boolean39 = caverphone31.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone31.encode("1111111111");
        boolean boolean44 = caverphone31.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str46 = caverphone31.encode("AA11111111");
        java.lang.Object obj47 = caverphone21.encode((java.lang.Object) str46);
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) str46);
        boolean boolean51 = caverphone0.isCaverphoneEqual("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str16 = caverphone14.caverphone("1111111111");
        java.lang.String str18 = caverphone14.caverphone("1111111111");
        java.lang.String str20 = caverphone14.encode("hi!");
        boolean boolean23 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj24 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("");
        boolean boolean33 = caverphone25.isCaverphoneEqual("AA11111111", "");
        java.lang.String str35 = caverphone25.caverphone("AA11111111");
        java.lang.String str37 = caverphone25.caverphone("hi!");
        java.lang.Object obj38 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "AA11111111" + "'", obj38, "AA11111111");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        java.lang.String str32 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        boolean boolean5 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        boolean boolean12 = caverphone6.isCaverphoneEqual("", "hi!");
        java.lang.String str14 = caverphone6.caverphone("");
        boolean boolean17 = caverphone6.isCaverphoneEqual("", "1111111111");
        java.lang.String str19 = caverphone6.encode("hi!");
        java.lang.String str21 = caverphone6.encode("");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.caverphone("");
        boolean boolean30 = caverphone22.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj31 = caverphone6.encode((java.lang.Object) "AA11111111");
        boolean boolean34 = caverphone6.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone6.encode("1111111111");
        java.lang.String str38 = caverphone6.caverphone("AA11111111");
        java.lang.String str40 = caverphone6.caverphone("AA11111111");
        java.lang.String str42 = caverphone6.encode("1111111111");
        java.lang.Object obj43 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str45 = caverphone0.encode("AA11111111");
        boolean boolean48 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "AA11111111" + "'", obj31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("1111111111");
        java.lang.String str15 = caverphone0.caverphone("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.encode("hi!");
        java.lang.String str26 = caverphone19.caverphone("AA11111111");
        java.lang.String str28 = caverphone19.caverphone("1111111111");
        java.lang.String str30 = caverphone19.encode("");
        java.lang.String str32 = caverphone19.encode("1111111111");
        boolean boolean35 = caverphone19.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("AA11111111");
        boolean boolean44 = caverphone36.isCaverphoneEqual("", "hi!");
        boolean boolean47 = caverphone36.isCaverphoneEqual("1111111111", "");
        java.lang.String str49 = caverphone36.encode("");
        java.lang.Object obj50 = caverphone19.encode((java.lang.Object) str49);
        java.lang.Object obj51 = caverphone0.encode((java.lang.Object) str49);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "1111111111" + "'", obj50, "1111111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        boolean boolean43 = caverphone37.isCaverphoneEqual("", "hi!");
        java.lang.String str45 = caverphone37.encode("hi!");
        boolean boolean48 = caverphone37.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean51 = caverphone37.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass52 = caverphone37.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = caverphone0.encode((java.lang.Object) wildcardClass52);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.encode("");
        java.lang.String str11 = caverphone0.encode("hi!");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("AA11111111");
        boolean boolean23 = caverphone15.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.encode("hi!");
        java.lang.String str31 = caverphone24.caverphone("1111111111");
        java.lang.String str33 = caverphone24.encode("1111111111");
        java.lang.Object obj34 = caverphone15.encode((java.lang.Object) "1111111111");
        java.lang.String str36 = caverphone15.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean40 = caverphone37.isCaverphoneEqual("hi!", "");
        java.lang.String str42 = caverphone37.caverphone("");
        boolean boolean45 = caverphone37.isCaverphoneEqual("AA11111111", "");
        java.lang.String str47 = caverphone37.encode("1111111111");
        boolean boolean50 = caverphone37.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone51 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean54 = caverphone51.isCaverphoneEqual("hi!", "");
        java.lang.String str56 = caverphone51.caverphone("");
        boolean boolean59 = caverphone51.isCaverphoneEqual("AA11111111", "");
        java.lang.String str61 = caverphone51.caverphone("AA11111111");
        java.lang.String str63 = caverphone51.caverphone("AA11111111");
        java.lang.String str65 = caverphone51.caverphone("hi!");
        java.lang.String str67 = caverphone51.caverphone("1111111111");
        java.lang.Object obj68 = caverphone37.encode((java.lang.Object) str67);
        boolean boolean71 = caverphone37.isCaverphoneEqual("", "");
        java.lang.Object obj72 = caverphone15.encode((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = caverphone0.encode((java.lang.Object) caverphone15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1111111111" + "'", str56, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AA11111111" + "'", str61, "AA11111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AA11111111" + "'", str65, "AA11111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "1111111111" + "'", obj68, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "1111111111" + "'", obj72, "1111111111");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("");
        boolean boolean34 = caverphone26.isCaverphoneEqual("AA11111111", "");
        java.lang.String str36 = caverphone26.encode("1111111111");
        boolean boolean39 = caverphone26.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj41 = caverphone26.encode((java.lang.Object) "AA11111111");
        boolean boolean44 = caverphone26.isCaverphoneEqual("1111111111", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone45 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean48 = caverphone45.isCaverphoneEqual("1111111111", "");
        boolean boolean51 = caverphone45.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str53 = caverphone45.encode("");
        boolean boolean56 = caverphone45.isCaverphoneEqual("", "1111111111");
        java.lang.String str58 = caverphone45.encode("");
        java.lang.Object obj59 = caverphone26.encode((java.lang.Object) str58);
        java.lang.String str61 = caverphone26.encode("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.encode("AA11111111");
        java.lang.String str6 = caverphone0.caverphone("hi!");
        java.lang.String str8 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AA11111111" + "'", str4, "AA11111111");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AA11111111" + "'", str6, "AA11111111");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.encode("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("AA11111111");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        java.lang.String str24 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("AA11111111");
        java.lang.String str24 = caverphone14.encode("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str30 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str26 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone27.encode("hi!");
        java.lang.String str37 = caverphone27.caverphone("1111111111");
        java.lang.Object obj38 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "1111111111" + "'", obj38, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("AA11111111");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.encode("1111111111");
        boolean boolean37 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone24.caverphone("AA11111111");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) str39);
        java.lang.String str42 = caverphone0.caverphone("AA11111111");
        boolean boolean45 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str47 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.encode("hi!");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("AA11111111");
        boolean boolean34 = caverphone26.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.encode("hi!");
        java.lang.String str42 = caverphone35.caverphone("1111111111");
        java.lang.String str44 = caverphone35.encode("1111111111");
        java.lang.Object obj45 = caverphone26.encode((java.lang.Object) "1111111111");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone47 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean50 = caverphone47.isCaverphoneEqual("1111111111", "");
        boolean boolean53 = caverphone47.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str55 = caverphone47.encode("AA11111111");
        java.lang.String str57 = caverphone47.encode("");
        java.lang.String str59 = caverphone47.caverphone("");
        java.lang.String str61 = caverphone47.caverphone("1111111111");
        java.lang.String str63 = caverphone47.caverphone("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = caverphone0.encode((java.lang.Object) caverphone47);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "1111111111" + "'", obj46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AA11111111" + "'", str63, "AA11111111");
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("", "hi!");
        java.lang.String str22 = caverphone14.caverphone("");
        boolean boolean25 = caverphone14.isCaverphoneEqual("", "1111111111");
        java.lang.String str27 = caverphone14.encode("hi!");
        java.lang.String str29 = caverphone14.encode("");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.caverphone("");
        boolean boolean38 = caverphone30.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj39 = caverphone14.encode((java.lang.Object) "AA11111111");
        boolean boolean42 = caverphone14.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str44 = caverphone14.encode("1111111111");
        boolean boolean47 = caverphone14.isCaverphoneEqual("", "AA11111111");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "AA11111111" + "'", obj39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        boolean boolean37 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str39 = caverphone0.caverphone("hi!");
        java.lang.String str41 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.String str26 = caverphone17.encode("hi!");
        java.lang.String str28 = caverphone17.encode("");
        java.lang.String str30 = caverphone17.caverphone("hi!");
        java.lang.String str32 = caverphone17.encode("1111111111");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) str32);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str23 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.String str34 = caverphone18.caverphone("hi!");
        java.lang.String str36 = caverphone18.caverphone("");
        java.lang.String str38 = caverphone18.caverphone("hi!");
        boolean boolean41 = caverphone18.isCaverphoneEqual("", "");
        java.lang.String str43 = caverphone18.encode("AA11111111");
        java.lang.Object obj44 = caverphone0.encode((java.lang.Object) str43);
        java.lang.Class<?> wildcardClass45 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "AA11111111" + "'", obj44, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        java.lang.String str24 = caverphone0.encode("1111111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str32 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        boolean boolean21 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean24 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean27 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = caverphone0.encode(obj28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass34 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.caverphone("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str38 = caverphone36.caverphone("1111111111");
        java.lang.String str40 = caverphone36.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        boolean boolean44 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass47 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str22 = caverphone0.encode("AA11111111");
        java.lang.String str24 = caverphone0.caverphone("");
        java.lang.String str26 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("", "hi!");
        java.lang.String str23 = caverphone15.caverphone("");
        boolean boolean26 = caverphone15.isCaverphoneEqual("", "1111111111");
        java.lang.String str28 = caverphone15.encode("hi!");
        java.lang.String str30 = caverphone15.encode("");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("1111111111", "");
        boolean boolean37 = caverphone31.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str39 = caverphone31.encode("AA11111111");
        java.lang.Object obj40 = caverphone15.encode((java.lang.Object) "AA11111111");
        java.lang.String str42 = caverphone15.encode("");
        java.lang.Object obj43 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone44 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str46 = caverphone44.caverphone("1111111111");
        java.lang.String str48 = caverphone44.caverphone("1111111111");
        boolean boolean51 = caverphone44.isCaverphoneEqual("", "AA11111111");
        java.lang.String str53 = caverphone44.encode("hi!");
        java.lang.String str55 = caverphone44.caverphone("1111111111");
        java.lang.Object obj56 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "1111111111" + "'", obj56, "1111111111");
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone10 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean13 = caverphone10.isCaverphoneEqual("hi!", "");
        java.lang.String str15 = caverphone10.encode("hi!");
        java.lang.String str17 = caverphone10.caverphone("AA11111111");
        java.lang.String str19 = caverphone10.caverphone("hi!");
        java.lang.String str21 = caverphone10.caverphone("hi!");
        java.lang.String str23 = caverphone10.caverphone("1111111111");
        java.lang.Object obj24 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        java.lang.String str28 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("");
        boolean boolean37 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone29.caverphone("AA11111111");
        java.lang.String str41 = caverphone29.caverphone("AA11111111");
        java.lang.String str43 = caverphone29.caverphone("hi!");
        java.lang.String str45 = caverphone29.encode("1111111111");
        java.lang.String str47 = caverphone29.caverphone("AA11111111");
        java.lang.String str49 = caverphone29.encode("");
        java.lang.Class<?> wildcardClass50 = caverphone29.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) caverphone29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.caverphone("hi!");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("");
        boolean boolean34 = caverphone26.isCaverphoneEqual("AA11111111", "");
        java.lang.String str36 = caverphone26.caverphone("AA11111111");
        java.lang.String str38 = caverphone26.caverphone("hi!");
        java.lang.String str40 = caverphone26.encode("AA11111111");
        java.lang.String str42 = caverphone26.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str45 = caverphone43.caverphone("1111111111");
        java.lang.String str47 = caverphone43.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("hi!", "");
        java.lang.String str53 = caverphone48.caverphone("AA11111111");
        boolean boolean56 = caverphone48.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone57 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean60 = caverphone57.isCaverphoneEqual("hi!", "");
        java.lang.String str62 = caverphone57.encode("hi!");
        java.lang.String str64 = caverphone57.caverphone("1111111111");
        java.lang.String str66 = caverphone57.encode("1111111111");
        java.lang.Object obj67 = caverphone48.encode((java.lang.Object) "1111111111");
        java.lang.String str69 = caverphone48.caverphone("1111111111");
        java.lang.Object obj70 = caverphone43.encode((java.lang.Object) "1111111111");
        boolean boolean73 = caverphone43.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean76 = caverphone43.isCaverphoneEqual("", "AA11111111");
        java.lang.Object obj77 = caverphone26.encode((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "1111111111" + "'", obj67, "1111111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "1111111111" + "'", obj70, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "1111111111" + "'", obj77, "1111111111");
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str18 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("AA11111111");
        java.lang.String str26 = caverphone19.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("");
        boolean boolean35 = caverphone27.isCaverphoneEqual("AA11111111", "");
        java.lang.String str37 = caverphone27.caverphone("AA11111111");
        boolean boolean40 = caverphone27.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj41 = caverphone19.encode((java.lang.Object) "");
        java.lang.String str43 = caverphone19.caverphone("");
        java.lang.String str45 = caverphone19.caverphone("AA11111111");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str48 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "AA11111111" + "'", obj46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str29 = caverphone0.encode("hi!");
        java.lang.String str31 = caverphone0.encode("hi!");
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.Class<?> wildcardClass35 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass33 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.encode("hi!");
        java.lang.String str35 = caverphone28.caverphone("");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str41 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        java.lang.String str40 = caverphone0.caverphone("1111111111");
        java.lang.String str42 = caverphone0.caverphone("AA11111111");
        java.lang.String str44 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        boolean boolean30 = caverphone16.isCaverphoneEqual("", "");
        java.lang.String str32 = caverphone16.caverphone("hi!");
        java.lang.String str34 = caverphone16.caverphone("");
        java.lang.String str36 = caverphone16.caverphone("hi!");
        java.lang.String str38 = caverphone16.encode("");
        java.lang.String str40 = caverphone16.caverphone("AA11111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        java.lang.Class<?> wildcardClass42 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean39 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str41 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass42 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone15.caverphone("AA11111111");
        java.lang.String str22 = caverphone15.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        boolean boolean29 = caverphone23.isCaverphoneEqual("", "hi!");
        java.lang.String str31 = caverphone23.caverphone("");
        boolean boolean34 = caverphone23.isCaverphoneEqual("", "1111111111");
        boolean boolean37 = caverphone23.isCaverphoneEqual("", "");
        boolean boolean40 = caverphone23.isCaverphoneEqual("", "");
        java.lang.String str42 = caverphone23.caverphone("");
        boolean boolean45 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj46 = caverphone15.encode((java.lang.Object) "AA11111111");
        java.lang.String str48 = caverphone15.caverphone("AA11111111");
        java.lang.Object obj49 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "AA11111111" + "'", obj46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "AA11111111" + "'", obj49, "AA11111111");
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean31 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone0.caverphone("1111111111");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.caverphone("AA11111111");
        java.lang.String str48 = caverphone36.caverphone("hi!");
        java.lang.String str50 = caverphone36.encode("AA11111111");
        java.lang.String str52 = caverphone36.caverphone("AA11111111");
        java.lang.String str54 = caverphone36.caverphone("1111111111");
        java.lang.String str56 = caverphone36.encode("AA11111111");
        java.lang.String str58 = caverphone36.caverphone("hi!");
        java.lang.String str60 = caverphone36.caverphone("1111111111");
        java.lang.String str62 = caverphone36.encode("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = caverphone0.encode((java.lang.Object) caverphone36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1111111111" + "'", str60, "1111111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        java.lang.String str17 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        java.lang.String str23 = caverphone18.caverphone("");
        boolean boolean26 = caverphone18.isCaverphoneEqual("AA11111111", "");
        java.lang.String str28 = caverphone18.encode("1111111111");
        boolean boolean31 = caverphone18.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj36 = caverphone18.encode((java.lang.Object) "");
        java.lang.String str38 = caverphone18.caverphone("1111111111");
        java.lang.String str40 = caverphone18.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("");
        boolean boolean49 = caverphone41.isCaverphoneEqual("AA11111111", "");
        java.lang.String str51 = caverphone41.caverphone("AA11111111");
        java.lang.String str53 = caverphone41.caverphone("AA11111111");
        java.lang.String str55 = caverphone41.caverphone("hi!");
        java.lang.String str57 = caverphone41.encode("1111111111");
        boolean boolean60 = caverphone41.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str62 = caverphone41.encode("AA11111111");
        boolean boolean65 = caverphone41.isCaverphoneEqual("", "");
        java.lang.Object obj66 = caverphone18.encode((java.lang.Object) "");
        java.lang.Object obj67 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AA11111111" + "'", str55, "AA11111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "1111111111" + "'", obj66, "1111111111");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "1111111111" + "'", obj67, "1111111111");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        boolean boolean16 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.encode("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("AA11111111");
        java.lang.String str18 = caverphone0.caverphone("1111111111");
        java.lang.String str20 = caverphone0.encode("AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone0.encode("");
        java.lang.String str27 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.caverphone("");
        boolean boolean28 = caverphone20.isCaverphoneEqual("AA11111111", "");
        java.lang.String str30 = caverphone20.encode("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        boolean boolean34 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        java.lang.String str40 = caverphone0.caverphone("1111111111");
        java.lang.String str42 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str25 = caverphone0.encode("");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("");
        boolean boolean37 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone29.caverphone("");
        java.lang.String str41 = caverphone29.caverphone("");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) str41);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "1111111111" + "'", obj42, "1111111111");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("1111111111", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("hi!", "hi!");
        boolean boolean27 = caverphone18.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str29 = caverphone18.caverphone("");
        java.lang.String str31 = caverphone18.caverphone("hi!");
        java.lang.String str33 = caverphone18.caverphone("hi!");
        java.lang.String str35 = caverphone18.caverphone("hi!");
        java.lang.String str37 = caverphone18.caverphone("");
        java.lang.String str39 = caverphone18.encode("1111111111");
        java.lang.Object obj40 = caverphone0.encode((java.lang.Object) "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "1111111111" + "'", obj40, "1111111111");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("1111111111", "");
        boolean boolean29 = caverphone23.isCaverphoneEqual("hi!", "hi!");
        boolean boolean32 = caverphone23.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str34 = caverphone23.caverphone("");
        java.lang.String str36 = caverphone23.encode("hi!");
        java.lang.String str38 = caverphone23.encode("AA11111111");
        boolean boolean41 = caverphone23.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "1111111111" + "'", obj42, "1111111111");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        java.lang.String str38 = caverphone0.encode("1111111111");
        boolean boolean41 = caverphone0.isCaverphoneEqual("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str13 = caverphone0.encode("AA11111111");
        java.lang.String str15 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.encode("hi!");
        java.lang.String str15 = caverphone8.caverphone("AA11111111");
        java.lang.String str17 = caverphone8.caverphone("hi!");
        java.lang.String str19 = caverphone8.caverphone("hi!");
        java.lang.Object obj20 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str22 = caverphone0.caverphone("1111111111");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.encode("hi!");
        java.lang.String str28 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass29 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "AA11111111" + "'", obj20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str44 = caverphone0.encode("");
        java.lang.String str46 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("AA11111111");
        java.lang.String str32 = caverphone25.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone33 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean36 = caverphone33.isCaverphoneEqual("hi!", "");
        java.lang.String str38 = caverphone33.caverphone("");
        boolean boolean41 = caverphone33.isCaverphoneEqual("AA11111111", "");
        java.lang.String str43 = caverphone33.caverphone("AA11111111");
        boolean boolean46 = caverphone33.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj47 = caverphone25.encode((java.lang.Object) "");
        boolean boolean50 = caverphone25.isCaverphoneEqual("", "1111111111");
        boolean boolean53 = caverphone25.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone54 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean57 = caverphone54.isCaverphoneEqual("hi!", "");
        java.lang.String str59 = caverphone54.caverphone("");
        boolean boolean62 = caverphone54.isCaverphoneEqual("AA11111111", "");
        java.lang.String str64 = caverphone54.caverphone("AA11111111");
        boolean boolean67 = caverphone54.isCaverphoneEqual("", "1111111111");
        java.lang.String str69 = caverphone54.caverphone("AA11111111");
        boolean boolean72 = caverphone54.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj73 = caverphone25.encode((java.lang.Object) "");
        java.lang.Object obj74 = caverphone0.encode(obj73);
        java.lang.String str76 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "1111111111" + "'", obj47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "1111111111" + "'", obj73, "1111111111");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "1111111111" + "'", obj74, "1111111111");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "1111111111" + "'", str76, "1111111111");
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.encode("hi!");
        java.lang.String str31 = caverphone24.caverphone("1111111111");
        java.lang.String str33 = caverphone24.encode("1111111111");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str36 = caverphone0.encode("1111111111");
        java.lang.String str38 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        java.lang.String str27 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.caverphone("AA11111111");
        java.lang.String str40 = caverphone28.caverphone("hi!");
        java.lang.String str42 = caverphone28.caverphone("");
        boolean boolean45 = caverphone28.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean48 = caverphone28.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj49 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "AA11111111" + "'", obj49, "AA11111111");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str28 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.encode("hi!");
        java.lang.String str36 = caverphone29.caverphone("hi!");
        java.lang.String str38 = caverphone29.encode("1111111111");
        java.lang.String str40 = caverphone29.caverphone("AA11111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean44 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean47 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str22 = caverphone0.encode("AA11111111");
        java.lang.String str24 = caverphone0.caverphone("");
        boolean boolean27 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str29 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone30.caverphone("");
        boolean boolean38 = caverphone30.isCaverphoneEqual("AA11111111", "");
        java.lang.String str40 = caverphone30.encode("1111111111");
        boolean boolean43 = caverphone30.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str45 = caverphone30.caverphone("hi!");
        java.lang.String str47 = caverphone30.encode("1111111111");
        boolean boolean50 = caverphone30.isCaverphoneEqual("", "AA11111111");
        boolean boolean53 = caverphone30.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone54 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean57 = caverphone54.isCaverphoneEqual("hi!", "");
        java.lang.String str59 = caverphone54.caverphone("");
        boolean boolean62 = caverphone54.isCaverphoneEqual("AA11111111", "");
        java.lang.String str64 = caverphone54.encode("1111111111");
        boolean boolean67 = caverphone54.isCaverphoneEqual("AA11111111", "");
        java.lang.String str69 = caverphone54.caverphone("AA11111111");
        java.lang.Object obj70 = caverphone30.encode((java.lang.Object) str69);
        java.lang.String str72 = caverphone30.encode("");
        java.lang.Object obj73 = caverphone0.encode((java.lang.Object) str72);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AA11111111" + "'", str69, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "AA11111111" + "'", obj70, "AA11111111");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "1111111111" + "'", obj73, "1111111111");
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.encode("");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        java.lang.String str27 = caverphone0.encode("AA11111111");
        java.lang.String str29 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str21 = caverphone0.encode("AA11111111");
        java.lang.String str23 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str13 = caverphone0.caverphone("");
        java.lang.String str15 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str31 = caverphone0.encode("");
        java.lang.String str33 = caverphone0.encode("1111111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str38 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.caverphone("AA11111111");
        boolean boolean13 = caverphone5.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("1111111111");
        java.lang.Object obj24 = caverphone5.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone5.caverphone("1111111111");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean30 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.encode("hi!");
        java.lang.String str38 = caverphone31.caverphone("AA11111111");
        java.lang.String str40 = caverphone31.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.encode("hi!");
        java.lang.String str48 = caverphone41.caverphone("AA11111111");
        java.lang.String str50 = caverphone41.caverphone("hi!");
        java.lang.String str52 = caverphone41.caverphone("hi!");
        java.lang.String str54 = caverphone41.caverphone("1111111111");
        java.lang.Object obj55 = caverphone31.encode((java.lang.Object) "1111111111");
        java.lang.String str57 = caverphone31.encode("AA11111111");
        java.lang.String str59 = caverphone31.caverphone("1111111111");
        java.lang.Object obj60 = caverphone0.encode((java.lang.Object) str59);
        org.apache.commons.codec.language.Caverphone caverphone61 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean64 = caverphone61.isCaverphoneEqual("hi!", "");
        java.lang.String str66 = caverphone61.caverphone("");
        boolean boolean69 = caverphone61.isCaverphoneEqual("AA11111111", "");
        java.lang.String str71 = caverphone61.caverphone("AA11111111");
        boolean boolean74 = caverphone61.isCaverphoneEqual("", "1111111111");
        java.lang.String str76 = caverphone61.caverphone("AA11111111");
        boolean boolean79 = caverphone61.isCaverphoneEqual("", "1111111111");
        boolean boolean82 = caverphone61.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj83 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1111111111" + "'", str59, "1111111111");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "1111111111" + "'", obj60, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AA11111111" + "'", str71, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "AA11111111" + "'", str76, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "AA11111111" + "'", obj83, "AA11111111");
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        java.lang.String str39 = caverphone0.encode("AA11111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str44 = caverphone0.encode("");
        java.lang.String str46 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass47 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.Class<?> wildcardClass14 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        java.lang.String str29 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("1111111111", "");
        boolean boolean36 = caverphone30.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone30.encode("");
        java.lang.String str40 = caverphone30.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone41 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean44 = caverphone41.isCaverphoneEqual("hi!", "");
        java.lang.String str46 = caverphone41.caverphone("AA11111111");
        java.lang.String str48 = caverphone41.caverphone("");
        java.lang.String str50 = caverphone41.encode("hi!");
        java.lang.Object obj51 = caverphone30.encode((java.lang.Object) str50);
        boolean boolean54 = caverphone30.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj55 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str57 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone58 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean61 = caverphone58.isCaverphoneEqual("hi!", "");
        boolean boolean64 = caverphone58.isCaverphoneEqual("", "hi!");
        java.lang.String str66 = caverphone58.caverphone("");
        boolean boolean69 = caverphone58.isCaverphoneEqual("", "1111111111");
        java.lang.String str71 = caverphone58.encode("hi!");
        java.lang.String str73 = caverphone58.encode("");
        org.apache.commons.codec.language.Caverphone caverphone74 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean77 = caverphone74.isCaverphoneEqual("1111111111", "");
        boolean boolean80 = caverphone74.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str82 = caverphone74.encode("AA11111111");
        java.lang.Object obj83 = caverphone58.encode((java.lang.Object) "AA11111111");
        java.lang.String str85 = caverphone58.encode("");
        boolean boolean88 = caverphone58.isCaverphoneEqual("hi!", "");
        java.lang.String str90 = caverphone58.caverphone("hi!");
        java.lang.Object obj91 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str93 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "AA11111111" + "'", obj51, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AA11111111" + "'", str71, "AA11111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1111111111" + "'", str73, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "AA11111111" + "'", str82, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "AA11111111" + "'", obj83, "AA11111111");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "1111111111" + "'", str85, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "AA11111111" + "'", str90, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + "AA11111111" + "'", obj91, "AA11111111");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "1111111111" + "'", str93, "1111111111");
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("AA11111111");
        java.lang.String str29 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone30 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean33 = caverphone30.isCaverphoneEqual("1111111111", "");
        boolean boolean36 = caverphone30.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str38 = caverphone30.caverphone("AA11111111");
        boolean boolean41 = caverphone30.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str44 = caverphone0.caverphone("1111111111");
        boolean boolean47 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str49 = caverphone0.caverphone("1111111111");
        java.lang.String str51 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "AA11111111" + "'", obj42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.encode("hi!");
        java.lang.String str13 = caverphone6.caverphone("hi!");
        java.lang.String str15 = caverphone6.caverphone("hi!");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) str15);
        java.lang.String str18 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("1111111111", "");
        java.lang.String str24 = caverphone19.caverphone("1111111111");
        java.lang.String str26 = caverphone19.encode("");
        java.lang.String str28 = caverphone19.caverphone("");
        java.lang.Class<?> wildcardClass29 = caverphone19.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = caverphone0.encode((java.lang.Object) wildcardClass29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "AA11111111" + "'", obj16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("");
        boolean boolean37 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone29.caverphone("AA11111111");
        boolean boolean42 = caverphone29.isCaverphoneEqual("", "1111111111");
        java.lang.String str44 = caverphone29.caverphone("AA11111111");
        boolean boolean47 = caverphone29.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) "");
        boolean boolean51 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        java.lang.String str37 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone38.caverphone("");
        boolean boolean49 = caverphone38.isCaverphoneEqual("", "1111111111");
        java.lang.String str51 = caverphone38.encode("hi!");
        java.lang.String str53 = caverphone38.encode("");
        boolean boolean56 = caverphone38.isCaverphoneEqual("hi!", "hi!");
        java.lang.Object obj57 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean60 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str62 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AA11111111" + "'", str51, "AA11111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "AA11111111" + "'", obj57, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.encode("hi!");
        java.lang.String str26 = caverphone19.caverphone("1111111111");
        java.lang.String str28 = caverphone19.encode("1111111111");
        java.lang.Object obj29 = caverphone13.encode((java.lang.Object) "1111111111");
        boolean boolean32 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone13.caverphone("AA11111111");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "1111111111" + "'", obj29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("");
        java.lang.String str20 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        java.lang.String str6 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass7 = caverphone0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AA11111111" + "'", str6, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str29 = caverphone0.encode("hi!");
        java.lang.String str31 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass32 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.encode("hi!");
        java.lang.String str31 = caverphone24.caverphone("AA11111111");
        java.lang.String str33 = caverphone24.caverphone("hi!");
        java.lang.String str35 = caverphone24.caverphone("hi!");
        java.lang.String str37 = caverphone24.caverphone("1111111111");
        java.lang.String str39 = caverphone24.caverphone("1111111111");
        java.lang.String str41 = caverphone24.encode("1111111111");
        java.lang.Class<?> wildcardClass42 = caverphone24.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = caverphone0.encode((java.lang.Object) caverphone24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        java.lang.String str19 = caverphone0.encode("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("1111111111", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str25 = caverphone17.caverphone("AA11111111");
        java.lang.Object obj26 = caverphone0.encode((java.lang.Object) str25);
        java.lang.String str28 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str37 = caverphone35.caverphone("1111111111");
        java.lang.String str39 = caverphone35.caverphone("1111111111");
        java.lang.String str41 = caverphone35.caverphone("AA11111111");
        java.lang.Object obj42 = caverphone29.encode((java.lang.Object) str41);
        java.lang.String str44 = caverphone29.caverphone("");
        java.lang.Object obj45 = caverphone0.encode((java.lang.Object) str44);
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        java.lang.String str51 = caverphone46.caverphone("");
        boolean boolean54 = caverphone46.isCaverphoneEqual("AA11111111", "");
        java.lang.String str56 = caverphone46.caverphone("AA11111111");
        java.lang.String str58 = caverphone46.caverphone("AA11111111");
        java.lang.String str60 = caverphone46.caverphone("hi!");
        java.lang.String str62 = caverphone46.encode("1111111111");
        java.lang.String str64 = caverphone46.caverphone("AA11111111");
        java.lang.String str66 = caverphone46.caverphone("1111111111");
        java.lang.Class<?> wildcardClass67 = caverphone46.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = caverphone0.encode((java.lang.Object) wildcardClass67);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "AA11111111" + "'", obj26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "AA11111111" + "'", obj42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1111111111" + "'", str62, "1111111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AA11111111" + "'", str64, "AA11111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.encode("");
        java.lang.String str39 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass40 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        boolean boolean15 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("1111111111", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str26 = caverphone18.encode("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj30 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str32 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "1111111111" + "'", obj30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.caverphone("");
        java.lang.String str28 = caverphone0.encode("");
        boolean boolean31 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone32.caverphone("AA11111111");
        java.lang.String str44 = caverphone32.caverphone("hi!");
        java.lang.String str46 = caverphone32.caverphone("1111111111");
        boolean boolean49 = caverphone32.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean52 = caverphone32.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean55 = caverphone32.isCaverphoneEqual("1111111111", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = caverphone0.encode((java.lang.Object) caverphone32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1111111111" + "'", str46, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.encode("");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone0.encode("AA11111111");
        java.lang.String str25 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str25 = caverphone0.encode("1111111111");
        java.lang.String str27 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.caverphone("AA11111111");
        java.lang.String str40 = caverphone28.caverphone("AA11111111");
        java.lang.String str42 = caverphone28.caverphone("AA11111111");
        java.lang.String str44 = caverphone28.caverphone("");
        java.lang.Object obj45 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str47 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "1111111111" + "'", obj45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.caverphone("hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str27 = caverphone0.caverphone("");
        java.lang.String str29 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.caverphone("AA11111111");
        boolean boolean27 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj28 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str30 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "AA11111111" + "'", obj28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("hi!");
        java.lang.String str23 = caverphone14.caverphone("hi!");
        java.lang.String str25 = caverphone14.caverphone("1111111111");
        java.lang.String str27 = caverphone14.caverphone("1111111111");
        java.lang.Object obj28 = caverphone0.encode((java.lang.Object) str27);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "1111111111" + "'", obj28, "1111111111");
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("");
        java.lang.String str11 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.encode("1111111111");
        boolean boolean32 = caverphone19.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone33 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean36 = caverphone33.isCaverphoneEqual("hi!", "");
        java.lang.String str38 = caverphone33.caverphone("");
        boolean boolean41 = caverphone33.isCaverphoneEqual("AA11111111", "");
        java.lang.String str43 = caverphone33.caverphone("AA11111111");
        java.lang.String str45 = caverphone33.caverphone("AA11111111");
        java.lang.String str47 = caverphone33.caverphone("hi!");
        java.lang.String str49 = caverphone33.caverphone("1111111111");
        java.lang.Object obj50 = caverphone19.encode((java.lang.Object) str49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = caverphone0.encode((java.lang.Object) caverphone19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "1111111111" + "'", obj50, "1111111111");
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.encode("hi!");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone32.caverphone("AA11111111");
        java.lang.String str44 = caverphone32.caverphone("AA11111111");
        java.lang.String str46 = caverphone32.caverphone("hi!");
        java.lang.String str48 = caverphone32.caverphone("1111111111");
        java.lang.String str50 = caverphone32.encode("1111111111");
        java.lang.Object obj51 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str53 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("hi!");
        java.lang.String str12 = caverphone0.caverphone("");
        boolean boolean15 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str22 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("");
        boolean boolean19 = caverphone11.isCaverphoneEqual("AA11111111", "");
        java.lang.String str21 = caverphone11.encode("1111111111");
        boolean boolean24 = caverphone11.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.caverphone("");
        boolean boolean33 = caverphone25.isCaverphoneEqual("AA11111111", "");
        java.lang.String str35 = caverphone25.caverphone("AA11111111");
        java.lang.String str37 = caverphone25.caverphone("AA11111111");
        java.lang.String str39 = caverphone25.caverphone("hi!");
        java.lang.String str41 = caverphone25.caverphone("1111111111");
        java.lang.Object obj42 = caverphone11.encode((java.lang.Object) str41);
        boolean boolean45 = caverphone11.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str47 = caverphone11.encode("AA11111111");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str50 = caverphone0.caverphone("1111111111");
        java.lang.String str52 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "1111111111" + "'", obj42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "AA11111111" + "'", obj48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean27 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str23 = caverphone0.encode("1111111111");
        java.lang.String str25 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("");
        java.lang.String str36 = caverphone26.caverphone("");
        java.lang.Object obj37 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str46 = caverphone38.encode("hi!");
        boolean boolean49 = caverphone38.isCaverphoneEqual("1111111111", "AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = caverphone0.encode((java.lang.Object) boolean49);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "1111111111" + "'", obj37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone25 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean28 = caverphone25.isCaverphoneEqual("hi!", "");
        java.lang.String str30 = caverphone25.encode("hi!");
        java.lang.String str32 = caverphone25.caverphone("1111111111");
        java.lang.String str34 = caverphone25.encode("1111111111");
        java.lang.Object obj35 = caverphone19.encode((java.lang.Object) "1111111111");
        boolean boolean38 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj39 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str44 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "AA11111111" + "'", obj39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        java.lang.String str26 = caverphone14.caverphone("AA11111111");
        java.lang.String str28 = caverphone14.caverphone("hi!");
        java.lang.String str30 = caverphone14.caverphone("1111111111");
        java.lang.Object obj31 = caverphone0.encode((java.lang.Object) str30);
        org.apache.commons.codec.language.Caverphone caverphone32 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean35 = caverphone32.isCaverphoneEqual("hi!", "");
        java.lang.String str37 = caverphone32.caverphone("");
        boolean boolean40 = caverphone32.isCaverphoneEqual("AA11111111", "");
        java.lang.String str42 = caverphone32.caverphone("AA11111111");
        java.lang.String str44 = caverphone32.caverphone("AA11111111");
        java.lang.String str46 = caverphone32.caverphone("hi!");
        java.lang.String str48 = caverphone32.caverphone("1111111111");
        java.lang.String str50 = caverphone32.encode("1111111111");
        java.lang.Object obj51 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "1111111111" + "'", obj31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        boolean boolean19 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("1111111111", "");
        java.lang.String str22 = caverphone17.caverphone("");
        boolean boolean25 = caverphone17.isCaverphoneEqual("", "hi!");
        boolean boolean28 = caverphone17.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Object obj29 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "AA11111111" + "'", obj29, "AA11111111");
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone6 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean9 = caverphone6.isCaverphoneEqual("hi!", "");
        java.lang.String str11 = caverphone6.encode("hi!");
        java.lang.String str13 = caverphone6.caverphone("1111111111");
        java.lang.String str15 = caverphone6.encode("1111111111");
        java.lang.Object obj16 = caverphone0.encode((java.lang.Object) "1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str21 = caverphone0.encode("");
        java.lang.String str23 = caverphone0.caverphone("");
        java.lang.String str25 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "1111111111" + "'", obj16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        boolean boolean20 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str25 = caverphone0.caverphone("1111111111");
        java.lang.String str27 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("hi!");
        java.lang.String str33 = caverphone19.caverphone("1111111111");
        java.lang.Class<?> wildcardClass34 = caverphone19.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = caverphone0.encode((java.lang.Object) wildcardClass34);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        java.lang.String str17 = caverphone12.caverphone("");
        boolean boolean20 = caverphone12.isCaverphoneEqual("AA11111111", "");
        java.lang.String str22 = caverphone12.caverphone("AA11111111");
        boolean boolean25 = caverphone12.isCaverphoneEqual("", "");
        java.lang.String str27 = caverphone12.caverphone("");
        java.lang.String str29 = caverphone12.encode("1111111111");
        java.lang.String str31 = caverphone12.encode("AA11111111");
        java.lang.Object obj32 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str34 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "AA11111111" + "'", obj32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("1111111111");
        java.lang.String str18 = caverphone0.encode("AA11111111");
        java.lang.String str20 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        boolean boolean30 = caverphone16.isCaverphoneEqual("", "");
        boolean boolean33 = caverphone16.isCaverphoneEqual("", "");
        java.lang.String str35 = caverphone16.caverphone("");
        java.lang.String str37 = caverphone16.encode("");
        boolean boolean40 = caverphone16.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str42 = caverphone16.encode("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = caverphone0.encode((java.lang.Object) caverphone16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        boolean boolean17 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        java.lang.String str19 = caverphone0.caverphone("");
        java.lang.String str21 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        boolean boolean28 = caverphone22.isCaverphoneEqual("", "hi!");
        java.lang.String str30 = caverphone22.caverphone("");
        boolean boolean33 = caverphone22.isCaverphoneEqual("", "1111111111");
        java.lang.String str35 = caverphone22.encode("hi!");
        java.lang.String str37 = caverphone22.encode("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj47 = caverphone22.encode((java.lang.Object) "AA11111111");
        boolean boolean50 = caverphone22.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str52 = caverphone22.encode("AA11111111");
        java.lang.String str54 = caverphone22.caverphone("");
        java.lang.Object obj55 = caverphone0.encode((java.lang.Object) str54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AA11111111" + "'", str52, "AA11111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "1111111111" + "'", obj55, "1111111111");
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        boolean boolean7 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.encode("1111111111");
        boolean boolean27 = caverphone14.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str29 = caverphone14.caverphone("hi!");
        java.lang.String str31 = caverphone14.encode("1111111111");
        boolean boolean34 = caverphone14.isCaverphoneEqual("", "AA11111111");
        boolean boolean37 = caverphone14.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str39 = caverphone14.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = caverphone0.encode((java.lang.Object) caverphone14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str20 = caverphone0.encode("hi!");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("AA11111111");
        boolean boolean32 = caverphone24.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone33 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean36 = caverphone33.isCaverphoneEqual("hi!", "");
        java.lang.String str38 = caverphone33.encode("hi!");
        java.lang.String str40 = caverphone33.caverphone("1111111111");
        java.lang.String str42 = caverphone33.encode("1111111111");
        java.lang.Object obj43 = caverphone24.encode((java.lang.Object) "1111111111");
        java.lang.String str45 = caverphone24.caverphone("1111111111");
        java.lang.String str47 = caverphone24.encode("");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("hi!", "");
        java.lang.String str53 = caverphone48.encode("hi!");
        java.lang.String str55 = caverphone48.caverphone("1111111111");
        java.lang.String str57 = caverphone48.encode("1111111111");
        java.lang.Object obj58 = caverphone24.encode((java.lang.Object) "1111111111");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str61 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1111111111" + "'", str57, "1111111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "1111111111" + "'", obj58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str30 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone37 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str39 = caverphone37.caverphone("1111111111");
        java.lang.String str41 = caverphone37.caverphone("1111111111");
        java.lang.String str43 = caverphone37.caverphone("AA11111111");
        java.lang.Object obj44 = caverphone31.encode((java.lang.Object) str43);
        boolean boolean47 = caverphone31.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("hi!", "");
        java.lang.String str53 = caverphone48.caverphone("AA11111111");
        boolean boolean56 = caverphone48.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone57 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean60 = caverphone57.isCaverphoneEqual("hi!", "");
        java.lang.String str62 = caverphone57.encode("hi!");
        java.lang.String str64 = caverphone57.caverphone("1111111111");
        java.lang.String str66 = caverphone57.encode("1111111111");
        java.lang.Object obj67 = caverphone48.encode((java.lang.Object) "1111111111");
        java.lang.String str69 = caverphone48.caverphone("1111111111");
        boolean boolean72 = caverphone48.isCaverphoneEqual("", "");
        java.lang.String str74 = caverphone48.caverphone("AA11111111");
        java.lang.Object obj75 = caverphone31.encode((java.lang.Object) str74);
        java.lang.String str77 = caverphone31.caverphone("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = caverphone0.encode((java.lang.Object) caverphone31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AA11111111" + "'", str43, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "AA11111111" + "'", obj44, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AA11111111" + "'", str62, "AA11111111");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1111111111" + "'", str64, "1111111111");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1111111111" + "'", str66, "1111111111");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "1111111111" + "'", obj67, "1111111111");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "AA11111111" + "'", str74, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "AA11111111" + "'", obj75, "AA11111111");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "1111111111" + "'", str77, "1111111111");
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("");
        java.lang.String str20 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass21 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        boolean boolean7 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.encode("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str19 = caverphone17.caverphone("1111111111");
        java.lang.String str21 = caverphone17.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.caverphone("AA11111111");
        boolean boolean30 = caverphone22.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.encode("hi!");
        java.lang.String str38 = caverphone31.caverphone("1111111111");
        java.lang.String str40 = caverphone31.encode("1111111111");
        java.lang.Object obj41 = caverphone22.encode((java.lang.Object) "1111111111");
        java.lang.String str43 = caverphone22.caverphone("1111111111");
        java.lang.Object obj44 = caverphone17.encode((java.lang.Object) "1111111111");
        boolean boolean47 = caverphone17.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean50 = caverphone17.isCaverphoneEqual("", "AA11111111");
        java.lang.Object obj51 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str53 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "1111111111" + "'", obj44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "1111111111" + "'", obj51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1111111111" + "'", str53, "1111111111");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone0.encode("hi!");
        java.lang.String str34 = caverphone0.caverphone("hi!");
        java.lang.String str36 = caverphone0.caverphone("");
        java.lang.String str38 = caverphone0.encode("AA11111111");
        boolean boolean41 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.Class<?> wildcardClass42 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("hi!", "1111111111");
        boolean boolean12 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        boolean boolean34 = caverphone28.isCaverphoneEqual("", "hi!");
        java.lang.String str36 = caverphone28.caverphone("");
        boolean boolean39 = caverphone28.isCaverphoneEqual("", "1111111111");
        java.lang.String str41 = caverphone28.encode("hi!");
        java.lang.String str43 = caverphone28.encode("");
        org.apache.commons.codec.language.Caverphone caverphone44 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean47 = caverphone44.isCaverphoneEqual("hi!", "");
        java.lang.String str49 = caverphone44.caverphone("");
        boolean boolean52 = caverphone44.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj53 = caverphone28.encode((java.lang.Object) "AA11111111");
        boolean boolean56 = caverphone28.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str58 = caverphone28.caverphone("hi!");
        boolean boolean61 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str63 = caverphone28.caverphone("");
        java.lang.String str65 = caverphone28.caverphone("");
        java.lang.Object obj66 = caverphone0.encode((java.lang.Object) str65);
        boolean boolean69 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str71 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "AA11111111" + "'", obj53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AA11111111" + "'", str58, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1111111111" + "'", str63, "1111111111");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "1111111111" + "'", obj66, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "1111111111" + "'", str71, "1111111111");
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.encode("1111111111");
        boolean boolean47 = caverphone34.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj52 = caverphone34.encode((java.lang.Object) "");
        java.lang.String str54 = caverphone34.caverphone("1111111111");
        java.lang.String str56 = caverphone34.encode("hi!");
        java.lang.String str58 = caverphone34.caverphone("1111111111");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) str58);
        org.apache.commons.codec.language.Caverphone caverphone60 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean63 = caverphone60.isCaverphoneEqual("1111111111", "");
        java.lang.String str65 = caverphone60.caverphone("1111111111");
        java.lang.String str67 = caverphone60.encode("");
        boolean boolean70 = caverphone60.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj71 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str73 = caverphone0.encode("1111111111");
        boolean boolean76 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str78 = caverphone0.encode("1111111111");
        boolean boolean81 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1111111111" + "'", str73, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "1111111111" + "'", str78, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("1111111111", "");
        boolean boolean15 = caverphone9.isCaverphoneEqual("hi!", "hi!");
        boolean boolean18 = caverphone9.isCaverphoneEqual("hi!", "1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str21 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        boolean boolean28 = caverphone22.isCaverphoneEqual("", "hi!");
        java.lang.String str30 = caverphone22.caverphone("");
        boolean boolean33 = caverphone22.isCaverphoneEqual("", "1111111111");
        java.lang.String str35 = caverphone22.encode("hi!");
        java.lang.String str37 = caverphone22.encode("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("1111111111", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str46 = caverphone38.encode("AA11111111");
        java.lang.Object obj47 = caverphone22.encode((java.lang.Object) "AA11111111");
        java.lang.String str49 = caverphone22.encode("");
        boolean boolean52 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str54 = caverphone22.encode("hi!");
        java.lang.String str56 = caverphone22.caverphone("hi!");
        java.lang.String str58 = caverphone22.caverphone("");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone60 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean63 = caverphone60.isCaverphoneEqual("1111111111", "");
        boolean boolean66 = caverphone60.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str68 = caverphone60.encode("AA11111111");
        java.lang.String str70 = caverphone60.encode("");
        java.lang.String str72 = caverphone60.caverphone("");
        java.lang.String str74 = caverphone60.caverphone("1111111111");
        java.lang.String str76 = caverphone60.encode("1111111111");
        java.lang.Object obj77 = caverphone0.encode((java.lang.Object) str76);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "AA11111111" + "'", obj19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "AA11111111" + "'", obj47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AA11111111" + "'", str54, "AA11111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AA11111111" + "'", str68, "AA11111111");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1111111111" + "'", str70, "1111111111");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1111111111" + "'", str72, "1111111111");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "1111111111" + "'", str74, "1111111111");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "1111111111" + "'", str76, "1111111111");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "1111111111" + "'", obj77, "1111111111");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("hi!", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("", "hi!");
        java.lang.String str23 = caverphone15.caverphone("");
        boolean boolean26 = caverphone15.isCaverphoneEqual("", "1111111111");
        java.lang.String str28 = caverphone15.encode("hi!");
        java.lang.String str30 = caverphone15.encode("");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("1111111111", "");
        boolean boolean37 = caverphone31.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str39 = caverphone31.encode("AA11111111");
        java.lang.Object obj40 = caverphone15.encode((java.lang.Object) "AA11111111");
        java.lang.String str42 = caverphone15.encode("");
        java.lang.Object obj43 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str45 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "AA11111111" + "'", obj40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        java.lang.String str15 = caverphone0.caverphone("1111111111");
        java.lang.String str17 = caverphone0.caverphone("AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass15 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        java.lang.String str35 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        java.lang.String str29 = caverphone0.encode("");
        java.lang.String str31 = caverphone0.caverphone("hi!");
        java.lang.String str33 = caverphone0.caverphone("AA11111111");
        java.lang.String str35 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        boolean boolean19 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str21 = caverphone0.caverphone("hi!");
        java.lang.String str23 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        java.lang.String str14 = caverphone9.encode("hi!");
        java.lang.String str16 = caverphone9.caverphone("1111111111");
        java.lang.String str18 = caverphone9.encode("1111111111");
        java.lang.Object obj19 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str21 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.caverphone("");
        boolean boolean30 = caverphone22.isCaverphoneEqual("AA11111111", "");
        java.lang.String str32 = caverphone22.encode("1111111111");
        boolean boolean35 = caverphone22.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean39 = caverphone36.isCaverphoneEqual("hi!", "");
        java.lang.String str41 = caverphone36.caverphone("");
        boolean boolean44 = caverphone36.isCaverphoneEqual("AA11111111", "");
        java.lang.String str46 = caverphone36.caverphone("AA11111111");
        java.lang.String str48 = caverphone36.caverphone("AA11111111");
        java.lang.String str50 = caverphone36.caverphone("hi!");
        java.lang.String str52 = caverphone36.caverphone("1111111111");
        java.lang.Object obj53 = caverphone22.encode((java.lang.Object) str52);
        boolean boolean56 = caverphone22.isCaverphoneEqual("", "");
        java.lang.Object obj57 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str59 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "1111111111" + "'", obj19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AA11111111" + "'", str46, "AA11111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "1111111111" + "'", obj53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "1111111111" + "'", obj57, "1111111111");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AA11111111" + "'", str59, "AA11111111");
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("hi!", "");
        java.lang.String str29 = caverphone24.caverphone("");
        boolean boolean32 = caverphone24.isCaverphoneEqual("AA11111111", "");
        java.lang.String str34 = caverphone24.encode("1111111111");
        boolean boolean37 = caverphone24.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.String str39 = caverphone24.encode("AA11111111");
        boolean boolean42 = caverphone24.isCaverphoneEqual("hi!", "");
        boolean boolean45 = caverphone24.isCaverphoneEqual("", "hi!");
        java.lang.Object obj46 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str48 = caverphone0.encode("AA11111111");
        boolean boolean51 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "1111111111" + "'", obj46, "1111111111");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AA11111111" + "'", str48, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        java.lang.String str23 = caverphone0.caverphone("hi!");
        java.lang.String str25 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        boolean boolean14 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.String str16 = caverphone8.caverphone("");
        boolean boolean19 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.String str21 = caverphone8.encode("hi!");
        java.lang.String str23 = caverphone8.encode("");
        org.apache.commons.codec.language.Caverphone caverphone24 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean27 = caverphone24.isCaverphoneEqual("1111111111", "");
        boolean boolean30 = caverphone24.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str32 = caverphone24.encode("AA11111111");
        java.lang.Object obj33 = caverphone8.encode((java.lang.Object) "AA11111111");
        java.lang.String str35 = caverphone8.encode("");
        java.lang.Object obj36 = caverphone0.encode((java.lang.Object) "");
        java.lang.Class<?> wildcardClass37 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AA11111111" + "'", str21, "AA11111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "1111111111" + "'", obj36, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.caverphone("");
        boolean boolean15 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.Class<?> wildcardClass16 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        boolean boolean33 = caverphone27.isCaverphoneEqual("", "hi!");
        java.lang.String str35 = caverphone27.caverphone("");
        boolean boolean38 = caverphone27.isCaverphoneEqual("", "1111111111");
        java.lang.String str40 = caverphone27.encode("hi!");
        java.lang.String str42 = caverphone27.encode("");
        org.apache.commons.codec.language.Caverphone caverphone43 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean46 = caverphone43.isCaverphoneEqual("hi!", "");
        java.lang.String str48 = caverphone43.caverphone("");
        boolean boolean51 = caverphone43.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj52 = caverphone27.encode((java.lang.Object) "AA11111111");
        boolean boolean55 = caverphone27.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str57 = caverphone27.encode("AA11111111");
        java.lang.Object obj58 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str60 = caverphone0.caverphone("AA11111111");
        java.lang.Class<?> wildcardClass61 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1111111111" + "'", str42, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "AA11111111" + "'", obj52, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AA11111111" + "'", str57, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "AA11111111" + "'", obj58, "AA11111111");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AA11111111" + "'", str60, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("AA11111111");
        boolean boolean10 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Class<?> wildcardClass11 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("AA11111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean23 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.Class<?> wildcardClass24 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("");
        java.lang.String str18 = caverphone0.encode("AA11111111");
        java.lang.String str20 = caverphone0.encode("1111111111");
        java.lang.String str22 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass23 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("");
        boolean boolean16 = caverphone8.isCaverphoneEqual("AA11111111", "");
        java.lang.String str18 = caverphone8.caverphone("AA11111111");
        boolean boolean21 = caverphone8.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj22 = caverphone0.encode((java.lang.Object) "");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str30 = caverphone0.encode("AA11111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "1111111111" + "'", obj22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("");
        java.lang.String str14 = caverphone0.caverphone("1111111111");
        java.lang.String str16 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        boolean boolean23 = caverphone17.isCaverphoneEqual("", "hi!");
        java.lang.String str25 = caverphone17.caverphone("");
        boolean boolean28 = caverphone17.isCaverphoneEqual("", "1111111111");
        boolean boolean31 = caverphone17.isCaverphoneEqual("", "");
        boolean boolean34 = caverphone17.isCaverphoneEqual("", "");
        java.lang.String str36 = caverphone17.caverphone("");
        boolean boolean39 = caverphone17.isCaverphoneEqual("AA11111111", "");
        java.lang.String str41 = caverphone17.caverphone("AA11111111");
        java.lang.String str43 = caverphone17.caverphone("");
        java.lang.Object obj44 = caverphone0.encode((java.lang.Object) str43);
        boolean boolean47 = caverphone0.isCaverphoneEqual("", "");
        java.lang.Class<?> wildcardClass48 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "1111111111" + "'", obj44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone5 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean8 = caverphone5.isCaverphoneEqual("hi!", "");
        java.lang.String str10 = caverphone5.caverphone("AA11111111");
        boolean boolean13 = caverphone5.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.encode("hi!");
        java.lang.String str21 = caverphone14.caverphone("1111111111");
        java.lang.String str23 = caverphone14.encode("1111111111");
        java.lang.Object obj24 = caverphone5.encode((java.lang.Object) "1111111111");
        java.lang.String str26 = caverphone5.caverphone("1111111111");
        java.lang.Object obj27 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.Class<?> wildcardClass28 = caverphone0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "1111111111" + "'", obj24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        java.lang.String str13 = caverphone0.caverphone("1111111111");
        java.lang.String str15 = caverphone0.caverphone("1111111111");
        java.lang.String str17 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.String str34 = caverphone18.caverphone("hi!");
        java.lang.String str36 = caverphone18.caverphone("");
        java.lang.String str38 = caverphone18.caverphone("hi!");
        java.lang.String str40 = caverphone18.encode("");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.Object obj26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = caverphone0.encode(obj26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.caverphone("AA11111111");
        boolean boolean11 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone15 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean18 = caverphone15.isCaverphoneEqual("1111111111", "");
        boolean boolean21 = caverphone15.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str23 = caverphone15.encode("");
        java.lang.String str25 = caverphone15.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("AA11111111");
        java.lang.String str33 = caverphone26.caverphone("");
        java.lang.String str35 = caverphone26.encode("hi!");
        java.lang.Object obj36 = caverphone15.encode((java.lang.Object) str35);
        java.lang.Object obj37 = caverphone0.encode(obj36);
        java.lang.String str39 = caverphone0.caverphone("AA11111111");
        boolean boolean42 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str44 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "AA11111111" + "'", obj36, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "AA11111111" + "'", obj37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.encode("");
        java.lang.String str20 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.caverphone("");
        boolean boolean29 = caverphone21.isCaverphoneEqual("AA11111111", "");
        java.lang.String str31 = caverphone21.encode("1111111111");
        boolean boolean34 = caverphone21.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str36 = caverphone21.caverphone("hi!");
        java.lang.String str38 = caverphone21.encode("1111111111");
        boolean boolean41 = caverphone21.isCaverphoneEqual("", "AA11111111");
        boolean boolean44 = caverphone21.isCaverphoneEqual("AA11111111", "");
        boolean boolean47 = caverphone21.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str50 = caverphone0.encode("AA11111111");
        java.lang.Class<?> wildcardClass51 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("1111111111", "");
        java.lang.String str26 = caverphone21.caverphone("1111111111");
        java.lang.String str28 = caverphone21.encode("");
        boolean boolean31 = caverphone21.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str33 = caverphone21.caverphone("1111111111");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) str33);
        java.lang.String str36 = caverphone0.encode("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str41 = caverphone0.encode("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "1111111111" + "'", obj34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.caverphone("hi!");
        boolean boolean33 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str35 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone36 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str38 = caverphone36.caverphone("1111111111");
        java.lang.String str40 = caverphone36.caverphone("1111111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        boolean boolean44 = caverphone0.isCaverphoneEqual("", "hi!");
        boolean boolean47 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.Class<?> wildcardClass48 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        java.lang.String str20 = caverphone0.caverphone("");
        boolean boolean23 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str25 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        java.lang.String str31 = caverphone26.caverphone("");
        boolean boolean34 = caverphone26.isCaverphoneEqual("AA11111111", "");
        boolean boolean37 = caverphone26.isCaverphoneEqual("hi!", "AA11111111");
        boolean boolean40 = caverphone26.isCaverphoneEqual("", "");
        boolean boolean43 = caverphone26.isCaverphoneEqual("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = caverphone0.encode((java.lang.Object) caverphone26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        boolean boolean18 = caverphone0.isCaverphoneEqual("1111111111", "AA11111111");
        boolean boolean21 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str23 = caverphone0.encode("hi!");
        java.lang.String str25 = caverphone0.caverphone("");
        boolean boolean28 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AA11111111" + "'", str23, "AA11111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        java.lang.String str28 = caverphone16.caverphone("AA11111111");
        java.lang.String str30 = caverphone16.caverphone("hi!");
        java.lang.String str32 = caverphone16.caverphone("1111111111");
        java.lang.String str34 = caverphone16.encode("1111111111");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("hi!", "");
        java.lang.String str43 = caverphone38.caverphone("");
        boolean boolean46 = caverphone38.isCaverphoneEqual("AA11111111", "");
        java.lang.String str48 = caverphone38.encode("1111111111");
        boolean boolean51 = caverphone38.isCaverphoneEqual("1111111111", "AA11111111");
        java.lang.Object obj53 = caverphone38.encode((java.lang.Object) "AA11111111");
        boolean boolean56 = caverphone38.isCaverphoneEqual("", "hi!");
        java.lang.String str58 = caverphone38.encode("1111111111");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) str58);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "AA11111111" + "'", obj53, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        java.lang.String str10 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone11 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean14 = caverphone11.isCaverphoneEqual("hi!", "");
        java.lang.String str16 = caverphone11.caverphone("AA11111111");
        boolean boolean19 = caverphone11.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone20 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean23 = caverphone20.isCaverphoneEqual("hi!", "");
        java.lang.String str25 = caverphone20.encode("hi!");
        java.lang.String str27 = caverphone20.caverphone("1111111111");
        java.lang.String str29 = caverphone20.encode("1111111111");
        java.lang.Object obj30 = caverphone11.encode((java.lang.Object) "1111111111");
        java.lang.String str32 = caverphone11.encode("");
        java.lang.String str34 = caverphone11.caverphone("");
        boolean boolean37 = caverphone11.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str39 = caverphone11.encode("AA11111111");
        java.lang.String str41 = caverphone11.caverphone("");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        boolean boolean48 = caverphone42.isCaverphoneEqual("", "hi!");
        java.lang.String str50 = caverphone42.caverphone("");
        boolean boolean53 = caverphone42.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj54 = caverphone11.encode((java.lang.Object) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = caverphone0.encode((java.lang.Object) caverphone11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "1111111111" + "'", obj30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1111111111" + "'", str50, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "AA11111111" + "'", obj54, "AA11111111");
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone0.caverphone("AA11111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.caverphone("AA11111111");
        java.lang.String str34 = caverphone27.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone35 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean38 = caverphone35.isCaverphoneEqual("hi!", "");
        java.lang.String str40 = caverphone35.caverphone("");
        boolean boolean43 = caverphone35.isCaverphoneEqual("AA11111111", "");
        java.lang.String str45 = caverphone35.caverphone("AA11111111");
        boolean boolean48 = caverphone35.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj49 = caverphone27.encode((java.lang.Object) "");
        java.lang.String str51 = caverphone27.caverphone("");
        java.lang.String str53 = caverphone27.caverphone("AA11111111");
        java.lang.String str55 = caverphone27.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone56 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean59 = caverphone56.isCaverphoneEqual("hi!", "");
        java.lang.String str61 = caverphone56.caverphone("");
        boolean boolean64 = caverphone56.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj65 = caverphone27.encode((java.lang.Object) "AA11111111");
        java.lang.String str67 = caverphone27.encode("");
        java.lang.Object obj68 = caverphone0.encode((java.lang.Object) str67);
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AA11111111" + "'", str45, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "1111111111" + "'", obj49, "1111111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AA11111111" + "'", str53, "AA11111111");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1111111111" + "'", str61, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "AA11111111" + "'", obj65, "AA11111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "1111111111" + "'", obj68, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.encode("");
        java.lang.String str21 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("1111111111", "");
        boolean boolean28 = caverphone22.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str30 = caverphone22.encode("AA11111111");
        java.lang.String str32 = caverphone22.encode("");
        java.lang.String str34 = caverphone22.caverphone("");
        java.lang.String str36 = caverphone22.caverphone("1111111111");
        java.lang.String str38 = caverphone22.encode("1111111111");
        java.lang.String str40 = caverphone22.encode("AA11111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean44 = caverphone0.isCaverphoneEqual("", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone8 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean11 = caverphone8.isCaverphoneEqual("hi!", "");
        java.lang.String str13 = caverphone8.caverphone("AA11111111");
        boolean boolean16 = caverphone8.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.encode("hi!");
        java.lang.String str24 = caverphone17.caverphone("1111111111");
        java.lang.String str26 = caverphone17.encode("1111111111");
        java.lang.Object obj27 = caverphone8.encode((java.lang.Object) "1111111111");
        java.lang.String str29 = caverphone8.caverphone("1111111111");
        boolean boolean32 = caverphone8.isCaverphoneEqual("", "hi!");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean36 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean42 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.Class<?> wildcardClass43 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "1111111111" + "'", obj27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "AA11111111" + "'", obj33, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone21 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean24 = caverphone21.isCaverphoneEqual("hi!", "");
        java.lang.String str26 = caverphone21.caverphone("AA11111111");
        java.lang.String str28 = caverphone21.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone29 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean32 = caverphone29.isCaverphoneEqual("hi!", "");
        java.lang.String str34 = caverphone29.caverphone("");
        boolean boolean37 = caverphone29.isCaverphoneEqual("AA11111111", "");
        java.lang.String str39 = caverphone29.caverphone("AA11111111");
        boolean boolean42 = caverphone29.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj43 = caverphone21.encode((java.lang.Object) "");
        java.lang.String str45 = caverphone21.caverphone("");
        java.lang.String str47 = caverphone21.caverphone("AA11111111");
        java.lang.String str49 = caverphone21.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone50 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean53 = caverphone50.isCaverphoneEqual("hi!", "");
        java.lang.String str55 = caverphone50.caverphone("");
        boolean boolean58 = caverphone50.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj59 = caverphone21.encode((java.lang.Object) "AA11111111");
        boolean boolean62 = caverphone21.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.Object obj63 = caverphone0.encode((java.lang.Object) "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AA11111111" + "'", str39, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "1111111111" + "'", obj43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1111111111" + "'", str55, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "AA11111111" + "'", obj59, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "AA11111111" + "'", obj63, "AA11111111");
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        java.lang.String str10 = caverphone0.encode("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        java.lang.String str16 = caverphone0.caverphone("");
        java.lang.String str18 = caverphone0.encode("AA11111111");
        java.lang.String str20 = caverphone0.encode("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        boolean boolean37 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str39 = caverphone0.encode("1111111111");
        java.lang.String str41 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("hi!");
        java.lang.String str19 = caverphone0.caverphone("AA11111111");
        java.lang.String str21 = caverphone0.caverphone("");
        boolean boolean24 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str26 = caverphone0.encode("AA11111111");
        boolean boolean29 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AA11111111" + "'", str17, "AA11111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.caverphone("1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("");
        boolean boolean16 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        boolean boolean22 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1111111111" + "'", str9, "1111111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        java.lang.String str17 = caverphone0.encode("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean23 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str25 = caverphone0.caverphone("AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        boolean boolean20 = caverphone14.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str22 = caverphone14.encode("");
        java.lang.String str24 = caverphone14.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) str24);
        org.apache.commons.codec.language.Caverphone caverphone26 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean29 = caverphone26.isCaverphoneEqual("hi!", "");
        boolean boolean32 = caverphone26.isCaverphoneEqual("", "hi!");
        java.lang.String str34 = caverphone26.caverphone("hi!");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.encode("");
        java.lang.String str39 = caverphone0.encode("");
        java.lang.String str41 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "AA11111111" + "'", obj35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.caverphone("hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj18 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str20 = caverphone0.caverphone("1111111111");
        java.lang.String str22 = caverphone0.encode("hi!");
        org.apache.commons.codec.language.Caverphone caverphone23 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean26 = caverphone23.isCaverphoneEqual("hi!", "");
        java.lang.String str28 = caverphone23.caverphone("");
        boolean boolean31 = caverphone23.isCaverphoneEqual("AA11111111", "");
        java.lang.String str33 = caverphone23.caverphone("AA11111111");
        java.lang.String str35 = caverphone23.caverphone("AA11111111");
        java.lang.String str37 = caverphone23.caverphone("hi!");
        java.lang.String str39 = caverphone23.encode("1111111111");
        boolean boolean42 = caverphone23.isCaverphoneEqual("1111111111", "hi!");
        java.lang.String str44 = caverphone23.encode("AA11111111");
        boolean boolean47 = caverphone23.isCaverphoneEqual("", "");
        java.lang.Object obj48 = caverphone0.encode((java.lang.Object) "");
        boolean boolean51 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "1111111111" + "'", obj18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1111111111" + "'", str28, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AA11111111" + "'", str35, "AA11111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AA11111111" + "'", str37, "AA11111111");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AA11111111" + "'", str44, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "1111111111" + "'", obj48, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("hi!");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("1111111111");
        java.lang.String str13 = caverphone0.encode("");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        java.lang.String str28 = caverphone16.caverphone("AA11111111");
        java.lang.String str30 = caverphone16.caverphone("hi!");
        java.lang.String str32 = caverphone16.caverphone("1111111111");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str35 = caverphone0.caverphone("1111111111");
        boolean boolean38 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1111111111" + "'", str13, "1111111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1111111111" + "'", str35, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        boolean boolean28 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str30 = caverphone0.encode("1111111111");
        java.lang.String str32 = caverphone0.caverphone("1111111111");
        java.lang.String str34 = caverphone0.encode("AA11111111");
        boolean boolean37 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str39 = caverphone0.encode("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        java.lang.String str7 = caverphone0.caverphone("AA11111111");
        java.lang.String str9 = caverphone0.caverphone("hi!");
        java.lang.String str11 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("1111111111", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str20 = caverphone12.encode("");
        java.lang.String str22 = caverphone12.encode("hi!");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) str22);
        boolean boolean26 = caverphone0.isCaverphoneEqual("AA11111111", "AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone27 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean30 = caverphone27.isCaverphoneEqual("hi!", "");
        java.lang.String str32 = caverphone27.encode("hi!");
        java.lang.String str34 = caverphone27.caverphone("AA11111111");
        java.lang.String str36 = caverphone27.caverphone("hi!");
        java.lang.String str38 = caverphone27.caverphone("hi!");
        java.lang.String str40 = caverphone27.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = caverphone0.encode((java.lang.Object) caverphone27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AA11111111" + "'", str7, "AA11111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AA11111111" + "'", str11, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1111111111" + "'", str20, "1111111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "AA11111111" + "'", obj23, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean9 = caverphone0.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str11 = caverphone0.caverphone("");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        java.lang.String str29 = caverphone16.encode("hi!");
        java.lang.Object obj30 = caverphone0.encode((java.lang.Object) "hi!");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("1111111111", "");
        boolean boolean37 = caverphone31.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str39 = caverphone31.encode("");
        java.lang.String str41 = caverphone31.caverphone("");
        java.lang.String str43 = caverphone31.caverphone("");
        java.lang.String str45 = caverphone31.caverphone("1111111111");
        java.lang.String str47 = caverphone31.caverphone("AA11111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = caverphone0.encode((java.lang.Object) caverphone31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "AA11111111" + "'", obj30, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1111111111" + "'", str41, "1111111111");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1111111111" + "'", str43, "1111111111");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1111111111" + "'", str45, "1111111111");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AA11111111" + "'", str47, "AA11111111");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str13 = caverphone0.encode("hi!");
        java.lang.String str15 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("1111111111", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str24 = caverphone16.encode("AA11111111");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "AA11111111");
        java.lang.String str27 = caverphone0.encode("");
        boolean boolean30 = caverphone0.isCaverphoneEqual("1111111111", "1111111111");
        boolean boolean33 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str38 = caverphone0.caverphone("1111111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "AA11111111" + "'", obj25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        java.lang.String str19 = caverphone0.encode("hi!");
        java.lang.String str21 = caverphone0.encode("");
        org.apache.commons.codec.language.Caverphone caverphone22 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean25 = caverphone22.isCaverphoneEqual("hi!", "");
        java.lang.String str27 = caverphone22.caverphone("AA11111111");
        boolean boolean30 = caverphone22.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone31 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean34 = caverphone31.isCaverphoneEqual("hi!", "");
        java.lang.String str36 = caverphone31.encode("hi!");
        java.lang.String str38 = caverphone31.caverphone("1111111111");
        java.lang.String str40 = caverphone31.encode("1111111111");
        java.lang.Object obj41 = caverphone22.encode((java.lang.Object) "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone42 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean45 = caverphone42.isCaverphoneEqual("hi!", "");
        java.lang.String str47 = caverphone42.caverphone("");
        boolean boolean50 = caverphone42.isCaverphoneEqual("AA11111111", "");
        java.lang.String str52 = caverphone42.encode("1111111111");
        java.lang.Object obj53 = caverphone22.encode((java.lang.Object) str52);
        boolean boolean56 = caverphone22.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone57 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean60 = caverphone57.isCaverphoneEqual("hi!", "");
        boolean boolean63 = caverphone57.isCaverphoneEqual("", "hi!");
        java.lang.String str65 = caverphone57.caverphone("");
        boolean boolean68 = caverphone57.isCaverphoneEqual("", "1111111111");
        java.lang.Object obj70 = caverphone57.encode((java.lang.Object) "");
        java.lang.Object obj71 = caverphone22.encode(obj70);
        java.lang.Object obj72 = caverphone0.encode(obj71);
        java.lang.String str74 = caverphone0.caverphone("");
        java.lang.String str76 = caverphone0.caverphone("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111111" + "'", str40, "1111111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "1111111111" + "'", obj41, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1111111111" + "'", str47, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1111111111" + "'", str52, "1111111111");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "1111111111" + "'", obj53, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "1111111111" + "'", obj70, "1111111111");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "1111111111" + "'", obj72, "1111111111");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "1111111111" + "'", str74, "1111111111");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "1111111111" + "'", str76, "1111111111");
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean16 = caverphone0.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone17 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean20 = caverphone17.isCaverphoneEqual("hi!", "");
        java.lang.String str22 = caverphone17.caverphone("AA11111111");
        java.lang.String str24 = caverphone17.caverphone("");
        java.lang.Object obj25 = caverphone0.encode((java.lang.Object) "");
        java.lang.String str27 = caverphone0.encode("1111111111");
        java.lang.String str29 = caverphone0.caverphone("");
        java.lang.String str31 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass32 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "1111111111" + "'", obj25, "1111111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        java.lang.String str8 = caverphone0.encode("");
        java.lang.String str10 = caverphone0.encode("hi!");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone13 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean16 = caverphone13.isCaverphoneEqual("hi!", "");
        java.lang.String str18 = caverphone13.caverphone("");
        boolean boolean21 = caverphone13.isCaverphoneEqual("AA11111111", "");
        java.lang.String str23 = caverphone13.encode("1111111111");
        boolean boolean26 = caverphone13.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str28 = caverphone13.caverphone("hi!");
        java.lang.String str30 = caverphone13.encode("1111111111");
        boolean boolean33 = caverphone13.isCaverphoneEqual("", "AA11111111");
        boolean boolean36 = caverphone13.isCaverphoneEqual("AA11111111", "");
        boolean boolean39 = caverphone13.isCaverphoneEqual("1111111111", "");
        java.lang.String str41 = caverphone13.caverphone("hi!");
        java.lang.Object obj42 = caverphone0.encode((java.lang.Object) str41);
        java.lang.String str44 = caverphone0.encode("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1111111111" + "'", str23, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1111111111" + "'", str30, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AA11111111" + "'", str41, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "AA11111111" + "'", obj42, "AA11111111");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str15 = caverphone0.encode("1111111111");
        java.lang.String str17 = caverphone0.caverphone("");
        java.lang.String str19 = caverphone0.caverphone("hi!");
        boolean boolean22 = caverphone0.isCaverphoneEqual("", "AA11111111");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str27 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone28 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean31 = caverphone28.isCaverphoneEqual("hi!", "");
        java.lang.String str33 = caverphone28.caverphone("");
        boolean boolean36 = caverphone28.isCaverphoneEqual("AA11111111", "");
        java.lang.String str38 = caverphone28.caverphone("AA11111111");
        java.lang.String str40 = caverphone28.caverphone("AA11111111");
        java.lang.String str42 = caverphone28.caverphone("AA11111111");
        boolean boolean45 = caverphone28.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone46 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean49 = caverphone46.isCaverphoneEqual("hi!", "");
        boolean boolean52 = caverphone46.isCaverphoneEqual("", "hi!");
        java.lang.String str54 = caverphone46.caverphone("");
        boolean boolean57 = caverphone46.isCaverphoneEqual("", "1111111111");
        boolean boolean60 = caverphone46.isCaverphoneEqual("", "");
        java.lang.Object obj61 = caverphone28.encode((java.lang.Object) "");
        boolean boolean64 = caverphone28.isCaverphoneEqual("1111111111", "hi!");
        boolean boolean67 = caverphone28.isCaverphoneEqual("hi!", "1111111111");
        java.lang.String str69 = caverphone28.caverphone("1111111111");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = caverphone0.encode((java.lang.Object) caverphone28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.codec.EncoderException; message: Parameter supplied to Caverphone encode is not of type java.lang.String");
        } catch (org.apache.commons.codec.EncoderException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AA11111111" + "'", str19, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AA11111111" + "'", str42, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "1111111111" + "'", obj61, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1111111111" + "'", str69, "1111111111");
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("hi!");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.encode("1111111111");
        boolean boolean19 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str21 = caverphone0.caverphone("");
        java.lang.Class<?> wildcardClass22 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("hi!");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str27 = caverphone0.caverphone("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("AA11111111");
        java.lang.String str7 = caverphone0.caverphone("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("");
        java.lang.String str13 = caverphone0.caverphone("hi!");
        java.lang.String str15 = caverphone0.encode("hi!");
        java.lang.Class<?> wildcardClass16 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AA11111111" + "'", str13, "AA11111111");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        org.apache.commons.codec.language.Caverphone caverphone7 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean10 = caverphone7.isCaverphoneEqual("hi!", "");
        java.lang.String str12 = caverphone7.encode("hi!");
        java.lang.String str14 = caverphone7.caverphone("1111111111");
        java.lang.Object obj15 = caverphone0.encode((java.lang.Object) str14);
        java.lang.String str17 = caverphone0.caverphone("1111111111");
        boolean boolean20 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str22 = caverphone0.caverphone("hi!");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str27 = caverphone0.caverphone("");
        java.lang.String str29 = caverphone0.encode("");
        java.lang.String str31 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass32 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1111111111" + "'", str14, "1111111111");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "1111111111" + "'", obj15, "1111111111");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AA11111111" + "'", str22, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1111111111" + "'", str29, "1111111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1111111111" + "'", str31, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        boolean boolean32 = caverphone18.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.String str44 = caverphone34.encode("1111111111");
        boolean boolean47 = caverphone34.isCaverphoneEqual("AA11111111", "");
        org.apache.commons.codec.language.Caverphone caverphone48 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean51 = caverphone48.isCaverphoneEqual("1111111111", "");
        java.lang.Object obj52 = caverphone34.encode((java.lang.Object) "");
        java.lang.String str54 = caverphone34.caverphone("1111111111");
        java.lang.String str56 = caverphone34.encode("hi!");
        java.lang.String str58 = caverphone34.caverphone("1111111111");
        java.lang.Object obj59 = caverphone0.encode((java.lang.Object) str58);
        org.apache.commons.codec.language.Caverphone caverphone60 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean63 = caverphone60.isCaverphoneEqual("1111111111", "");
        java.lang.String str65 = caverphone60.caverphone("1111111111");
        java.lang.String str67 = caverphone60.encode("");
        boolean boolean70 = caverphone60.isCaverphoneEqual("1111111111", "hi!");
        java.lang.Object obj71 = caverphone0.encode((java.lang.Object) "1111111111");
        java.lang.String str73 = caverphone0.caverphone("");
        boolean boolean76 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1111111111" + "'", str44, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1111111111" + "'", str54, "1111111111");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AA11111111" + "'", str56, "AA11111111");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1111111111" + "'", str58, "1111111111");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "1111111111" + "'", obj59, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1111111111" + "'", str65, "1111111111");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1111111111" + "'", str67, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "1111111111" + "'", obj71, "1111111111");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1111111111" + "'", str73, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        java.lang.String str15 = caverphone0.caverphone("hi!");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        java.lang.String str21 = caverphone16.caverphone("");
        boolean boolean24 = caverphone16.isCaverphoneEqual("AA11111111", "");
        java.lang.String str26 = caverphone16.caverphone("AA11111111");
        java.lang.String str28 = caverphone16.caverphone("AA11111111");
        java.lang.String str30 = caverphone16.caverphone("hi!");
        java.lang.String str32 = caverphone16.caverphone("1111111111");
        java.lang.String str34 = caverphone16.encode("1111111111");
        java.lang.Object obj35 = caverphone0.encode((java.lang.Object) str34);
        java.lang.String str37 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone38 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean41 = caverphone38.isCaverphoneEqual("1111111111", "");
        boolean boolean44 = caverphone38.isCaverphoneEqual("hi!", "hi!");
        boolean boolean47 = caverphone38.isCaverphoneEqual("AA11111111", "1111111111");
        java.lang.String str49 = caverphone38.caverphone("");
        java.lang.String str51 = caverphone38.encode("");
        java.lang.Object obj52 = caverphone0.encode((java.lang.Object) str51);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1111111111" + "'", str21, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AA11111111" + "'", str26, "AA11111111");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AA11111111" + "'", str28, "AA11111111");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AA11111111" + "'", str30, "AA11111111");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1111111111" + "'", str32, "1111111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "1111111111" + "'", obj35, "1111111111");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1111111111" + "'", str37, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1111111111" + "'", str49, "1111111111");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1111111111" + "'", str51, "1111111111");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "1111111111" + "'", obj52, "1111111111");
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("");
        java.lang.String str12 = caverphone0.caverphone("1111111111");
        java.lang.Class<?> wildcardClass13 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1111111111" + "'", str12, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        java.lang.String str2 = caverphone0.caverphone("1111111111");
        java.lang.String str4 = caverphone0.caverphone("1111111111");
        java.lang.String str6 = caverphone0.encode("AA11111111");
        java.lang.String str8 = caverphone0.encode("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone9 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean12 = caverphone9.isCaverphoneEqual("hi!", "");
        boolean boolean15 = caverphone9.isCaverphoneEqual("", "hi!");
        java.lang.String str17 = caverphone9.caverphone("");
        boolean boolean20 = caverphone9.isCaverphoneEqual("", "1111111111");
        boolean boolean23 = caverphone9.isCaverphoneEqual("", "");
        java.lang.String str25 = caverphone9.caverphone("hi!");
        java.lang.String str27 = caverphone9.caverphone("");
        java.lang.String str29 = caverphone9.caverphone("hi!");
        boolean boolean32 = caverphone9.isCaverphoneEqual("", "");
        java.lang.Object obj33 = caverphone0.encode((java.lang.Object) "");
        boolean boolean36 = caverphone0.isCaverphoneEqual("", "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1111111111" + "'", str2, "1111111111");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1111111111" + "'", str4, "1111111111");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AA11111111" + "'", str6, "AA11111111");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AA11111111" + "'", str8, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1111111111" + "'", str17, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AA11111111" + "'", str25, "AA11111111");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1111111111" + "'", str27, "1111111111");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "1111111111" + "'", obj33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str15 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone16 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean19 = caverphone16.isCaverphoneEqual("hi!", "");
        boolean boolean22 = caverphone16.isCaverphoneEqual("", "hi!");
        java.lang.String str24 = caverphone16.caverphone("");
        boolean boolean27 = caverphone16.isCaverphoneEqual("", "1111111111");
        boolean boolean30 = caverphone16.isCaverphoneEqual("", "");
        java.lang.String str32 = caverphone16.caverphone("hi!");
        java.lang.String str34 = caverphone16.caverphone("");
        java.lang.String str36 = caverphone16.caverphone("hi!");
        java.lang.String str38 = caverphone16.encode("");
        java.lang.String str40 = caverphone16.caverphone("AA11111111");
        java.lang.Object obj41 = caverphone0.encode((java.lang.Object) str40);
        boolean boolean44 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        boolean boolean47 = caverphone0.isCaverphoneEqual("AA11111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AA11111111" + "'", str15, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AA11111111" + "'", str32, "AA11111111");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1111111111" + "'", str34, "1111111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1111111111" + "'", str38, "1111111111");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AA11111111" + "'", str40, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "AA11111111" + "'", obj41, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str5 = caverphone0.caverphone("1111111111");
        java.lang.String str7 = caverphone0.encode("");
        java.lang.String str9 = caverphone0.encode("hi!");
        java.lang.String str11 = caverphone0.encode("1111111111");
        org.apache.commons.codec.language.Caverphone caverphone12 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean15 = caverphone12.isCaverphoneEqual("hi!", "");
        boolean boolean18 = caverphone12.isCaverphoneEqual("", "hi!");
        java.lang.String str20 = caverphone12.encode("hi!");
        java.lang.String str22 = caverphone12.caverphone("");
        java.lang.Object obj23 = caverphone0.encode((java.lang.Object) str22);
        java.lang.String str25 = caverphone0.encode("1111111111");
        java.lang.Class<?> wildcardClass26 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1111111111" + "'", str7, "1111111111");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA11111111" + "'", str9, "AA11111111");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1111111111" + "'", str11, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "1111111111" + "'", obj23, "1111111111");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1111111111" + "'", str25, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("AA11111111");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "1111111111");
        java.lang.String str19 = caverphone0.encode("");
        java.lang.Class<?> wildcardClass20 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        boolean boolean17 = caverphone0.isCaverphoneEqual("", "");
        org.apache.commons.codec.language.Caverphone caverphone18 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean21 = caverphone18.isCaverphoneEqual("hi!", "");
        boolean boolean24 = caverphone18.isCaverphoneEqual("", "hi!");
        java.lang.String str26 = caverphone18.caverphone("");
        boolean boolean29 = caverphone18.isCaverphoneEqual("", "1111111111");
        java.lang.String str31 = caverphone18.encode("hi!");
        java.lang.String str33 = caverphone18.encode("");
        org.apache.commons.codec.language.Caverphone caverphone34 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean37 = caverphone34.isCaverphoneEqual("hi!", "");
        java.lang.String str39 = caverphone34.caverphone("");
        boolean boolean42 = caverphone34.isCaverphoneEqual("AA11111111", "");
        java.lang.Object obj43 = caverphone18.encode((java.lang.Object) "AA11111111");
        boolean boolean46 = caverphone18.isCaverphoneEqual("AA11111111", "AA11111111");
        java.lang.String str48 = caverphone18.encode("1111111111");
        java.lang.String str50 = caverphone18.encode("hi!");
        java.lang.Object obj51 = caverphone0.encode((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1111111111" + "'", str26, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1111111111" + "'", str33, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1111111111" + "'", str39, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "AA11111111" + "'", obj43, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1111111111" + "'", str48, "1111111111");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AA11111111" + "'", str50, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "AA11111111" + "'", obj51, "AA11111111");
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.encode("1111111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "");
        java.lang.String str15 = caverphone0.caverphone("");
        boolean boolean18 = caverphone0.isCaverphoneEqual("hi!", "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1111111111" + "'", str10, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1111111111" + "'", str15, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        boolean boolean6 = caverphone0.isCaverphoneEqual("", "hi!");
        java.lang.String str8 = caverphone0.caverphone("");
        boolean boolean11 = caverphone0.isCaverphoneEqual("", "1111111111");
        boolean boolean14 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str16 = caverphone0.caverphone("hi!");
        java.lang.String str18 = caverphone0.caverphone("");
        java.lang.String str20 = caverphone0.caverphone("hi!");
        java.lang.String str22 = caverphone0.encode("");
        boolean boolean25 = caverphone0.isCaverphoneEqual("", "");
        java.lang.String str27 = caverphone0.encode("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1111111111" + "'", str8, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AA11111111" + "'", str16, "AA11111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1111111111" + "'", str18, "1111111111");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AA11111111" + "'", str20, "AA11111111");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1111111111" + "'", str22, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AA11111111" + "'", str27, "AA11111111");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.encode("hi!");
        boolean boolean8 = caverphone0.isCaverphoneEqual("", "AA11111111");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        boolean boolean13 = caverphone0.isCaverphoneEqual("1111111111", "");
        org.apache.commons.codec.language.Caverphone caverphone14 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean17 = caverphone14.isCaverphoneEqual("hi!", "");
        java.lang.String str19 = caverphone14.caverphone("");
        boolean boolean22 = caverphone14.isCaverphoneEqual("AA11111111", "");
        java.lang.String str24 = caverphone14.caverphone("AA11111111");
        boolean boolean27 = caverphone14.isCaverphoneEqual("", "1111111111");
        java.lang.String str29 = caverphone14.caverphone("AA11111111");
        boolean boolean32 = caverphone14.isCaverphoneEqual("", "1111111111");
        java.lang.String str34 = caverphone14.caverphone("AA11111111");
        java.lang.String str36 = caverphone14.caverphone("1111111111");
        java.lang.String str38 = caverphone14.caverphone("hi!");
        java.lang.Object obj39 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass40 = caverphone0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AA11111111" + "'", str5, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1111111111" + "'", str19, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AA11111111" + "'", str24, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AA11111111" + "'", str34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1111111111" + "'", str36, "1111111111");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AA11111111" + "'", str38, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "AA11111111" + "'", obj39, "AA11111111");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.codec.language.Caverphone caverphone0 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean3 = caverphone0.isCaverphoneEqual("hi!", "");
        java.lang.String str5 = caverphone0.caverphone("");
        boolean boolean8 = caverphone0.isCaverphoneEqual("AA11111111", "");
        java.lang.String str10 = caverphone0.caverphone("AA11111111");
        java.lang.String str12 = caverphone0.caverphone("AA11111111");
        java.lang.String str14 = caverphone0.caverphone("hi!");
        java.lang.String str16 = caverphone0.caverphone("1111111111");
        java.lang.String str18 = caverphone0.caverphone("AA11111111");
        org.apache.commons.codec.language.Caverphone caverphone19 = new org.apache.commons.codec.language.Caverphone();
        boolean boolean22 = caverphone19.isCaverphoneEqual("hi!", "");
        java.lang.String str24 = caverphone19.caverphone("");
        boolean boolean27 = caverphone19.isCaverphoneEqual("AA11111111", "");
        java.lang.String str29 = caverphone19.caverphone("AA11111111");
        java.lang.String str31 = caverphone19.caverphone("AA11111111");
        java.lang.String str33 = caverphone19.caverphone("hi!");
        java.lang.Object obj34 = caverphone0.encode((java.lang.Object) "hi!");
        java.lang.String str36 = caverphone0.encode("AA11111111");
        boolean boolean39 = caverphone0.isCaverphoneEqual("hi!", "hi!");
        boolean boolean42 = caverphone0.isCaverphoneEqual("1111111111", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1111111111" + "'", str5, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AA11111111" + "'", str10, "AA11111111");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AA11111111" + "'", str12, "AA11111111");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AA11111111" + "'", str14, "AA11111111");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1111111111" + "'", str16, "1111111111");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AA11111111" + "'", str18, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1111111111" + "'", str24, "1111111111");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AA11111111" + "'", str29, "AA11111111");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AA11111111" + "'", str31, "AA11111111");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AA11111111" + "'", str33, "AA11111111");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "AA11111111" + "'", obj34, "AA11111111");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AA11111111" + "'", str36, "AA11111111");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }
}

