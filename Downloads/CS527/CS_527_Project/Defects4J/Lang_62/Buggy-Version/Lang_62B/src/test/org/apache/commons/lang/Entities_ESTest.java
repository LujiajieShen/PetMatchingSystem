/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 03:59:19 GMT 2024
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      entities0.HTML40.escape((Writer) stringWriter0, "R)5K=n:^ 7T ");
      assertEquals("R)5K=n:^ 7T ", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.escape("0hboQbDxP~]kb&:/");
      assertEquals("0hboQbDxP~]kb&amp;:/", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(106);
      entities_BinaryEntityMap0.add("", 125);
      entities_BinaryEntityMap0.add((String) null, 30);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("222", 98);
      // Undeclared exception!
      try { 
        entities_BinaryEntityMap0.add("222", 98);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(2882);
      String string0 = entities_BinaryEntityMap0.name(112);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add((String) null, 1702);
      entities_BinaryEntityMap0.add("Agrave", 5664);
      String string0 = entities_BinaryEntityMap0.name(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(138);
      entities_BinaryEntityMap0.size = 4416;
      // Undeclared exception!
      try { 
        entities_BinaryEntityMap0.name(138);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2207
         //
         verifyException("org.apache.commons.lang.Entities$BinaryEntityMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.size = (-969);
      int int0 = entities_ArrayEntityMap0.value("O)'P1I");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.size = (-969);
      String string0 = entities_ArrayEntityMap0.name(1000);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(128);
      entities_ArrayEntityMap0.ensureCapacity(128);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.LookupEntityMap entities_LookupEntityMap0 = new Entities.LookupEntityMap();
      String string0 = entities_LookupEntityMap0.name(2270);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities.PrimitiveEntityMap entities_PrimitiveEntityMap0 = new Entities.PrimitiveEntityMap();
      int int0 = entities_PrimitiveEntityMap0.value((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities.PrimitiveEntityMap entities_PrimitiveEntityMap0 = new Entities.PrimitiveEntityMap();
      entities_PrimitiveEntityMap0.add("]P)`cB,", 50);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.XML.escape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      entities0.addEntity("", 1);
      int int0 = entities0.entityValue("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.entityName(236);
      assertNotNull(string0);
      assertEquals("igrave", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      // Undeclared exception!
      try { 
        entities0.unescape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        entities0.unescape((Writer) stringWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        Entities.fillWithHtml40Entities((Entities) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      // Undeclared exception!
      try { 
        entities0.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      // Undeclared exception!
      try { 
        entities0.escape((Writer) null, "GXv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Entities entities0 = Entities.XML;
      Entities entities1 = new Entities();
      entities1.HTML32.entityName(122);
      Entities.fillWithHtml40Entities(entities1);
      String[][] stringArray0 = new String[0][7];
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(122);
      entities0.XML.map = (Entities.EntityMap) entities_BinaryEntityMap0;
      entities0.addEntities(stringArray0);
      Entities.PrimitiveEntityMap entities_PrimitiveEntityMap0 = new Entities.PrimitiveEntityMap();
      entities_PrimitiveEntityMap0.name(122);
      entities_PrimitiveEntityMap0.value((String) null);
      int int0 = 75;
      entities0.addEntity((String) null, 75);
      entities1.entityName(122);
      entities1.entityValue("");
      String string0 = "Illegal Load: ";
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-817));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String[][] stringArray0 = new String[4][1];
      // Undeclared exception!
      try { 
        entities0.addEntities(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String[][] stringArray0 = new String[2][5];
      // Undeclared exception!
      try { 
        entities0.addEntities(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("6>E# +t6Ss^Dm9mQ<", 134);
      String string0 = entities_ArrayEntityMap0.name(240);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      entities0.XML.unescape((Writer) stringWriter0, "Illegal Ca&Illegal Capacity: ;acity: ");
      assertEquals("Illegal Ca&Illegal Capacity: ;acity: ", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "&Y\\u{Lq~w=`VXh%51+";
      entities0.unescape((Writer) stringWriter0, string0);
      assertEquals("&Y\\u{Lq~w=`VXh%51+", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      entities0.XML.unescape((Writer) stringWriter0, "X\u0003'8gT5m1kqOYp8\"03");
      assertEquals("X\u0003'8gT5m1kqOYp8\"03", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Entities.PrimitiveEntityMap entities_PrimitiveEntityMap0 = new Entities.PrimitiveEntityMap();
      entities_PrimitiveEntityMap0.add("Illegal Capacity: ", 112);
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("Illegal Ca&Illegal Capacity: ;acity: ");
      assertEquals("Illegal Ca&Illegal Capacity: ;acity: ", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape("Ak)^lf 0vCK&>S");
      assertEquals("Ak)^lf 0vCK&>S", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.HTML32.unescape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter();
      entities0.HTML40.escape((Writer) stringWriter0, "hUDPk|Y( {K&36");
      assertEquals("hUDPk|Y( {K&amp;36", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("222", 98);
      String string0 = entities_BinaryEntityMap0.name(113);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("]P)`cB,", 362);
      String string0 = entities_BinaryEntityMap0.name(362);
      assertEquals("]P)`cB,", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("", (-2848));
      int int0 = entities_ArrayEntityMap0.value("B");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add((String) null, 134);
      String string0 = entities_ArrayEntityMap0.name(134);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.entityName(256);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      int int0 = entities_HashEntityMap0.value("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      entities_HashEntityMap0.add("Vk-_", 125);
      int int0 = entities_HashEntityMap0.value("Vk-_");
      assertEquals(125, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter(256);
      entities0.HTML32.unescape((Writer) stringWriter0, "=&amp;6}HF]1J0Z7&amp;");
      assertEquals("=&6}HF]1J0Z7&", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      String string0 = entities_TreeEntityMap0.name((-2151));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("]P)`cB,", 362);
      int int0 = entities_BinaryEntityMap0.value("]P)`cB,");
      assertEquals(362, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Entities.LookupEntityMap entities_LookupEntityMap0 = new Entities.LookupEntityMap();
      Entities.PrimitiveEntityMap entities_PrimitiveEntityMap0 = new Entities.PrimitiveEntityMap();
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      entities_TreeEntityMap0.value("nS$@[~9:");
      Entities entities0 = Entities.HTML32;
      // Undeclared exception!
      try { 
        entities0.entityName((-766));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -766
         //
         verifyException("org.apache.commons.lang.Entities$LookupEntityMap", e);
      }
  }
}
