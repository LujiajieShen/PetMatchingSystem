import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        java.lang.reflect.Type type2 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType3 = xmlSerializerProvider1.constructType(type2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider2 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) (short) 1, jsonGenerator3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JavaType javaType2 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType2, beanProperty3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.BeanDescription beanDescription2 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 1.0f, (-1L), (-1.0f), 1.0d };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription2, beanPropertyDefinition3, "hi!", objArray9);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[1.0, -1, -1.0, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[1.0, -1, -1.0, 1.0]");
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JavaType javaType2 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findValueSerializer(javaType2, beanProperty3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator3, (java.lang.Object) objJsonSerializer6, javaType7, objJsonSerializer10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.introspect.Annotated annotated2 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver4 = xmlSerializerProvider1.objectIdResolverInstance(annotated2, objectIdInfo3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeValue((java.lang.Object) '#', jsonGenerator4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JavaType javaType3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer4 = xmlSerializerProvider1.findTypeSerializer(javaType3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Throwable throwable3 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        java.lang.Object[] objArray9 = new java.lang.Object[] { objJsonSerializer7, (short) -1 };
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem(throwable3, "hi!", objArray9);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objArray9);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = xmlSerializerProvider1.getAttribute((java.lang.Object) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) ' ', jsonGenerator3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = xmlSerializerProvider1.hasSerializationFeatures(1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        java.lang.reflect.Type type4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType5 = xmlSerializerProvider1.constructType(type4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider5 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector4 = xmlSerializerProvider1.getAnnotationIntrospector();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.acceptJsonFormatVisitor(javaType5, jsonFormatVisitorWrapper6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: A class must be provided");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory4 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig4, serializerFactory5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = null;
        com.fasterxml.jackson.databind.JavaType javaType6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator4, (java.lang.Object) 1, javaType6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findValueSerializer(javaType4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        int int6 = xmlSerializerProvider5.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider5.findNullValueSerializer(beanProperty7);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider2 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale5 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone4 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = xmlSerializerProvider1.isEnabled(mapperFeature4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale4 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType4, beanProperty5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) (short) 10, jsonGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findValueSerializer(javaType4, beanProperty5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        int int6 = xmlSerializerProvider5.cachedSerializersCount();
        int int7 = xmlSerializerProvider5.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider5.getClass();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeField("hi!", (java.lang.Object) xmlSerializerProvider5, jsonGenerator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver5 = xmlSerializerProvider1.objectIdResolverInstance(annotated3, objectIdInfo4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findValueSerializer(javaType4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.findKeySerializer(javaType5, beanProperty6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can not pass null JsonSerializer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer8);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeValue((java.lang.Object) 100.0d, jsonGenerator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.util.Date date5 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date5, jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findValueSerializer(javaType5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory5 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanDescription beanDescription3 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition4 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.findNullValueSerializer(beanProperty15);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = xmlSerializerProvider13.handlePrimaryContextualization(objJsonSerializer19, beanProperty20);
        java.lang.Object[] objArray22 = new java.lang.Object[] { objJsonSerializer11, objJsonSerializer19 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider7.mappingException("", objArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement annotatedElement24 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription3, beanPropertyDefinition4, "hi!", objArray22);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(jsonGenerator9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.BeanDescription beanDescription10 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence13 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription10, "", objArray12);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider12 = xmlSerializerProvider1.createInstance(serializationConfig10, serializerFactory11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        int int6 = xmlSerializerProvider5.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = xmlSerializerProvider5.getGenerator();
        int int8 = xmlSerializerProvider5.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider5.findNullValueSerializer(beanProperty9);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(jsonGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer5 = xmlSerializerProvider1.findTypeSerializer(javaType4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = serializationConfig4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider17.getDefaultNullKeySerializer();
        xmlSerializerProvider12.setDefaultKeySerializer(objJsonSerializer19);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator10, (java.lang.Object) objJsonSerializer19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Object obj5 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeValue(obj5, jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone3 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = xmlSerializerProvider1.setAttribute((java.lang.Object) (short) -1, (java.lang.Object) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.findKeySerializer(javaType5, beanProperty6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer5 = xmlSerializerProvider1.findTypeSerializer(javaType4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.util.Date date4 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date4, jsonGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = xmlSerializerProvider1.isEnabled(serializationFeature5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider1.findValueSerializer(javaType7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = xmlSerializerProvider1.hasSerializationFeatures((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = null;
        com.fasterxml.jackson.databind.JavaType javaType20 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.findNullValueSerializer(beanProperty24);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = xmlSerializerProvider22.handlePrimaryContextualization(objJsonSerializer28, beanProperty29);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer31 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator18, (java.lang.Object) 100.0f, javaType20, objJsonSerializer28, typeSerializer31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer30);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        int int10 = xmlSerializerProvider9.cachedSerializersCount();
        int int11 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        xmlSerializerProvider9.setNullValueSerializer(objJsonSerializer16);
        com.fasterxml.jackson.databind.JavaType javaType18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator7, (java.lang.Object) xmlSerializerProvider9, javaType18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = xmlSerializerProvider1.hasSerializationFeatures((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.introspect.Annotated annotated19 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator21 = xmlSerializerProvider1.objectIdGeneratorInstance(annotated19, objectIdInfo20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator13 = xmlSerializerProvider11.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider16.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.findNullValueSerializer(beanProperty24);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = xmlSerializerProvider22.handlePrimaryContextualization(objJsonSerializer28, beanProperty29);
        java.lang.Object[] objArray31 = new java.lang.Object[] { objJsonSerializer20, objJsonSerializer28 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException32 = xmlSerializerProvider16.mappingException("", objArray31);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException33 = xmlSerializerProvider11.mappingException("", objArray31);
        java.lang.Object[] objArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException33, "hi!", objArray35);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNull(jsonGenerator13);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(jsonMappingException32);
        org.junit.Assert.assertNotNull(jsonMappingException33);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = xmlSerializerProvider1.hasSerializationFeatures((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findValueSerializer(javaType5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findKeySerializer(javaType4, beanProperty5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass8 = objJsonSerializer7.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType9 = xmlSerializerProvider1.constructType((java.lang.reflect.Type) wildcardClass8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig3 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider5 = xmlSerializerProvider1.createInstance(serializationConfig3, serializerFactory4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone5 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = xmlSerializerProvider1.isEnabled(mapperFeature4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        xmlSerializerProvider5.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator3, (java.lang.Object) xmlSerializerProvider5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer8);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlSerializerProvider7.getGenerator();
        int int10 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider7.findNullValueSerializer(beanProperty11);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator17 = xmlSerializerProvider15.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        int int25 = xmlSerializerProvider24.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider24.findNullValueSerializer(beanProperty26);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        int int30 = xmlSerializerProvider29.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider29.getDefaultNullKeySerializer();
        xmlSerializerProvider24.setDefaultKeySerializer(objJsonSerializer31);
        java.lang.Object[] objArray33 = new java.lang.Object[] { objJsonSerializer12, 10.0d, jsonGenerator17, xmlSerializerProvider19, 0L, xmlSerializerProvider24 };
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem("", objArray33);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(jsonGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNull(jsonGenerator17);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(objArray33);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator7 = xmlSerializerProvider1.objectIdGeneratorInstance(annotated5, objectIdInfo6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.introspect.Annotated annotated4 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        xmlSerializerProvider6.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter8 = xmlSerializerProvider1.converterInstance(annotated4, (java.lang.Object) xmlSerializerProvider6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        int int10 = xmlSerializerProvider9.cachedSerializersCount();
        int int11 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        xmlSerializerProvider9.setNullValueSerializer(objJsonSerializer16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeField("hi!", (java.lang.Object) objJsonSerializer16, jsonGenerator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector10 = xmlSerializerProvider1.getAnnotationIntrospector();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator5, (java.lang.Object) (-1.0d), typeSerializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator13 = xmlSerializerProvider11.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = xmlSerializerProvider17.handlePrimaryContextualization(objJsonSerializer23, beanProperty24);
        java.lang.Object[] objArray26 = new java.lang.Object[] { objJsonSerializer15, objJsonSerializer23 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException27 = xmlSerializerProvider11.mappingException("", objArray26);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException28 = xmlSerializerProvider6.mappingException("", objArray26);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup31 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider32 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup31);
        int int33 = xmlSerializerProvider32.cachedSerializersCount();
        int int34 = xmlSerializerProvider32.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider32.getDefaultNullValueSerializer();
        int int36 = xmlSerializerProvider32.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup37 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider38 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup37);
        int int39 = xmlSerializerProvider38.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider38.findNullValueSerializer(beanProperty40);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup42 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider43 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup42);
        int int44 = xmlSerializerProvider43.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = xmlSerializerProvider43.getDefaultNullKeySerializer();
        xmlSerializerProvider38.setDefaultKeySerializer(objJsonSerializer45);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup47 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider48 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup47);
        int int49 = xmlSerializerProvider48.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = xmlSerializerProvider48.getDefaultNullKeySerializer();
        java.lang.Object[] objArray53 = new java.lang.Object[] { (-1.0d), xmlSerializerProvider32, objJsonSerializer45, xmlSerializerProvider48, 100L, 1 };
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException28, "", objArray53);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNull(jsonGenerator13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(jsonMappingException27);
        org.junit.Assert.assertNotNull(jsonMappingException28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(objArray53);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale3 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig3 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig3, serializerFactory4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.introspect.Annotated annotated11 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator13 = xmlSerializerProvider1.objectIdGeneratorInstance(annotated11, objectIdInfo12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) (short) -1, jsonGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.introspect.Annotated annotated6 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = xmlSerializerProvider13.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider19.findNullValueSerializer(beanProperty21);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = xmlSerializerProvider19.handlePrimaryContextualization(objJsonSerializer25, beanProperty26);
        java.lang.Object[] objArray28 = new java.lang.Object[] { objJsonSerializer17, objJsonSerializer25 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException29 = xmlSerializerProvider13.mappingException("", objArray28);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException30 = xmlSerializerProvider8.mappingException("", objArray28);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider1.serializerInstance(annotated6, (java.lang.Object) xmlSerializerProvider8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned serializer definition of type com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider; expected type JsonSerializer or Class<JsonSerializer> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNull(jsonGenerator15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(jsonMappingException29);
        org.junit.Assert.assertNotNull(jsonMappingException30);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.databind.BeanDescription beanDescription12 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition13 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider16.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.findNullValueSerializer(beanProperty24);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = xmlSerializerProvider22.handlePrimaryContextualization(objJsonSerializer28, beanProperty29);
        java.lang.Object[] objArray31 = new java.lang.Object[] { objJsonSerializer20, objJsonSerializer28 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException32 = xmlSerializerProvider16.mappingException("", objArray31);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException33 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription12, beanPropertyDefinition13, "", objArray31);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(jsonMappingException32);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanDescription beanDescription6 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        int int10 = xmlSerializerProvider9.cachedSerializersCount();
        int int11 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        xmlSerializerProvider9.setNullValueSerializer(objJsonSerializer16);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        int int21 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator22 = xmlSerializerProvider20.getGenerator();
        int int23 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider20.findNullValueSerializer(beanProperty24);
        java.lang.Object[] objArray26 = new java.lang.Object[] { objJsonSerializer16, 0.0d, xmlSerializerProvider20 };
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException27 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription6, "", objArray26);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(jsonGenerator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objArray26);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(10L, jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        java.util.Date date5 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date5, jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig5, serializerFactory6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory11 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.findNullValueSerializer(beanProperty8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        int int12 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        xmlSerializerProvider6.setDefaultKeySerializer(objJsonSerializer13);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType5, beanProperty6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.introspect.Annotated annotated4 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter9 = xmlSerializerProvider1.converterInstance(annotated4, (java.lang.Object) objJsonSerializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.databind.ser.std.NullSerializer; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator5, (java.lang.Object) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass4 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        xmlSerializerProvider6.setDefaultKeySerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider6.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType13 = xmlSerializerProvider1.constructType((java.lang.reflect.Type) wildcardClass12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator4, (java.lang.Object) objJsonSerializer8, typeSerializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        int int21 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator22 = xmlSerializerProvider20.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig23 = xmlSerializerProvider20.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        java.lang.Object[] objArray26 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException27 = xmlSerializerProvider20.mappingException("", objArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = xmlSerializerProvider1.getAttribute((java.lang.Object) objArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(jsonGenerator22);
        org.junit.Assert.assertNull(serializationConfig23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException27);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone4 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeField("hi!", (java.lang.Object) "hi!", jsonGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.mappingException("", objArray7);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) (short) 10, jsonGenerator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException8);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass4 = xmlSerializerProvider1.getSerializationView();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider5 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardClass4);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = null;
        com.fasterxml.jackson.databind.JavaType javaType9 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator7, (java.lang.Object) (byte) 100, javaType9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        int int6 = xmlSerializerProvider5.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass8 = xmlSerializerProvider5.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup9);
        int int11 = xmlSerializerProvider10.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider10.getGenerator();
        int int13 = xmlSerializerProvider10.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider10.findNullValueSerializer(beanProperty14);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = xmlSerializerProvider1.setAttribute((java.lang.Object) wildcardClass8, (java.lang.Object) xmlSerializerProvider10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider5.setDefaultKeySerializer(objJsonSerializer9);
        java.lang.Class<?> wildcardClass11 = xmlSerializerProvider5.getClass();
        com.fasterxml.jackson.databind.JavaType javaType12 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator3, (java.lang.Object) xmlSerializerProvider5, javaType12, objJsonSerializer16, typeSerializer17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass4 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator5, (java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardClass4);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.BeanDescription beanDescription4 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence16 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription4, beanPropertyDefinition5, "hi!", objArray14);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        java.lang.Object[] objArray12 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException13 = xmlSerializerProvider6.mappingException("", objArray12);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeValue((java.lang.Object) jsonMappingException13, jsonGenerator14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException13);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = xmlSerializerProvider17.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = xmlSerializerProvider17.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = xmlSerializerProvider22.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig25 = xmlSerializerProvider22.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        java.lang.Object[] objArray28 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException29 = xmlSerializerProvider22.mappingException("", objArray28);
        java.lang.Object[] objArray31 = new java.lang.Object[] { wildcardJsonSerializer15, xmlSerializerProvider17, "", (-1.0f) };
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem("", objArray31);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(jsonGenerator19);
        org.junit.Assert.assertNull(serializationConfig20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(jsonGenerator24);
        org.junit.Assert.assertNull(serializationConfig25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException29);
        org.junit.Assert.assertNotNull(objArray31);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig5, serializerFactory6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        java.util.Date date5 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date5, jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) (byte) 1, jsonGenerator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JavaType javaType3 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType3, beanProperty4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        java.util.Date date6 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date6, jsonGenerator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone5 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory18 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer10);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider12 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(jsonGenerator9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) '4', jsonGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType7, beanProperty8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer10);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider12 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(jsonGenerator9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullKeySerializer(javaType4, beanProperty5);
        java.lang.Object obj7 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeValue(obj7, jsonGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("", objArray14);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = xmlSerializerProvider1.hasSerializationFeatures(10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(jsonMappingException16);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        int int16 = xmlSerializerProvider14.cachedSerializersCount();
        xmlSerializerProvider14.flushCachedSerializers();
        com.fasterxml.jackson.databind.JavaType javaType18 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider20.getDefaultNullKeySerializer();
        int int24 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider26.findNullValueSerializer(beanProperty28);
        xmlSerializerProvider20.setDefaultKeySerializer(objJsonSerializer29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider20.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer32 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator12, (java.lang.Object) xmlSerializerProvider14, javaType18, objJsonSerializer31, typeSerializer32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(jsonGenerator9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass11 = xmlSerializerProvider8.getSerializationView();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = xmlSerializerProvider1.setAttribute((java.lang.Object) 0, (java.lang.Object) xmlSerializerProvider8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass11);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider21.getDefaultNullKeySerializer();
        int int25 = xmlSerializerProvider21.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.findNullValueSerializer(beanProperty29);
        xmlSerializerProvider21.setDefaultKeySerializer(objJsonSerializer30);
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer30);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        int int35 = xmlSerializerProvider34.cachedSerializersCount();
        int int36 = xmlSerializerProvider34.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = xmlSerializerProvider34.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup40 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider41 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup40);
        int int42 = xmlSerializerProvider41.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator43 = xmlSerializerProvider41.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig44 = xmlSerializerProvider41.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = xmlSerializerProvider41.getDefaultNullValueSerializer();
        java.lang.Object[] objArray47 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException48 = xmlSerializerProvider41.mappingException("", objArray47);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException49 = xmlSerializerProvider34.mappingException("", objArray47);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator50 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeValue((java.lang.Object) jsonMappingException49, jsonGenerator50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNull(serializationConfig38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(jsonGenerator43);
        org.junit.Assert.assertNull(serializationConfig44);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException48);
        org.junit.Assert.assertNotNull(jsonMappingException49);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = xmlSerializerProvider1.setAttribute((java.lang.Object) jsonMappingException22, (java.lang.Object) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = xmlSerializerProvider1.isEnabled(serializationFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.databind.introspect.Annotated annotated8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter10 = xmlSerializerProvider1.converterInstance(annotated8, (java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type java.lang.Byte; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory10 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        xmlSerializerProvider6.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.findNullValueSerializer(beanProperty8);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.JavaType javaType13 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider1.findValueSerializer(javaType13, beanProperty14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
        org.junit.Assert.assertNull(wildcardClass12);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        int int10 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        xmlSerializerProvider6.setDefaultKeySerializer(objJsonSerializer15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer17, beanProperty18);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator20 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.findNullValueSerializer(beanProperty24);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = xmlSerializerProvider22.handlePrimaryContextualization(objJsonSerializer28, beanProperty29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider22.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JavaType javaType32 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator20, (java.lang.Object) objJsonSerializer31, javaType32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale19 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findKeySerializer(javaType4, beanProperty5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("", objArray14);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(jsonMappingException16);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        java.util.Date date13 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date13, jsonGenerator14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((-1L), jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((-1L), jsonGenerator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer8);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) '#', jsonGenerator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JavaType javaType13 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider15.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator6, (java.lang.Object) xmlSerializerProvider8, javaType13, objJsonSerializer17, typeSerializer18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator6, (java.lang.Object) 100L, typeSerializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer8);
        java.lang.Class<?> wildcardClass10 = objJsonSerializer8.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        int int10 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider9.findNullValueSerializer(beanProperty12);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider9.setNullKeySerializer(objJsonSerializer14);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator5, (java.lang.Object) (byte) 1, javaType7, objJsonSerializer14, typeSerializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.mappingException("", objArray7);
        int int9 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        int int12 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider11.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeValue((java.lang.Object) objJsonSerializer15, jsonGenerator16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JavaType javaType13 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider1.findKeySerializer(javaType13, beanProperty14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.mappingException("", objArray7);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory9 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException8);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = xmlSerializerProvider1.isEnabled(serializationFeature24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        int int10 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        xmlSerializerProvider7.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider7.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType14 = xmlSerializerProvider1.constructType((java.lang.reflect.Type) wildcardClass13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType5, beanProperty6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        int int15 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        xmlSerializerProvider11.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer22, beanProperty25);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = xmlSerializerProvider1.getAnnotationIntrospector();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator5, (java.lang.Object) xmlSerializerProvider7, javaType10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer8);
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider1.findValueSerializer(javaType10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        int int6 = xmlSerializerProvider5.cachedSerializersCount();
        int int7 = xmlSerializerProvider5.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider5.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = xmlSerializerProvider12.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = xmlSerializerProvider17.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup22 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup22);
        int int24 = xmlSerializerProvider23.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider23.findNullValueSerializer(beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = xmlSerializerProvider23.handlePrimaryContextualization(objJsonSerializer29, beanProperty30);
        java.lang.Object[] objArray32 = new java.lang.Object[] { objJsonSerializer21, objJsonSerializer29 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException33 = xmlSerializerProvider17.mappingException("", objArray32);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException34 = xmlSerializerProvider12.mappingException("", objArray32);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException35 = xmlSerializerProvider5.mappingException("hi!", objArray32);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup37 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider38 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup37);
        int int39 = xmlSerializerProvider38.cachedSerializersCount();
        int int40 = xmlSerializerProvider38.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider38.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig42 = xmlSerializerProvider38.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider45 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup44);
        int int46 = xmlSerializerProvider45.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator47 = xmlSerializerProvider45.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig48 = xmlSerializerProvider45.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider45.getDefaultNullValueSerializer();
        java.lang.Object[] objArray51 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException52 = xmlSerializerProvider45.mappingException("", objArray51);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider38.mappingException("", objArray51);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException35, "", objArray51);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(jsonGenerator14);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNull(jsonGenerator19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(jsonMappingException33);
        org.junit.Assert.assertNotNull(jsonMappingException34);
        org.junit.Assert.assertNotNull(jsonMappingException35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNull(serializationConfig42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(jsonGenerator47);
        org.junit.Assert.assertNull(serializationConfig48);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException52);
        org.junit.Assert.assertNotNull(jsonMappingException53);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator25 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        int int29 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig31 = xmlSerializerProvider27.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        int int35 = xmlSerializerProvider34.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = xmlSerializerProvider34.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig37 = xmlSerializerProvider34.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        java.lang.Object[] objArray40 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException41 = xmlSerializerProvider34.mappingException("", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException42 = xmlSerializerProvider27.mappingException("", objArray40);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator25, (java.lang.Object) xmlSerializerProvider27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
        org.junit.Assert.assertNull(jsonGenerator24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNull(serializationConfig31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(jsonGenerator36);
        org.junit.Assert.assertNull(serializationConfig37);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException41);
        org.junit.Assert.assertNotNull(jsonMappingException42);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.introspect.Annotated annotated6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter8 = xmlSerializerProvider1.converterInstance(annotated6, (java.lang.Object) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type java.lang.Long; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        int int9 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider7.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = xmlSerializerProvider14.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        int int26 = xmlSerializerProvider25.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider25.findNullValueSerializer(beanProperty27);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = xmlSerializerProvider25.handlePrimaryContextualization(objJsonSerializer31, beanProperty32);
        java.lang.Object[] objArray34 = new java.lang.Object[] { objJsonSerializer23, objJsonSerializer31 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException35 = xmlSerializerProvider19.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException36 = xmlSerializerProvider14.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException37 = xmlSerializerProvider7.mappingException("hi!", objArray34);
        java.lang.Object[] objArray39 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException37, "hi!", objArray39);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(jsonGenerator16);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(jsonMappingException35);
        org.junit.Assert.assertNotNull(jsonMappingException36);
        org.junit.Assert.assertNotNull(jsonMappingException37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JavaType javaType20 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType20, beanProperty21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNull(wildcardClass19);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) (byte) -1, jsonGenerator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) 'a', jsonGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory6 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = null;
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.findNullValueSerializer(beanProperty15);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator9, (java.lang.Object) (byte) 10, javaType11, objJsonSerializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeValue((java.lang.Object) (short) 10, jsonGenerator4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer9);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider13 = xmlSerializerProvider1.createInstance(serializationConfig11, serializerFactory12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        java.util.Date date5 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date5, jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        java.util.Date date6 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date6, jsonGenerator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JavaType javaType6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer7 = xmlSerializerProvider1.findTypeSerializer(javaType6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider13 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.databind.JavaType javaType18 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider1.findValueSerializer(javaType18, beanProperty19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("", objArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone17 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(jsonMappingException16);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.findNullValueSerializer(beanProperty11);
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider1.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.databind.BeanDescription beanDescription15 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator20 = xmlSerializerProvider18.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        int int25 = xmlSerializerProvider24.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider24.findNullValueSerializer(beanProperty26);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = xmlSerializerProvider24.handlePrimaryContextualization(objJsonSerializer30, beanProperty31);
        java.lang.Object[] objArray33 = new java.lang.Object[] { objJsonSerializer22, objJsonSerializer30 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException34 = xmlSerializerProvider18.mappingException("", objArray33);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription15, "hi!", objArray33);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNull(jsonGenerator20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(jsonMappingException34);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) (short) -1, jsonGenerator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(jsonGenerator9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.mappingException("", objArray7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer9, beanProperty10);
        java.lang.Class<?> wildcardClass12 = wildcardJsonSerializer11.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = xmlSerializerProvider5.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        int int12 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = xmlSerializerProvider11.handlePrimaryContextualization(objJsonSerializer17, beanProperty18);
        java.lang.Object[] objArray20 = new java.lang.Object[] { objJsonSerializer9, objJsonSerializer17 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException21 = xmlSerializerProvider5.mappingException("", objArray20);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem("hi!", objArray20);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(jsonGenerator7);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(jsonMappingException21);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory7 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider1.findKeySerializer(javaType7, beanProperty8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider13 = xmlSerializerProvider1.createInstance(serializationConfig11, serializerFactory12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale9 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider3 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = xmlSerializerProvider1.isEnabled(mapperFeature21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider1.findTypedValueSerializer(javaType8, false, beanProperty10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        int int10 = xmlSerializerProvider9.cachedSerializersCount();
        int int11 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider9.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider16.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = xmlSerializerProvider21.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.findNullValueSerializer(beanProperty29);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup31 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider32 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup31);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider32.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = xmlSerializerProvider27.handlePrimaryContextualization(objJsonSerializer33, beanProperty34);
        java.lang.Object[] objArray36 = new java.lang.Object[] { objJsonSerializer25, objJsonSerializer33 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException37 = xmlSerializerProvider21.mappingException("", objArray36);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException38 = xmlSerializerProvider16.mappingException("", objArray36);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException39 = xmlSerializerProvider9.mappingException("hi!", objArray36);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = xmlSerializerProvider1.setAttribute((java.lang.Object) 1.0d, (java.lang.Object) objArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertNull(jsonGenerator6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNull(jsonGenerator23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(jsonMappingException37);
        org.junit.Assert.assertNotNull(jsonMappingException38);
        org.junit.Assert.assertNotNull(jsonMappingException39);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider13 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        int int10 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        xmlSerializerProvider6.setDefaultKeySerializer(objJsonSerializer15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer17, beanProperty18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone20 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer19);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        int int21 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = xmlSerializerProvider1.hasSerializationFeatures((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.findValueSerializer(javaType5, beanProperty6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider1.findKeySerializer(javaType7, beanProperty8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertNull(jsonGenerator6);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        int int11 = xmlSerializerProvider8.cachedSerializersCount();
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider8.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        xmlSerializerProvider8.setNullValueSerializer(objJsonSerializer16);
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer16);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig19 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider21 = xmlSerializerProvider1.createInstance(serializationConfig19, serializerFactory20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        int int9 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.introspect.Annotated annotated11 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider7.serializerInstance(annotated11, (java.lang.Object) objJsonSerializer16);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator5, (java.lang.Object) objJsonSerializer17, typeSerializer18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider27.getDefaultNullKeySerializer();
        xmlSerializerProvider25.setDefaultKeySerializer(objJsonSerializer29);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup31 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider32 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup31);
        int int33 = xmlSerializerProvider32.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator34 = xmlSerializerProvider32.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig35 = xmlSerializerProvider32.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider32.getDefaultNullValueSerializer();
        java.lang.Object[] objArray38 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException39 = xmlSerializerProvider32.mappingException("", objArray38);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = xmlSerializerProvider32.handlePrimaryContextualization(objJsonSerializer40, beanProperty41);
        xmlSerializerProvider25.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer42);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean44 = xmlSerializerProvider1.isUnknownTypeSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(jsonGenerator34);
        org.junit.Assert.assertNull(serializationConfig35);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException39);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer42);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = xmlSerializerProvider13.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig16 = xmlSerializerProvider13.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        java.lang.Object[] objArray19 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException20 = xmlSerializerProvider13.mappingException("", objArray19);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException21 = xmlSerializerProvider6.mappingException("", objArray19);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        int int25 = xmlSerializerProvider24.cachedSerializersCount();
        int int26 = xmlSerializerProvider24.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig28 = xmlSerializerProvider24.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider31.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator33 = xmlSerializerProvider31.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider36.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator38 = xmlSerializerProvider36.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup41 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider42 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup41);
        int int43 = xmlSerializerProvider42.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty44 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = xmlSerializerProvider42.findNullValueSerializer(beanProperty44);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup46 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider47 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup46);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = xmlSerializerProvider47.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = xmlSerializerProvider42.handlePrimaryContextualization(objJsonSerializer48, beanProperty49);
        java.lang.Object[] objArray51 = new java.lang.Object[] { objJsonSerializer40, objJsonSerializer48 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException52 = xmlSerializerProvider36.mappingException("", objArray51);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider31.mappingException("", objArray51);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException54 = xmlSerializerProvider24.mappingException("hi!", objArray51);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException21, "hi!", objArray51);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(jsonGenerator15);
        org.junit.Assert.assertNull(serializationConfig16);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException20);
        org.junit.Assert.assertNotNull(jsonMappingException21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNull(serializationConfig28);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNull(jsonGenerator33);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNull(jsonGenerator38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(jsonMappingException52);
        org.junit.Assert.assertNotNull(jsonMappingException53);
        org.junit.Assert.assertNotNull(jsonMappingException54);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        com.fasterxml.jackson.databind.BeanDescription beanDescription7 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup9);
        int int11 = xmlSerializerProvider10.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider10.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider10.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider10.getDefaultNullValueSerializer();
        java.lang.Object[] objArray16 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider10.mappingException("", objArray16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.GenericDeclaration genericDeclaration18 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription7, "", objArray16);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException17);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider9 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator22 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider26.getDefaultNullKeySerializer();
        xmlSerializerProvider24.setDefaultKeySerializer(objJsonSerializer28);
        java.lang.Class<?> wildcardClass30 = xmlSerializerProvider24.getClass();
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator22, (java.lang.Object) wildcardClass30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = xmlSerializerProvider1.getGenerator();
        java.util.Date date7 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date7, jsonGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertNull(jsonGenerator6);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer10);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(jsonGenerator9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer9);
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.findValueSerializer(javaType11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanDescription beanDescription12 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        int int17 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig19 = xmlSerializerProvider15.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = xmlSerializerProvider22.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig25 = xmlSerializerProvider22.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        java.lang.Object[] objArray28 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException29 = xmlSerializerProvider22.mappingException("", objArray28);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException30 = xmlSerializerProvider15.mappingException("", objArray28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement annotatedElement31 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription12, "hi!", objArray28);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNull(serializationConfig19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(jsonGenerator24);
        org.junit.Assert.assertNull(serializationConfig25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException29);
        org.junit.Assert.assertNotNull(jsonMappingException30);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        java.lang.Class<?> wildcardClass24 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider26.findNullValueSerializer(beanProperty28);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider31.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = xmlSerializerProvider26.handlePrimaryContextualization(objJsonSerializer32, beanProperty33);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer32);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider36 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
        org.junit.Assert.assertNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer34);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("", objArray14);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider19.findNullValueSerializer(beanProperty21);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = xmlSerializerProvider19.handlePrimaryContextualization(objJsonSerializer25, beanProperty26);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider19.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider19.findNullValueSerializer(beanProperty29);
        com.fasterxml.jackson.databind.BeanProperty beanProperty31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider19.findNullValueSerializer(beanProperty31);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider1.serializerInstance(annotated17, (java.lang.Object) beanProperty31);
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone34 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(jsonMappingException16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNull(objJsonSerializer33);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        int int10 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        xmlSerializerProvider6.setDefaultKeySerializer(objJsonSerializer15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer17, beanProperty18);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = xmlSerializerProvider1.hasSerializationFeatures((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer19);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription11 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition12 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        int int17 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig19 = xmlSerializerProvider15.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = xmlSerializerProvider22.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator29 = xmlSerializerProvider27.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup32 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider33 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup32);
        int int34 = xmlSerializerProvider33.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider33.findNullValueSerializer(beanProperty35);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup37 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider38 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup37);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider38.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = xmlSerializerProvider33.handlePrimaryContextualization(objJsonSerializer39, beanProperty40);
        java.lang.Object[] objArray42 = new java.lang.Object[] { objJsonSerializer31, objJsonSerializer39 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException43 = xmlSerializerProvider27.mappingException("", objArray42);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException44 = xmlSerializerProvider22.mappingException("", objArray42);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException45 = xmlSerializerProvider15.mappingException("hi!", objArray42);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable jsonFormatVisitable46 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription11, beanPropertyDefinition12, "", objArray42);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNull(serializationConfig19);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNull(jsonGenerator24);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNull(jsonGenerator29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(jsonMappingException43);
        org.junit.Assert.assertNotNull(jsonMappingException44);
        org.junit.Assert.assertNotNull(jsonMappingException45);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.introspect.Annotated annotated13 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        int int17 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider15.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider1.serializerInstance(annotated13, (java.lang.Object) xmlSerializerProvider15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned serializer definition of type com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider; expected type JsonSerializer or Class<JsonSerializer> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale11 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        com.fasterxml.jackson.databind.introspect.Annotated annotated7 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver9 = xmlSerializerProvider1.objectIdResolverInstance(annotated7, objectIdInfo8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass4 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator7 = xmlSerializerProvider1.objectIdGeneratorInstance(annotated5, objectIdInfo6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardClass4);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        com.fasterxml.jackson.databind.introspect.Annotated annotated13 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator15 = xmlSerializerProvider1.objectIdGeneratorInstance(annotated13, objectIdInfo14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.serializerInstance(annotated5, (java.lang.Object) xmlSerializerProvider7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned serializer definition of type com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider; expected type JsonSerializer or Class<JsonSerializer> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.mappingException("", objArray7);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator13 = xmlSerializerProvider11.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = xmlSerializerProvider17.handlePrimaryContextualization(objJsonSerializer23, beanProperty24);
        java.lang.Object[] objArray26 = new java.lang.Object[] { objJsonSerializer15, objJsonSerializer23 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException27 = xmlSerializerProvider11.mappingException("", objArray26);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator28 = xmlSerializerProvider11.getGenerator();
        java.lang.Class<?> wildcardClass29 = xmlSerializerProvider11.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider31.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider31.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider31.getDefaultNullKeySerializer();
        int int35 = xmlSerializerProvider31.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup36 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider37 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup36);
        int int38 = xmlSerializerProvider37.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = xmlSerializerProvider37.findNullValueSerializer(beanProperty39);
        xmlSerializerProvider31.setDefaultKeySerializer(objJsonSerializer40);
        xmlSerializerProvider11.setNullValueSerializer(objJsonSerializer40);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer43 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator9, (java.lang.Object) objJsonSerializer40, typeSerializer43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException8);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNull(jsonGenerator13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(jsonMappingException27);
        org.junit.Assert.assertNull(jsonGenerator28);
        org.junit.Assert.assertNull(wildcardClass29);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = xmlSerializerProvider1.isEnabled(mapperFeature3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer11 = xmlSerializerProvider1.findTypeSerializer(javaType10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass6 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider1.findValueSerializer(javaType7, beanProperty8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNull(wildcardClass6);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.findNullValueSerializer(beanProperty21);
        java.util.Date date23 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date23, jsonGenerator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider4 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.findNullKeySerializer(javaType10, beanProperty11);
        com.fasterxml.jackson.databind.JavaType javaType13 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider1.findKeySerializer(javaType13, beanProperty14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider0 = null;
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig1 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory2 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider0, serializationConfig1, serializerFactory2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider6 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = xmlSerializerProvider13.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider19.findNullValueSerializer(beanProperty21);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = xmlSerializerProvider19.handlePrimaryContextualization(objJsonSerializer25, beanProperty26);
        java.lang.Object[] objArray28 = new java.lang.Object[] { objJsonSerializer17, objJsonSerializer25 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException29 = xmlSerializerProvider13.mappingException("", objArray28);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException30 = xmlSerializerProvider8.mappingException("", objArray28);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException31 = xmlSerializerProvider1.mappingException("hi!", objArray28);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = xmlSerializerProvider1.hasSerializationFeatures((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNull(jsonGenerator15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(jsonMappingException29);
        org.junit.Assert.assertNotNull(jsonMappingException30);
        org.junit.Assert.assertNotNull(jsonMappingException31);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.mappingException("", objArray7);
        int int9 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider1.findValueSerializer(javaType11, beanProperty12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getActiveView();
        java.util.Date date10 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date10, jsonGenerator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        int int21 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        int int25 = xmlSerializerProvider24.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider24.findNullValueSerializer(beanProperty26);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = xmlSerializerProvider24.handlePrimaryContextualization(objJsonSerializer30, beanProperty31);
        java.lang.Class<?> wildcardClass33 = xmlSerializerProvider24.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = xmlSerializerProvider24.handleSecondaryContextualization(objJsonSerializer34, beanProperty35);
        java.lang.Object[] objArray38 = null;
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException39 = xmlSerializerProvider24.mappingException("hi!", objArray38);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup41 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider42 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup41);
        int int43 = xmlSerializerProvider42.cachedSerializersCount();
        int int44 = xmlSerializerProvider42.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = xmlSerializerProvider42.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig46 = xmlSerializerProvider42.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup48 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider49 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup48);
        int int50 = xmlSerializerProvider49.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator51 = xmlSerializerProvider49.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig52 = xmlSerializerProvider49.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = xmlSerializerProvider49.getDefaultNullValueSerializer();
        java.lang.Object[] objArray55 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException56 = xmlSerializerProvider49.mappingException("", objArray55);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException57 = xmlSerializerProvider42.mappingException("", objArray55);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException39, "", objArray55);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardClass33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(jsonMappingException39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNull(serializationConfig46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(jsonGenerator51);
        org.junit.Assert.assertNull(serializationConfig52);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException56);
        org.junit.Assert.assertNotNull(jsonMappingException57);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullKeySerializer(javaType4, beanProperty5);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider7 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JavaType javaType3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findValueSerializer(javaType3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeField("hi!", (java.lang.Object) xmlSerializerProvider17, jsonGenerator20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNull(serializationConfig14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        int int9 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider7.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = xmlSerializerProvider14.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        int int26 = xmlSerializerProvider25.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider25.findNullValueSerializer(beanProperty27);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = xmlSerializerProvider25.handlePrimaryContextualization(objJsonSerializer31, beanProperty32);
        java.lang.Object[] objArray34 = new java.lang.Object[] { objJsonSerializer23, objJsonSerializer31 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException35 = xmlSerializerProvider19.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException36 = xmlSerializerProvider14.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException37 = xmlSerializerProvider7.mappingException("hi!", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException38 = xmlSerializerProvider1.mappingException("", objArray34);
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone39 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(jsonGenerator16);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(jsonMappingException35);
        org.junit.Assert.assertNotNull(jsonMappingException36);
        org.junit.Assert.assertNotNull(jsonMappingException37);
        org.junit.Assert.assertNotNull(jsonMappingException38);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.introspect.Annotated annotated14 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver16 = xmlSerializerProvider1.objectIdResolverInstance(annotated14, objectIdInfo15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription15 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition16 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = xmlSerializerProvider24.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        int int31 = xmlSerializerProvider30.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider30.findNullValueSerializer(beanProperty32);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider35.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = xmlSerializerProvider30.handlePrimaryContextualization(objJsonSerializer36, beanProperty37);
        java.lang.Object[] objArray39 = new java.lang.Object[] { objJsonSerializer28, objJsonSerializer36 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException40 = xmlSerializerProvider24.mappingException("", objArray39);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException41 = xmlSerializerProvider19.mappingException("", objArray39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement annotatedElement42 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription15, beanPropertyDefinition16, "", objArray39);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNull(serializationConfig14);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(jsonGenerator26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(jsonMappingException40);
        org.junit.Assert.assertNotNull(jsonMappingException41);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        int int15 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        xmlSerializerProvider11.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer22, beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        int int29 = xmlSerializerProvider28.cachedSerializersCount();
        int int30 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = xmlSerializerProvider28.getConfig();
        xmlSerializerProvider28.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        int int36 = xmlSerializerProvider35.cachedSerializersCount();
        int int37 = xmlSerializerProvider35.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = xmlSerializerProvider35.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        int int44 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        int int47 = xmlSerializerProvider46.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider46.findNullValueSerializer(beanProperty48);
        xmlSerializerProvider40.setDefaultKeySerializer(objJsonSerializer49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = xmlSerializerProvider35.handlePrimaryContextualization(objJsonSerializer51, beanProperty52);
        xmlSerializerProvider28.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53);
        com.fasterxml.jackson.databind.BeanProperty beanProperty55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53, beanProperty55);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator57 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup58 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider59 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup58);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = xmlSerializerProvider59.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = xmlSerializerProvider59.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator62 = xmlSerializerProvider59.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = xmlSerializerProvider59.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup64 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider65 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup64);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = xmlSerializerProvider65.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = xmlSerializerProvider65.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator68 = xmlSerializerProvider65.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = xmlSerializerProvider65.getDefaultNullKeySerializer();
        xmlSerializerProvider59.setDefaultKeySerializer(objJsonSerializer69);
        java.lang.Class<?> wildcardClass71 = xmlSerializerProvider59.getActiveView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup72 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider73 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup72);
        int int74 = xmlSerializerProvider73.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = xmlSerializerProvider73.findNullValueSerializer(beanProperty75);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup77 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider78 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup77);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = xmlSerializerProvider78.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty80 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = xmlSerializerProvider73.handlePrimaryContextualization(objJsonSerializer79, beanProperty80);
        com.fasterxml.jackson.databind.JavaType javaType82 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty83 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer84 = xmlSerializerProvider73.findNullKeySerializer(javaType82, beanProperty83);
        com.fasterxml.jackson.databind.BeanProperty beanProperty85 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = xmlSerializerProvider59.handlePrimaryContextualization(objJsonSerializer84, beanProperty85);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator57, (java.lang.Object) objJsonSerializer84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(serializationConfig32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(serializationConfig38);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNull(jsonGenerator62);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNull(jsonGenerator68);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertNotNull(objJsonSerializer79);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNotNull(objJsonSerializer84);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer86);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer10);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider13.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider13.findNullValueSerializer(beanProperty16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider13.setNullKeySerializer(objJsonSerializer18);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider21.getDefaultNullKeySerializer();
        int int25 = xmlSerializerProvider21.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.findNullValueSerializer(beanProperty29);
        xmlSerializerProvider21.setDefaultKeySerializer(objJsonSerializer30);
        xmlSerializerProvider13.setDefaultKeySerializer(objJsonSerializer30);
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider13.findNullValueSerializer(beanProperty33);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        int int37 = xmlSerializerProvider36.cachedSerializersCount();
        int int38 = xmlSerializerProvider36.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = xmlSerializerProvider1.setAttribute((java.lang.Object) beanProperty33, (java.lang.Object) int38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(jsonGenerator9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator13 = null;
        com.fasterxml.jackson.databind.JavaType javaType15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator13, (java.lang.Object) ' ', javaType15, objJsonSerializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
        org.junit.Assert.assertNull(wildcardClass12);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        int int7 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        int int10 = xmlSerializerProvider9.cachedSerializersCount();
        int int11 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider9.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider16.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = xmlSerializerProvider21.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.findNullValueSerializer(beanProperty29);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup31 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider32 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup31);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider32.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = xmlSerializerProvider27.handlePrimaryContextualization(objJsonSerializer33, beanProperty34);
        java.lang.Object[] objArray36 = new java.lang.Object[] { objJsonSerializer25, objJsonSerializer33 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException37 = xmlSerializerProvider21.mappingException("", objArray36);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException38 = xmlSerializerProvider16.mappingException("", objArray36);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException39 = xmlSerializerProvider9.mappingException("hi!", objArray36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = xmlSerializerProvider1.getAttribute((java.lang.Object) objArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNull(jsonGenerator23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(jsonMappingException37);
        org.junit.Assert.assertNotNull(jsonMappingException38);
        org.junit.Assert.assertNotNull(jsonMappingException39);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        java.lang.Class<?> wildcardClass24 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider26.findNullValueSerializer(beanProperty28);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider31.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = xmlSerializerProvider26.handlePrimaryContextualization(objJsonSerializer32, beanProperty33);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer32);
        com.fasterxml.jackson.databind.JavaType javaType36 = null;
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper37 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.acceptJsonFormatVisitor(javaType36, jsonFormatVisitorWrapper37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: A class must be provided");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
        org.junit.Assert.assertNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer34);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.BeanDescription beanDescription4 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        int int9 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider7.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = xmlSerializerProvider14.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        int int26 = xmlSerializerProvider25.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider25.findNullValueSerializer(beanProperty27);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = xmlSerializerProvider25.handlePrimaryContextualization(objJsonSerializer31, beanProperty32);
        java.lang.Object[] objArray34 = new java.lang.Object[] { objJsonSerializer23, objJsonSerializer31 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException35 = xmlSerializerProvider19.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException36 = xmlSerializerProvider14.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException37 = xmlSerializerProvider7.mappingException("hi!", objArray34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable38 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription4, "", objArray34);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(jsonGenerator16);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(jsonMappingException35);
        org.junit.Assert.assertNotNull(jsonMappingException36);
        org.junit.Assert.assertNotNull(jsonMappingException37);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getSerializationView();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = xmlSerializerProvider1.hasSerializationFeatures((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.findNullValueSerializer(beanProperty21);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider25.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator27 = xmlSerializerProvider25.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator32 = xmlSerializerProvider30.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        int int37 = xmlSerializerProvider36.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider36.findNullValueSerializer(beanProperty38);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup40 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider41 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup40);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider41.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = xmlSerializerProvider36.handlePrimaryContextualization(objJsonSerializer42, beanProperty43);
        java.lang.Object[] objArray45 = new java.lang.Object[] { objJsonSerializer34, objJsonSerializer42 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException46 = xmlSerializerProvider30.mappingException("", objArray45);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException47 = xmlSerializerProvider25.mappingException("", objArray45);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem("hi!", objArray45);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNull(jsonGenerator27);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(jsonGenerator32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(jsonMappingException46);
        org.junit.Assert.assertNotNull(jsonMappingException47);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        java.lang.Object[] objArray15 = null;
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("hi!", objArray15);
        java.util.Date date17 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date17, jsonGenerator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(jsonMappingException16);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        int int21 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory23 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider24 = xmlSerializerProvider1.createInstance(serializationConfig22, serializerFactory23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        int int9 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider7.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = xmlSerializerProvider14.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        int int26 = xmlSerializerProvider25.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider25.findNullValueSerializer(beanProperty27);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = xmlSerializerProvider25.handlePrimaryContextualization(objJsonSerializer31, beanProperty32);
        java.lang.Object[] objArray34 = new java.lang.Object[] { objJsonSerializer23, objJsonSerializer31 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException35 = xmlSerializerProvider19.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException36 = xmlSerializerProvider14.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException37 = xmlSerializerProvider7.mappingException("hi!", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException38 = xmlSerializerProvider1.mappingException("", objArray34);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        int int42 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig44 = xmlSerializerProvider40.getConfig();
        xmlSerializerProvider40.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup46 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider47 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup46);
        int int48 = xmlSerializerProvider47.cachedSerializersCount();
        int int49 = xmlSerializerProvider47.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig50 = xmlSerializerProvider47.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup51 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider52 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup51);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = xmlSerializerProvider52.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = xmlSerializerProvider52.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = xmlSerializerProvider52.getDefaultNullKeySerializer();
        int int56 = xmlSerializerProvider52.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup57 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider58 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup57);
        int int59 = xmlSerializerProvider58.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = xmlSerializerProvider58.findNullValueSerializer(beanProperty60);
        xmlSerializerProvider52.setDefaultKeySerializer(objJsonSerializer61);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = xmlSerializerProvider52.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty64 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = xmlSerializerProvider47.handlePrimaryContextualization(objJsonSerializer63, beanProperty64);
        xmlSerializerProvider40.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer65);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup67 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider68 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup67);
        int int69 = xmlSerializerProvider68.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = xmlSerializerProvider68.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = xmlSerializerProvider68.findNullValueSerializer(beanProperty71);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider68.setNullKeySerializer(objJsonSerializer73);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = xmlSerializerProvider1.setAttribute((java.lang.Object) xmlSerializerProvider40, (java.lang.Object) objJsonSerializer73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(jsonGenerator16);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(jsonMappingException35);
        org.junit.Assert.assertNotNull(jsonMappingException36);
        org.junit.Assert.assertNotNull(jsonMappingException37);
        org.junit.Assert.assertNotNull(jsonMappingException38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNull(serializationConfig44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(serializationConfig50);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        int int12 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider14.findNullValueSerializer(beanProperty16);
        xmlSerializerProvider8.setDefaultKeySerializer(objJsonSerializer17);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        xmlSerializerProvider8.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeValue((java.lang.Object) xmlSerializerProvider8, jsonGenerator21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) (short) 100, jsonGenerator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        int int9 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider7.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = xmlSerializerProvider14.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        int int26 = xmlSerializerProvider25.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider25.findNullValueSerializer(beanProperty27);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = xmlSerializerProvider25.handlePrimaryContextualization(objJsonSerializer31, beanProperty32);
        java.lang.Object[] objArray34 = new java.lang.Object[] { objJsonSerializer23, objJsonSerializer31 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException35 = xmlSerializerProvider19.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException36 = xmlSerializerProvider14.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException37 = xmlSerializerProvider7.mappingException("hi!", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException38 = xmlSerializerProvider1.mappingException("", objArray34);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator39 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup40 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider41 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup40);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider41.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider41.getDefaultNullValueSerializer();
        int int44 = xmlSerializerProvider41.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = xmlSerializerProvider41.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer46 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator39, (java.lang.Object) xmlSerializerProvider41, typeSerializer46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(jsonGenerator16);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(jsonMappingException35);
        org.junit.Assert.assertNotNull(jsonMappingException36);
        org.junit.Assert.assertNotNull(jsonMappingException37);
        org.junit.Assert.assertNotNull(jsonMappingException38);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.introspect.Annotated annotated6 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator8 = xmlSerializerProvider1.objectIdGeneratorInstance(annotated6, objectIdInfo7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale7 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) 'a', jsonGenerator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNull(wildcardClass5);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        java.lang.Object[] objArray15 = null;
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("hi!", objArray15);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver19 = xmlSerializerProvider1.objectIdResolverInstance(annotated17, objectIdInfo18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(jsonMappingException16);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
        org.junit.Assert.assertNull(jsonGenerator24);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider1.findTypedValueSerializer(javaType5, false, beanProperty7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = xmlSerializerProvider1.isEnabled(mapperFeature5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider1.getSerializationView();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = xmlSerializerProvider1.hasSerializationFeatures(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNull(wildcardClass19);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        int int10 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        xmlSerializerProvider6.setDefaultKeySerializer(objJsonSerializer15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer17, beanProperty18);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory21 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig20, serializerFactory21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer19);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.findNullValueSerializer(beanProperty11);
        java.util.Date date13 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date13, jsonGenerator14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer8);
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer11 = xmlSerializerProvider1.findTypeSerializer(javaType10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) '#', jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findValueSerializer(javaType5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.findNullValueSerializer(beanProperty11);
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider1.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = xmlSerializerProvider1.isEnabled(mapperFeature15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription11 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        int int16 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig18 = xmlSerializerProvider14.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        int int22 = xmlSerializerProvider21.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = xmlSerializerProvider21.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig24 = xmlSerializerProvider21.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        java.lang.Object[] objArray27 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException28 = xmlSerializerProvider21.mappingException("", objArray27);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException29 = xmlSerializerProvider14.mappingException("", objArray27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass30 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription11, "hi!", objArray27);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(serializationConfig18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(jsonGenerator23);
        org.junit.Assert.assertNull(serializationConfig24);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException28);
        org.junit.Assert.assertNotNull(jsonMappingException29);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        int int8 = xmlSerializerProvider5.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider5.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.serializerInstance(annotated3, (java.lang.Object) xmlSerializerProvider5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned serializer definition of type com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider; expected type JsonSerializer or Class<JsonSerializer> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider7 = xmlSerializerProvider1.createInstance(serializationConfig5, serializerFactory6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider8.getSerializationView();
        com.fasterxml.jackson.databind.JavaType javaType14 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        int int17 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider16.findNullValueSerializer(beanProperty19);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer21 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator6, (java.lang.Object) wildcardClass13, javaType14, objJsonSerializer20, typeSerializer21);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: [no message for java.lang.NullPointerException]");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator5, (java.lang.Object) objJsonSerializer8, typeSerializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = xmlSerializerProvider1.isEnabled(serializationFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider22 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        int int7 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider8 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass10 = objJsonSerializer9.getClass();
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.findNullValueSerializer(beanProperty15);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator6, (java.lang.Object) wildcardClass10, javaType11, objJsonSerializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider18 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale7 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNull(jsonGenerator6);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        int int15 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        xmlSerializerProvider11.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer22, beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        int int29 = xmlSerializerProvider28.cachedSerializersCount();
        int int30 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = xmlSerializerProvider28.getConfig();
        xmlSerializerProvider28.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        int int36 = xmlSerializerProvider35.cachedSerializersCount();
        int int37 = xmlSerializerProvider35.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = xmlSerializerProvider35.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        int int44 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        int int47 = xmlSerializerProvider46.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider46.findNullValueSerializer(beanProperty48);
        xmlSerializerProvider40.setDefaultKeySerializer(objJsonSerializer49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = xmlSerializerProvider35.handlePrimaryContextualization(objJsonSerializer51, beanProperty52);
        xmlSerializerProvider28.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53);
        com.fasterxml.jackson.databind.BeanProperty beanProperty55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53, beanProperty55);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator57 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup58 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider59 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup58);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup60 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider61 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup60);
        int int62 = xmlSerializerProvider61.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = xmlSerializerProvider61.getDefaultNullKeySerializer();
        xmlSerializerProvider59.setDefaultKeySerializer(objJsonSerializer63);
        java.lang.Class<?> wildcardClass65 = xmlSerializerProvider59.getClass();
        com.fasterxml.jackson.databind.JavaType javaType66 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup67 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider68 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup67);
        int int69 = xmlSerializerProvider68.cachedSerializersCount();
        int int70 = xmlSerializerProvider68.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = xmlSerializerProvider68.getDefaultNullValueSerializer();
        xmlSerializerProvider68.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty74 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = xmlSerializerProvider68.handleSecondaryContextualization(objJsonSerializer73, beanProperty74);
        java.lang.Class<?> wildcardClass76 = xmlSerializerProvider68.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup77 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider78 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup77);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = xmlSerializerProvider78.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = xmlSerializerProvider78.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer81 = xmlSerializerProvider78.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer82 = xmlSerializerProvider78.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass83 = xmlSerializerProvider78.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup84 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider85 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup84);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer86 = xmlSerializerProvider85.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer87 = xmlSerializerProvider85.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = xmlSerializerProvider85.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer89 = xmlSerializerProvider85.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty90 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer91 = xmlSerializerProvider78.handlePrimaryContextualization(objJsonSerializer89, beanProperty90);
        com.fasterxml.jackson.databind.BeanProperty beanProperty92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer93 = xmlSerializerProvider68.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer91, beanProperty92);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer94 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator57, (java.lang.Object) wildcardClass65, javaType66, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer91, typeSerializer94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(serializationConfig32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(serializationConfig38);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardClass76);
        org.junit.Assert.assertNotNull(objJsonSerializer79);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(objJsonSerializer81);
        org.junit.Assert.assertNotNull(objJsonSerializer82);
        org.junit.Assert.assertNull(wildcardClass83);
        org.junit.Assert.assertNotNull(objJsonSerializer86);
        org.junit.Assert.assertNotNull(objJsonSerializer87);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertNotNull(objJsonSerializer89);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer91);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer93);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider11 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        int int15 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig17 = xmlSerializerProvider13.getConfig();
        xmlSerializerProvider13.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        int int21 = xmlSerializerProvider20.cachedSerializersCount();
        int int22 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig23 = xmlSerializerProvider20.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider25.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider25.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider25.getDefaultNullKeySerializer();
        int int29 = xmlSerializerProvider25.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        int int32 = xmlSerializerProvider31.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider31.findNullValueSerializer(beanProperty33);
        xmlSerializerProvider25.setDefaultKeySerializer(objJsonSerializer34);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider25.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = xmlSerializerProvider20.handlePrimaryContextualization(objJsonSerializer36, beanProperty37);
        xmlSerializerProvider13.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer38);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator40 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeField("hi!", (java.lang.Object) xmlSerializerProvider13, jsonGenerator40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNull(serializationConfig17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(serializationConfig23);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer38);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        xmlSerializerProvider6.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup9);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider10.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider10.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        int int17 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.findNullValueSerializer(beanProperty18);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider16.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        java.lang.Object[] objArray25 = new java.lang.Object[] { objJsonSerializer14, objJsonSerializer22 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException26 = xmlSerializerProvider10.mappingException("", objArray25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider28.getDefaultNullKeySerializer();
        int int32 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        int int36 = xmlSerializerProvider35.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator37 = xmlSerializerProvider35.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = xmlSerializerProvider35.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider35.getDefaultNullValueSerializer();
        java.lang.Object[] objArray41 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException42 = xmlSerializerProvider35.mappingException("", objArray41);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException43 = xmlSerializerProvider28.mappingException("hi!", objArray41);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = xmlSerializerProvider1.setAttribute((java.lang.Object) "", (java.lang.Object) xmlSerializerProvider28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(jsonMappingException26);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(jsonGenerator37);
        org.junit.Assert.assertNull(serializationConfig38);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException42);
        org.junit.Assert.assertNotNull(jsonMappingException43);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector6 = xmlSerializerProvider1.getAnnotationIntrospector();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.mappingException("", objArray7);
        com.fasterxml.jackson.databind.introspect.Annotated annotated9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider1.serializerInstance(annotated9, (java.lang.Object) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned serializer definition of type java.lang.Boolean; expected type JsonSerializer or Class<JsonSerializer> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException8);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) '4', jsonGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        xmlSerializerProvider6.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.findNullValueSerializer(beanProperty8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        int int12 = xmlSerializerProvider11.cachedSerializersCount();
        int int13 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = xmlSerializerProvider11.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        int int20 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.findNullValueSerializer(beanProperty24);
        xmlSerializerProvider16.setDefaultKeySerializer(objJsonSerializer25);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = xmlSerializerProvider11.handlePrimaryContextualization(objJsonSerializer27, beanProperty28);
        com.fasterxml.jackson.databind.BeanProperty beanProperty30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer27, beanProperty30);
        com.fasterxml.jackson.databind.JavaType javaType32 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator4, (java.lang.Object) wildcardJsonSerializer31, javaType32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializationConfig14);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer31);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.introspect.Annotated annotated7 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver9 = xmlSerializerProvider1.objectIdResolverInstance(annotated7, objectIdInfo8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertNull(jsonGenerator6);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider1.findKeySerializer(javaType11, beanProperty12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.findNullValueSerializer(beanProperty11);
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider1.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig15 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider17 = xmlSerializerProvider1.createInstance(serializationConfig15, serializerFactory16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone6 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardClass5);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) 1, jsonGenerator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        int int15 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        xmlSerializerProvider11.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer22, beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        int int29 = xmlSerializerProvider28.cachedSerializersCount();
        int int30 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = xmlSerializerProvider28.getConfig();
        xmlSerializerProvider28.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        int int36 = xmlSerializerProvider35.cachedSerializersCount();
        int int37 = xmlSerializerProvider35.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = xmlSerializerProvider35.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        int int44 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        int int47 = xmlSerializerProvider46.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider46.findNullValueSerializer(beanProperty48);
        xmlSerializerProvider40.setDefaultKeySerializer(objJsonSerializer49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = xmlSerializerProvider35.handlePrimaryContextualization(objJsonSerializer51, beanProperty52);
        xmlSerializerProvider28.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53);
        com.fasterxml.jackson.databind.BeanProperty beanProperty55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53, beanProperty55);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory57 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(serializationConfig32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(serializationConfig38);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer56);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer8);
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer11 = xmlSerializerProvider1.findTypeSerializer(javaType10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.introspect.Annotated annotated13 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider15.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider15.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = xmlSerializerProvider21.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider21.getDefaultNullKeySerializer();
        xmlSerializerProvider15.setDefaultKeySerializer(objJsonSerializer25);
        java.lang.Class<?> wildcardClass27 = xmlSerializerProvider15.getActiveView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        int int30 = xmlSerializerProvider29.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider29.findNullValueSerializer(beanProperty31);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = xmlSerializerProvider29.handlePrimaryContextualization(objJsonSerializer35, beanProperty36);
        com.fasterxml.jackson.databind.JavaType javaType38 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = xmlSerializerProvider29.findNullKeySerializer(javaType38, beanProperty39);
        com.fasterxml.jackson.databind.BeanProperty beanProperty41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = xmlSerializerProvider15.handlePrimaryContextualization(objJsonSerializer40, beanProperty41);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter43 = xmlSerializerProvider1.converterInstance(annotated13, (java.lang.Object) objJsonSerializer40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.databind.ser.impl.FailingSerializer; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNull(jsonGenerator24);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer42);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer8);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) 10, jsonGenerator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider12.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider12.findNullValueSerializer(beanProperty15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider12.setNullKeySerializer(objJsonSerializer17);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider20.getDefaultNullKeySerializer();
        int int24 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider26.findNullValueSerializer(beanProperty28);
        xmlSerializerProvider20.setDefaultKeySerializer(objJsonSerializer29);
        xmlSerializerProvider12.setDefaultKeySerializer(objJsonSerializer29);
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer29);
        com.fasterxml.jackson.databind.introspect.Annotated annotated33 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        xmlSerializerProvider35.flushCachedSerializers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig37 = xmlSerializerProvider35.getConfig();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter38 = xmlSerializerProvider1.converterInstance(annotated33, (java.lang.Object) xmlSerializerProvider35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNull(serializationConfig37);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(jsonGenerator14);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        java.lang.Object[] objArray15 = null;
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("hi!", objArray15);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider19.findNullValueSerializer(beanProperty21);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = xmlSerializerProvider19.handlePrimaryContextualization(objJsonSerializer25, beanProperty26);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter28 = xmlSerializerProvider1.converterInstance(annotated17, (java.lang.Object) wildcardJsonSerializer27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.databind.ser.std.NullSerializer; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(jsonMappingException16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer27);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass6 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer12, beanProperty13);
        com.fasterxml.jackson.databind.JavaType javaType15 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType15, beanProperty16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer14);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        int int7 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup9);
        int int11 = xmlSerializerProvider10.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider10.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider10.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider10.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JavaType javaType15 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider17.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider17.findNullValueSerializer(beanProperty20);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup22 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup22);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider23.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator25 = xmlSerializerProvider23.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider23.getDefaultNullKeySerializer();
        xmlSerializerProvider17.setNullValueSerializer(objJsonSerializer26);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator8, (java.lang.Object) xmlSerializerProvider10, javaType15, objJsonSerializer26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNull(jsonGenerator25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig6 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider8 = xmlSerializerProvider1.createInstance(serializationConfig6, serializerFactory7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JavaType javaType13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer14 = xmlSerializerProvider1.findTypeSerializer(javaType13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        int int15 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        xmlSerializerProvider11.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer22, beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        int int29 = xmlSerializerProvider28.cachedSerializersCount();
        int int30 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = xmlSerializerProvider28.getConfig();
        xmlSerializerProvider28.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        int int36 = xmlSerializerProvider35.cachedSerializersCount();
        int int37 = xmlSerializerProvider35.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = xmlSerializerProvider35.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        int int44 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        int int47 = xmlSerializerProvider46.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider46.findNullValueSerializer(beanProperty48);
        xmlSerializerProvider40.setDefaultKeySerializer(objJsonSerializer49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = xmlSerializerProvider35.handlePrimaryContextualization(objJsonSerializer51, beanProperty52);
        xmlSerializerProvider28.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53);
        com.fasterxml.jackson.databind.BeanProperty beanProperty55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53, beanProperty55);
        com.fasterxml.jackson.databind.JavaType javaType57 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty59 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = xmlSerializerProvider1.findTypedValueSerializer(javaType57, false, beanProperty59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(serializationConfig32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(serializationConfig38);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer56);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer9);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = xmlSerializerProvider1.hasSerializationFeatures((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        java.lang.Class<?> wildcardClass24 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) (byte) 10, jsonGenerator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
        org.junit.Assert.assertNull(wildcardClass24);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        int int21 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JavaType javaType23 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType23, beanProperty24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = xmlSerializerProvider13.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider19.findNullValueSerializer(beanProperty21);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = xmlSerializerProvider19.handlePrimaryContextualization(objJsonSerializer25, beanProperty26);
        java.lang.Object[] objArray28 = new java.lang.Object[] { objJsonSerializer17, objJsonSerializer25 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException29 = xmlSerializerProvider13.mappingException("", objArray28);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException30 = xmlSerializerProvider8.mappingException("", objArray28);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException31 = xmlSerializerProvider1.mappingException("hi!", objArray28);
        java.util.Date date32 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date32, jsonGenerator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNull(jsonGenerator15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(jsonMappingException29);
        org.junit.Assert.assertNotNull(jsonMappingException30);
        org.junit.Assert.assertNotNull(jsonMappingException31);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer9);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        int int15 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        xmlSerializerProvider11.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer22, beanProperty25);
        com.fasterxml.jackson.databind.introspect.Annotated annotated27 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo28 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver29 = xmlSerializerProvider1.objectIdResolverInstance(annotated27, objectIdInfo28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.findNullValueSerializer(beanProperty11);
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider1.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        int int19 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.introspect.Annotated annotated22 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        int int27 = xmlSerializerProvider24.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider24.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider1.serializerInstance(annotated22, (java.lang.Object) xmlSerializerProvider24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned serializer definition of type com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider; expected type JsonSerializer or Class<JsonSerializer> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("hi!", objArray14);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory17 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(jsonMappingException16);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider12 = xmlSerializerProvider1.createInstance(serializationConfig10, serializerFactory11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass4 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider7.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        int int15 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig17 = xmlSerializerProvider13.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator22 = xmlSerializerProvider20.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider25.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator27 = xmlSerializerProvider25.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        int int32 = xmlSerializerProvider31.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider31.findNullValueSerializer(beanProperty33);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider36.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = xmlSerializerProvider31.handlePrimaryContextualization(objJsonSerializer37, beanProperty38);
        java.lang.Object[] objArray40 = new java.lang.Object[] { objJsonSerializer29, objJsonSerializer37 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException41 = xmlSerializerProvider25.mappingException("", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException42 = xmlSerializerProvider20.mappingException("", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException43 = xmlSerializerProvider13.mappingException("hi!", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException44 = xmlSerializerProvider7.mappingException("hi!", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException45 = xmlSerializerProvider1.mappingException("hi!", objArray40);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator46 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup47 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider48 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup47);
        int int49 = xmlSerializerProvider48.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = xmlSerializerProvider48.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass51 = xmlSerializerProvider48.getSerializationView();
        com.fasterxml.jackson.databind.JavaType javaType52 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator46, (java.lang.Object) xmlSerializerProvider48, javaType52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNull(serializationConfig17);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNull(jsonGenerator22);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNull(jsonGenerator27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(jsonMappingException41);
        org.junit.Assert.assertNotNull(jsonMappingException42);
        org.junit.Assert.assertNotNull(jsonMappingException43);
        org.junit.Assert.assertNotNull(jsonMappingException44);
        org.junit.Assert.assertNotNull(jsonMappingException45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNull(wildcardClass51);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JavaType javaType6 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider1.findKeySerializer(javaType6, beanProperty7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType6 = xmlSerializerProvider1.constructType((java.lang.reflect.Type) wildcardClass5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.findNullKeySerializer(javaType10, beanProperty11);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator13 = null;
        com.fasterxml.jackson.databind.JavaType javaType15 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = xmlSerializerProvider17.getGenerator();
        int int20 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider17.findNullValueSerializer(beanProperty21);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator13, (java.lang.Object) 10.0f, javaType15, objJsonSerializer22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(jsonGenerator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        int int21 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        int int23 = xmlSerializerProvider1.cachedSerializersCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer6 = xmlSerializerProvider1.findTypeSerializer(javaType5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider14.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider14.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider14.getSerializationView();
        com.fasterxml.jackson.databind.JavaType javaType20 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.findNullValueSerializer(beanProperty24);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = xmlSerializerProvider22.handlePrimaryContextualization(objJsonSerializer28, beanProperty29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider22.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider22.findNullValueSerializer(beanProperty32);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer34 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator12, (java.lang.Object) wildcardClass19, javaType20, objJsonSerializer33, typeSerializer34);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: [no message for java.lang.NullPointerException]");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findKeySerializer(javaType4, beanProperty5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.introspect.Annotated annotated15 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver17 = xmlSerializerProvider1.objectIdResolverInstance(annotated15, objectIdInfo16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNull(serializationConfig14);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass4 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        int int9 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider7.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = xmlSerializerProvider14.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        int int26 = xmlSerializerProvider25.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider25.findNullValueSerializer(beanProperty27);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = xmlSerializerProvider25.handlePrimaryContextualization(objJsonSerializer31, beanProperty32);
        java.lang.Object[] objArray34 = new java.lang.Object[] { objJsonSerializer23, objJsonSerializer31 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException35 = xmlSerializerProvider19.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException36 = xmlSerializerProvider14.mappingException("", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException37 = xmlSerializerProvider7.mappingException("hi!", objArray34);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException38 = xmlSerializerProvider1.mappingException("hi!", objArray34);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        int int47 = xmlSerializerProvider46.cachedSerializersCount();
        int int48 = xmlSerializerProvider46.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider46.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig50 = xmlSerializerProvider46.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup52 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider53 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup52);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = xmlSerializerProvider53.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator55 = xmlSerializerProvider53.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup57 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider58 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup57);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = xmlSerializerProvider58.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator60 = xmlSerializerProvider58.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup63 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider64 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup63);
        int int65 = xmlSerializerProvider64.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = xmlSerializerProvider64.findNullValueSerializer(beanProperty66);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup68 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider69 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup68);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = xmlSerializerProvider69.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = xmlSerializerProvider64.handlePrimaryContextualization(objJsonSerializer70, beanProperty71);
        java.lang.Object[] objArray73 = new java.lang.Object[] { objJsonSerializer62, objJsonSerializer70 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException74 = xmlSerializerProvider58.mappingException("", objArray73);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException75 = xmlSerializerProvider53.mappingException("", objArray73);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException76 = xmlSerializerProvider46.mappingException("hi!", objArray73);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException77 = xmlSerializerProvider40.mappingException("", objArray73);
        java.lang.Object[] objArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException77, "hi!", objArray79);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(jsonGenerator16);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(jsonMappingException35);
        org.junit.Assert.assertNotNull(jsonMappingException36);
        org.junit.Assert.assertNotNull(jsonMappingException37);
        org.junit.Assert.assertNotNull(jsonMappingException38);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNull(serializationConfig50);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNull(jsonGenerator55);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNull(jsonGenerator60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(jsonMappingException74);
        org.junit.Assert.assertNotNull(jsonMappingException75);
        org.junit.Assert.assertNotNull(jsonMappingException76);
        org.junit.Assert.assertNotNull(jsonMappingException77);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = null;
        java.lang.Object obj16 = null;
        com.fasterxml.jackson.databind.JavaType javaType17 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        int int21 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = xmlSerializerProvider19.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider24.getDefaultNullKeySerializer();
        int int28 = xmlSerializerProvider24.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        int int31 = xmlSerializerProvider30.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider30.findNullValueSerializer(beanProperty32);
        xmlSerializerProvider24.setDefaultKeySerializer(objJsonSerializer33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider24.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = xmlSerializerProvider19.handlePrimaryContextualization(objJsonSerializer35, beanProperty36);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer38 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator15, obj16, javaType17, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer37, typeSerializer38);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: [no message for java.lang.NullPointerException]");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(jsonGenerator14);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(serializationConfig22);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer37);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer12 = xmlSerializerProvider1.findTypeSerializer(javaType11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = xmlSerializerProvider1.hasSerializationFeatures((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone7 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        int int12 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = xmlSerializerProvider11.handlePrimaryContextualization(objJsonSerializer17, beanProperty18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider11.findNullValueSerializer(beanProperty21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = xmlSerializerProvider1.getAttribute((java.lang.Object) beanProperty21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector5 = xmlSerializerProvider1.getAnnotationIntrospector();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        java.lang.Class<?> wildcardClass24 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider26.findNullValueSerializer(beanProperty28);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider31.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = xmlSerializerProvider26.handlePrimaryContextualization(objJsonSerializer32, beanProperty33);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer32);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) 100, jsonGenerator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
        org.junit.Assert.assertNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer34);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("", objArray14);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator19 = xmlSerializerProvider1.objectIdGeneratorInstance(annotated17, objectIdInfo18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(jsonMappingException16);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = xmlSerializerProvider1.hasSerializationFeatures(100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.findNullValueSerializer(beanProperty15);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = xmlSerializerProvider13.handlePrimaryContextualization(objJsonSerializer19, beanProperty20);
        java.lang.Object[] objArray22 = new java.lang.Object[] { objJsonSerializer11, objJsonSerializer19 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider7.mappingException("", objArray22);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem("", objArray22);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(jsonGenerator9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider21.getDefaultNullKeySerializer();
        int int25 = xmlSerializerProvider21.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.findNullValueSerializer(beanProperty29);
        xmlSerializerProvider21.setDefaultKeySerializer(objJsonSerializer30);
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer30);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider34.getDefaultNullKeySerializer();
        int int38 = xmlSerializerProvider34.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.findNullValueSerializer(beanProperty42);
        xmlSerializerProvider34.setDefaultKeySerializer(objJsonSerializer43);
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer43);
        com.fasterxml.jackson.databind.introspect.Annotated annotated46 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo47 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver48 = xmlSerializerProvider1.objectIdResolverInstance(annotated46, objectIdInfo47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale3 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) '4', jsonGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        int int14 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig16 = xmlSerializerProvider12.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = xmlSerializerProvider19.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        java.lang.Object[] objArray25 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException26 = xmlSerializerProvider19.mappingException("", objArray25);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException27 = xmlSerializerProvider12.mappingException("", objArray25);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException28 = xmlSerializerProvider1.mappingException("", objArray25);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator29 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer31 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator29, (java.lang.Object) 0, typeSerializer31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(serializationConfig16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNull(serializationConfig22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException26);
        org.junit.Assert.assertNotNull(jsonMappingException27);
        org.junit.Assert.assertNotNull(jsonMappingException28);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = xmlSerializerProvider17.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup22 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup22);
        int int24 = xmlSerializerProvider23.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider23.findNullValueSerializer(beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = xmlSerializerProvider23.handlePrimaryContextualization(objJsonSerializer29, beanProperty30);
        java.lang.Object[] objArray32 = new java.lang.Object[] { objJsonSerializer21, objJsonSerializer29 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException33 = xmlSerializerProvider17.mappingException("", objArray32);
        java.lang.Class<?> wildcardClass34 = xmlSerializerProvider17.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType35 = xmlSerializerProvider1.constructType((java.lang.reflect.Type) wildcardClass34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNull(serializationConfig14);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNull(jsonGenerator19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(jsonMappingException33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        int int10 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.getDefaultNullKeySerializer();
        int int17 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider19.findNullValueSerializer(beanProperty21);
        xmlSerializerProvider13.setDefaultKeySerializer(objJsonSerializer22);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider13.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider8.handlePrimaryContextualization(objJsonSerializer24, beanProperty25);
        xmlSerializerProvider1.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer26);
        int int28 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.introspect.Annotated annotated29 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        int int32 = xmlSerializerProvider31.cachedSerializersCount();
        int int33 = xmlSerializerProvider31.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider31.getDefaultNullValueSerializer();
        xmlSerializerProvider31.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = xmlSerializerProvider31.handleSecondaryContextualization(objJsonSerializer36, beanProperty37);
        java.lang.Class<?> wildcardClass39 = xmlSerializerProvider31.getActiveView();
        com.fasterxml.jackson.databind.BeanProperty beanProperty40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider31.findNullValueSerializer(beanProperty40);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter42 = xmlSerializerProvider1.converterInstance(annotated29, (java.lang.Object) objJsonSerializer41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.databind.ser.std.NullSerializer; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardClass39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        int int15 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        xmlSerializerProvider11.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer22, beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        int int29 = xmlSerializerProvider28.cachedSerializersCount();
        int int30 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = xmlSerializerProvider28.getConfig();
        xmlSerializerProvider28.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        int int36 = xmlSerializerProvider35.cachedSerializersCount();
        int int37 = xmlSerializerProvider35.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = xmlSerializerProvider35.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        int int44 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        int int47 = xmlSerializerProvider46.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider46.findNullValueSerializer(beanProperty48);
        xmlSerializerProvider40.setDefaultKeySerializer(objJsonSerializer49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = xmlSerializerProvider35.handlePrimaryContextualization(objJsonSerializer51, beanProperty52);
        xmlSerializerProvider28.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53);
        com.fasterxml.jackson.databind.BeanProperty beanProperty55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53, beanProperty55);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig57 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory58 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider59 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig57, serializerFactory58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(serializationConfig32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(serializationConfig38);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer56);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.util.Date date4 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date4, jsonGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass14 = xmlSerializerProvider1.getSerializationView();
        java.lang.Class<?> wildcardClass15 = xmlSerializerProvider1.getClass();
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.mappingException("", objArray7);
        int int9 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.findNullValueSerializer(beanProperty15);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = xmlSerializerProvider13.handlePrimaryContextualization(objJsonSerializer19, beanProperty20);
        java.lang.Class<?> wildcardClass22 = xmlSerializerProvider13.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = xmlSerializerProvider13.handleSecondaryContextualization(objJsonSerializer23, beanProperty24);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = xmlSerializerProvider13.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType27 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator11, (java.lang.Object) jsonGenerator26, javaType27);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: [no message for java.lang.NullPointerException]");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardClass22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(jsonGenerator26);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.BeanDescription beanDescription7 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup9);
        int int11 = xmlSerializerProvider10.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider10.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider10.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        int int17 = xmlSerializerProvider16.cachedSerializersCount();
        int int18 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        xmlSerializerProvider16.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = xmlSerializerProvider16.handleSecondaryContextualization(objJsonSerializer21, beanProperty22);
        java.lang.Class<?> wildcardClass24 = xmlSerializerProvider16.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        int int29 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig31 = xmlSerializerProvider27.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        int int35 = xmlSerializerProvider34.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = xmlSerializerProvider34.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig37 = xmlSerializerProvider34.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        java.lang.Object[] objArray40 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException41 = xmlSerializerProvider34.mappingException("", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException42 = xmlSerializerProvider27.mappingException("", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException43 = xmlSerializerProvider16.mappingException("", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException44 = xmlSerializerProvider10.mappingException("", objArray40);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable jsonFormatVisitable45 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription7, "", objArray40);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertNull(jsonGenerator6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNull(serializationConfig31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(jsonGenerator36);
        org.junit.Assert.assertNull(serializationConfig37);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException41);
        org.junit.Assert.assertNotNull(jsonMappingException42);
        org.junit.Assert.assertNotNull(jsonMappingException43);
        org.junit.Assert.assertNotNull(jsonMappingException44);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.mappingException("", objArray7);
        int int9 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass15 = xmlSerializerProvider12.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        int int19 = xmlSerializerProvider18.cachedSerializersCount();
        int int20 = xmlSerializerProvider18.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = xmlSerializerProvider18.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider25.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator27 = xmlSerializerProvider25.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator32 = xmlSerializerProvider30.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        int int37 = xmlSerializerProvider36.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider36.findNullValueSerializer(beanProperty38);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup40 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider41 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup40);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider41.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = xmlSerializerProvider36.handlePrimaryContextualization(objJsonSerializer42, beanProperty43);
        java.lang.Object[] objArray45 = new java.lang.Object[] { objJsonSerializer34, objJsonSerializer42 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException46 = xmlSerializerProvider30.mappingException("", objArray45);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException47 = xmlSerializerProvider25.mappingException("", objArray45);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException48 = xmlSerializerProvider18.mappingException("hi!", objArray45);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException49 = xmlSerializerProvider12.mappingException("hi!", objArray45);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem("hi!", objArray45);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNull(serializationConfig22);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNull(jsonGenerator27);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(jsonGenerator32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(jsonMappingException46);
        org.junit.Assert.assertNotNull(jsonMappingException47);
        org.junit.Assert.assertNotNull(jsonMappingException48);
        org.junit.Assert.assertNotNull(jsonMappingException49);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JavaType javaType3 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findValueSerializer(javaType3, beanProperty4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        xmlSerializerProvider6.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider6.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer13, beanProperty14);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory16 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone4 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        int int11 = xmlSerializerProvider8.cachedSerializersCount();
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider8.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        xmlSerializerProvider8.setNullValueSerializer(objJsonSerializer16);
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer16);
        com.fasterxml.jackson.databind.JavaType javaType19 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider1.findNullKeySerializer(javaType19, beanProperty20);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = xmlSerializerProvider1.isEnabled(serializationFeature22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = xmlSerializerProvider1.getConfig();
        java.util.Date date15 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date15, jsonGenerator16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNull(serializationConfig14);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        int int12 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = xmlSerializerProvider11.handlePrimaryContextualization(objJsonSerializer17, beanProperty18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider22.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider22.findNullValueSerializer(beanProperty25);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider22.setNullKeySerializer(objJsonSerializer27);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider30.getDefaultNullKeySerializer();
        int int34 = xmlSerializerProvider30.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        int int37 = xmlSerializerProvider36.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider36.findNullValueSerializer(beanProperty38);
        xmlSerializerProvider30.setDefaultKeySerializer(objJsonSerializer39);
        xmlSerializerProvider22.setDefaultKeySerializer(objJsonSerializer39);
        xmlSerializerProvider11.setNullKeySerializer(objJsonSerializer39);
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer39);
        com.fasterxml.jackson.databind.JavaType javaType44 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty45 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = xmlSerializerProvider1.findKeySerializer(javaType44, beanProperty45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        int int17 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider16.findNullValueSerializer(beanProperty19);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = xmlSerializerProvider22.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.getDefaultNullKeySerializer();
        xmlSerializerProvider16.setNullValueSerializer(objJsonSerializer25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = xmlSerializerProvider1.getAttribute((java.lang.Object) objJsonSerializer25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNull(serializationConfig14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNull(jsonGenerator24);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider1.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        int int17 = xmlSerializerProvider16.cachedSerializersCount();
        int int18 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        xmlSerializerProvider16.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = xmlSerializerProvider16.handleSecondaryContextualization(objJsonSerializer21, beanProperty22);
        java.lang.Class<?> wildcardClass24 = xmlSerializerProvider16.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig25 = xmlSerializerProvider16.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider27.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider27.findNullValueSerializer(beanProperty30);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup32 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider33 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup32);
        int int34 = xmlSerializerProvider33.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider33.findNullValueSerializer(beanProperty35);
        com.fasterxml.jackson.databind.BeanProperty beanProperty37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = xmlSerializerProvider27.handlePrimaryContextualization(objJsonSerializer36, beanProperty37);
        xmlSerializerProvider16.setDefaultKeySerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer38);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator40 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeValue((java.lang.Object) wildcardJsonSerializer38, jsonGenerator40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardClass24);
        org.junit.Assert.assertNull(serializationConfig25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer38);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.introspect.Annotated annotated12 = null;
        java.lang.Object obj13 = new java.lang.Object();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider1.serializerInstance(annotated12, obj13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned serializer definition of type java.lang.Object; expected type JsonSerializer or Class<JsonSerializer> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) (short) 1, jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanDescription beanDescription5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        int int12 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider14.findNullValueSerializer(beanProperty16);
        xmlSerializerProvider8.setDefaultKeySerializer(objJsonSerializer17);
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider8.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup22 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup22);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider23.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider23.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider23.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        int int30 = xmlSerializerProvider29.cachedSerializersCount();
        int int31 = xmlSerializerProvider29.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig33 = xmlSerializerProvider29.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider36.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator38 = xmlSerializerProvider36.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup40 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider41 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup40);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider41.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator43 = xmlSerializerProvider41.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup46 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider47 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup46);
        int int48 = xmlSerializerProvider47.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = xmlSerializerProvider47.findNullValueSerializer(beanProperty49);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup51 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider52 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup51);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = xmlSerializerProvider52.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = xmlSerializerProvider47.handlePrimaryContextualization(objJsonSerializer53, beanProperty54);
        java.lang.Object[] objArray56 = new java.lang.Object[] { objJsonSerializer45, objJsonSerializer53 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException57 = xmlSerializerProvider41.mappingException("", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException58 = xmlSerializerProvider36.mappingException("", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException59 = xmlSerializerProvider29.mappingException("hi!", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException60 = xmlSerializerProvider23.mappingException("", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException61 = xmlSerializerProvider8.mappingException("", objArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception62 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription5, "", objArray56);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertNull(serializationConfig20);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNull(serializationConfig33);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNull(jsonGenerator38);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNull(jsonGenerator43);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(jsonMappingException57);
        org.junit.Assert.assertNotNull(jsonMappingException58);
        org.junit.Assert.assertNotNull(jsonMappingException59);
        org.junit.Assert.assertNotNull(jsonMappingException60);
        org.junit.Assert.assertNotNull(jsonMappingException61);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass14 = xmlSerializerProvider1.getActiveView();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = xmlSerializerProvider1.hasSerializationFeatures((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(wildcardClass14);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        int int17 = xmlSerializerProvider16.cachedSerializersCount();
        int int18 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        xmlSerializerProvider16.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = xmlSerializerProvider16.handleSecondaryContextualization(objJsonSerializer21, beanProperty22);
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = xmlSerializerProvider11.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer23, beanProperty24);
        java.lang.Class<?> wildcardClass26 = xmlSerializerProvider11.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType27 = xmlSerializerProvider1.constructType((java.lang.reflect.Type) wildcardClass26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass14 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.JavaType javaType15 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider1.findKeySerializer(javaType15, beanProperty16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(wildcardClass14);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass6 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer12, beanProperty13);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider16.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = xmlSerializerProvider21.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.findNullValueSerializer(beanProperty29);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup31 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider32 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup31);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider32.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = xmlSerializerProvider27.handlePrimaryContextualization(objJsonSerializer33, beanProperty34);
        java.lang.Object[] objArray36 = new java.lang.Object[] { objJsonSerializer25, objJsonSerializer33 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException37 = xmlSerializerProvider21.mappingException("", objArray36);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException38 = xmlSerializerProvider16.mappingException("", objArray36);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup40 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider41 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup40);
        int int42 = xmlSerializerProvider41.cachedSerializersCount();
        int int43 = xmlSerializerProvider41.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = xmlSerializerProvider41.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig45 = xmlSerializerProvider41.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup47 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider48 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup47);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider48.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator50 = xmlSerializerProvider48.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup52 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider53 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup52);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = xmlSerializerProvider53.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator55 = xmlSerializerProvider53.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup58 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider59 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup58);
        int int60 = xmlSerializerProvider59.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = xmlSerializerProvider59.findNullValueSerializer(beanProperty61);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup63 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider64 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup63);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = xmlSerializerProvider64.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = xmlSerializerProvider59.handlePrimaryContextualization(objJsonSerializer65, beanProperty66);
        java.lang.Object[] objArray68 = new java.lang.Object[] { objJsonSerializer57, objJsonSerializer65 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException69 = xmlSerializerProvider53.mappingException("", objArray68);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException70 = xmlSerializerProvider48.mappingException("", objArray68);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException71 = xmlSerializerProvider41.mappingException("hi!", objArray68);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException38, "hi!", objArray68);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNull(jsonGenerator23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(jsonMappingException37);
        org.junit.Assert.assertNotNull(jsonMappingException38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNull(serializationConfig45);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNull(jsonGenerator50);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNull(jsonGenerator55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(jsonMappingException69);
        org.junit.Assert.assertNotNull(jsonMappingException70);
        org.junit.Assert.assertNotNull(jsonMappingException71);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        int int11 = xmlSerializerProvider8.cachedSerializersCount();
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider8.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        xmlSerializerProvider8.setNullValueSerializer(objJsonSerializer16);
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer16);
        com.fasterxml.jackson.databind.JavaType javaType19 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider1.findNullKeySerializer(javaType19, beanProperty20);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer9, beanProperty10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass17 = xmlSerializerProvider14.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        int int21 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass23 = xmlSerializerProvider20.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        int int28 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider26.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig30 = xmlSerializerProvider26.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup32 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider33 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup32);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider33.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator35 = xmlSerializerProvider33.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup37 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider38 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup37);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider38.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator40 = xmlSerializerProvider38.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup43 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider44 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup43);
        int int45 = xmlSerializerProvider44.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = xmlSerializerProvider44.findNullValueSerializer(beanProperty46);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup48 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider49 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup48);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = xmlSerializerProvider49.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = xmlSerializerProvider44.handlePrimaryContextualization(objJsonSerializer50, beanProperty51);
        java.lang.Object[] objArray53 = new java.lang.Object[] { objJsonSerializer42, objJsonSerializer50 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException54 = xmlSerializerProvider38.mappingException("", objArray53);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException55 = xmlSerializerProvider33.mappingException("", objArray53);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException56 = xmlSerializerProvider26.mappingException("hi!", objArray53);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException57 = xmlSerializerProvider20.mappingException("hi!", objArray53);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException58 = xmlSerializerProvider14.mappingException("hi!", objArray53);
        com.fasterxml.jackson.databind.introspect.Annotated annotated59 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup60 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider61 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup60);
        int int62 = xmlSerializerProvider61.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator63 = xmlSerializerProvider61.getGenerator();
        int int64 = xmlSerializerProvider61.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = xmlSerializerProvider61.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = xmlSerializerProvider14.serializerInstance(annotated59, (java.lang.Object) objJsonSerializer65);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator12, (java.lang.Object) objJsonSerializer65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNull(serializationConfig30);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNull(jsonGenerator35);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNull(jsonGenerator40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(jsonMappingException54);
        org.junit.Assert.assertNotNull(jsonMappingException55);
        org.junit.Assert.assertNotNull(jsonMappingException56);
        org.junit.Assert.assertNotNull(jsonMappingException57);
        org.junit.Assert.assertNotNull(jsonMappingException58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(jsonGenerator63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = objJsonSerializer10.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(jsonGenerator9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((-1L), jsonGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullKeySerializer(javaType4, beanProperty5);
        java.util.Date date7 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date7, jsonGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver5 = xmlSerializerProvider1.objectIdResolverInstance(annotated3, objectIdInfo4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider21.getDefaultNullKeySerializer();
        int int25 = xmlSerializerProvider21.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.findNullValueSerializer(beanProperty29);
        xmlSerializerProvider21.setDefaultKeySerializer(objJsonSerializer30);
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer30);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider34.getDefaultNullKeySerializer();
        int int38 = xmlSerializerProvider34.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.findNullValueSerializer(beanProperty42);
        xmlSerializerProvider34.setDefaultKeySerializer(objJsonSerializer43);
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer43);
        com.fasterxml.jackson.databind.BeanDescription beanDescription46 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition47 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup49 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider50 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = xmlSerializerProvider50.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator52 = xmlSerializerProvider50.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup55 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider56 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup55);
        int int57 = xmlSerializerProvider56.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = xmlSerializerProvider56.findNullValueSerializer(beanProperty58);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup60 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider61 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup60);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = xmlSerializerProvider61.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = xmlSerializerProvider56.handlePrimaryContextualization(objJsonSerializer62, beanProperty63);
        java.lang.Object[] objArray65 = new java.lang.Object[] { objJsonSerializer54, objJsonSerializer62 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException66 = xmlSerializerProvider50.mappingException("", objArray65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement annotatedElement67 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription46, beanPropertyDefinition47, "hi!", objArray65);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNull(jsonGenerator52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(jsonMappingException66);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass11 = xmlSerializerProvider6.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider13.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer17, beanProperty18);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass11);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer19);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = null;
        boolean boolean7 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer6);
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer9 = xmlSerializerProvider1.findTypeSerializer(javaType8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        int int21 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone23 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator18, (java.lang.Object) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        java.lang.Class<?> wildcardClass7 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = xmlSerializerProvider1.isEnabled(mapperFeature8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardClass7);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType8, beanProperty9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = xmlSerializerProvider1.isEnabled(mapperFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        int int11 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JavaType javaType12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator5, (java.lang.Object) xmlSerializerProvider7, javaType12, objJsonSerializer13, typeSerializer14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = xmlSerializerProvider5.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider5.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        int int12 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.findNullValueSerializer(beanProperty13);
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer14);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider18.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider18.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator27 = xmlSerializerProvider24.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider24.getDefaultNullKeySerializer();
        xmlSerializerProvider18.setDefaultKeySerializer(objJsonSerializer28);
        java.lang.Class<?> wildcardClass30 = xmlSerializerProvider18.getActiveView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig31 = xmlSerializerProvider18.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup32 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider33 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup32);
        int int34 = xmlSerializerProvider33.cachedSerializersCount();
        int int35 = xmlSerializerProvider33.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider33.getDefaultNullValueSerializer();
        xmlSerializerProvider33.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = xmlSerializerProvider33.handleSecondaryContextualization(objJsonSerializer38, beanProperty39);
        xmlSerializerProvider18.setDefaultKeySerializer(objJsonSerializer38);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator16, (java.lang.Object) xmlSerializerProvider18, typeSerializer42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(jsonGenerator7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNull(jsonGenerator27);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNull(wildcardClass30);
        org.junit.Assert.assertNull(serializationConfig31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer40);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider1.serializerInstance(annotated5, (java.lang.Object) objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider14.findNullValueSerializer(beanProperty17);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        int int21 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider20.findNullValueSerializer(beanProperty22);
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = xmlSerializerProvider14.handlePrimaryContextualization(objJsonSerializer23, beanProperty24);
        com.fasterxml.jackson.databind.JavaType javaType26 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        xmlSerializerProvider28.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator12, (java.lang.Object) wildcardJsonSerializer25, javaType26, objJsonSerializer30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("", objArray14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = xmlSerializerProvider24.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        int int31 = xmlSerializerProvider30.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider30.findNullValueSerializer(beanProperty32);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider35.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = xmlSerializerProvider30.handlePrimaryContextualization(objJsonSerializer36, beanProperty37);
        java.lang.Object[] objArray39 = new java.lang.Object[] { objJsonSerializer28, objJsonSerializer36 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException40 = xmlSerializerProvider24.mappingException("", objArray39);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException41 = xmlSerializerProvider19.mappingException("", objArray39);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem("hi!", objArray39);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(jsonMappingException16);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(jsonGenerator26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(jsonMappingException40);
        org.junit.Assert.assertNotNull(jsonMappingException41);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass6 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer12, beanProperty13);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass20 = xmlSerializerProvider17.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup22 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup22);
        int int24 = xmlSerializerProvider23.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider23.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass26 = xmlSerializerProvider23.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        int int30 = xmlSerializerProvider29.cachedSerializersCount();
        int int31 = xmlSerializerProvider29.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig33 = xmlSerializerProvider29.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider36.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator38 = xmlSerializerProvider36.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup40 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider41 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup40);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider41.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator43 = xmlSerializerProvider41.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup46 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider47 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup46);
        int int48 = xmlSerializerProvider47.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = xmlSerializerProvider47.findNullValueSerializer(beanProperty49);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup51 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider52 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup51);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = xmlSerializerProvider52.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = xmlSerializerProvider47.handlePrimaryContextualization(objJsonSerializer53, beanProperty54);
        java.lang.Object[] objArray56 = new java.lang.Object[] { objJsonSerializer45, objJsonSerializer53 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException57 = xmlSerializerProvider41.mappingException("", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException58 = xmlSerializerProvider36.mappingException("", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException59 = xmlSerializerProvider29.mappingException("hi!", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException60 = xmlSerializerProvider23.mappingException("hi!", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException61 = xmlSerializerProvider17.mappingException("hi!", objArray56);
        com.fasterxml.jackson.databind.introspect.Annotated annotated62 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup63 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider64 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup63);
        int int65 = xmlSerializerProvider64.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator66 = xmlSerializerProvider64.getGenerator();
        int int67 = xmlSerializerProvider64.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = xmlSerializerProvider64.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = xmlSerializerProvider17.serializerInstance(annotated62, (java.lang.Object) objJsonSerializer68);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator15, (java.lang.Object) objJsonSerializer68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNull(serializationConfig33);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNull(jsonGenerator38);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNull(jsonGenerator43);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(jsonMappingException57);
        org.junit.Assert.assertNotNull(jsonMappingException58);
        org.junit.Assert.assertNotNull(jsonMappingException59);
        org.junit.Assert.assertNotNull(jsonMappingException60);
        org.junit.Assert.assertNotNull(jsonMappingException61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(jsonGenerator66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.introspect.Annotated annotated10 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver12 = xmlSerializerProvider1.objectIdResolverInstance(annotated10, objectIdInfo11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider1.serializerInstance(annotated5, (java.lang.Object) objJsonSerializer10);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig12 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig12, serializerFactory13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        java.util.Date date11 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date11, jsonGenerator12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer10, beanProperty11);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider13 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer12);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer9, beanProperty10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getClass();
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass14 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider1.findNullValueSerializer(beanProperty15);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator19 = xmlSerializerProvider1.objectIdGeneratorInstance(annotated17, objectIdInfo18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(wildcardClass14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig6 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig6, serializerFactory7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        int int24 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = xmlSerializerProvider22.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = xmlSerializerProvider29.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = xmlSerializerProvider34.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.findNullValueSerializer(beanProperty42);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider45 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup44);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = xmlSerializerProvider45.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = xmlSerializerProvider40.handlePrimaryContextualization(objJsonSerializer46, beanProperty47);
        java.lang.Object[] objArray49 = new java.lang.Object[] { objJsonSerializer38, objJsonSerializer46 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException50 = xmlSerializerProvider34.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException51 = xmlSerializerProvider29.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException52 = xmlSerializerProvider22.mappingException("hi!", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider16.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException54 = xmlSerializerProvider1.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JavaType javaType56 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty58 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = xmlSerializerProvider1.findTypedValueSerializer(javaType56, true, beanProperty58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(serializationConfig26);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNull(jsonGenerator31);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNull(jsonGenerator36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(jsonMappingException50);
        org.junit.Assert.assertNotNull(jsonMappingException51);
        org.junit.Assert.assertNotNull(jsonMappingException52);
        org.junit.Assert.assertNotNull(jsonMappingException53);
        org.junit.Assert.assertNotNull(jsonMappingException54);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.introspect.Annotated annotated4 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider6.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider6.setNullKeySerializer(objJsonSerializer11);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider14.getDefaultNullKeySerializer();
        int int18 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        int int21 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider20.findNullValueSerializer(beanProperty22);
        xmlSerializerProvider14.setDefaultKeySerializer(objJsonSerializer23);
        xmlSerializerProvider6.setDefaultKeySerializer(objJsonSerializer23);
        int int26 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter28 = xmlSerializerProvider1.converterInstance(annotated4, (java.lang.Object) objJsonSerializer27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.databind.ser.std.NullSerializer; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        int int14 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig16 = xmlSerializerProvider12.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = xmlSerializerProvider19.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        java.lang.Object[] objArray25 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException26 = xmlSerializerProvider19.mappingException("", objArray25);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException27 = xmlSerializerProvider12.mappingException("", objArray25);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException28 = xmlSerializerProvider1.mappingException("", objArray25);
        com.fasterxml.jackson.databind.introspect.Annotated annotated29 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider31.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider31.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider31.getDefaultNullKeySerializer();
        int int35 = xmlSerializerProvider31.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup37 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider38 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup37);
        int int39 = xmlSerializerProvider38.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator40 = xmlSerializerProvider38.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig41 = xmlSerializerProvider38.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider38.getDefaultNullValueSerializer();
        java.lang.Object[] objArray44 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException45 = xmlSerializerProvider38.mappingException("", objArray44);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException46 = xmlSerializerProvider31.mappingException("hi!", objArray44);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = xmlSerializerProvider1.serializerInstance(annotated29, (java.lang.Object) xmlSerializerProvider31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned serializer definition of type com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider; expected type JsonSerializer or Class<JsonSerializer> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(serializationConfig16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNull(serializationConfig22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException26);
        org.junit.Assert.assertNotNull(jsonMappingException27);
        org.junit.Assert.assertNotNull(jsonMappingException28);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(jsonGenerator40);
        org.junit.Assert.assertNull(serializationConfig41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException45);
        org.junit.Assert.assertNotNull(jsonMappingException46);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        int int17 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig19 = xmlSerializerProvider15.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = xmlSerializerProvider22.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig25 = xmlSerializerProvider22.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        java.lang.Object[] objArray28 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException29 = xmlSerializerProvider22.mappingException("", objArray28);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException30 = xmlSerializerProvider15.mappingException("", objArray28);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup32 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider33 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup32);
        int int34 = xmlSerializerProvider33.cachedSerializersCount();
        int int35 = xmlSerializerProvider33.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider33.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig37 = xmlSerializerProvider33.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator42 = xmlSerializerProvider40.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig43 = xmlSerializerProvider40.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        java.lang.Object[] objArray46 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException47 = xmlSerializerProvider40.mappingException("", objArray46);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException48 = xmlSerializerProvider33.mappingException("", objArray46);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException30, "", objArray46);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNull(serializationConfig19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(jsonGenerator24);
        org.junit.Assert.assertNull(serializationConfig25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException29);
        org.junit.Assert.assertNotNull(jsonMappingException30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNull(serializationConfig37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(jsonGenerator42);
        org.junit.Assert.assertNull(serializationConfig43);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException47);
        org.junit.Assert.assertNotNull(jsonMappingException48);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.findNullValueSerializer(beanProperty11);
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider1.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        int int19 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.BeanDescription beanDescription22 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition23 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator28 = xmlSerializerProvider26.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig29 = xmlSerializerProvider26.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider26.getDefaultNullValueSerializer();
        java.lang.Object[] objArray32 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException33 = xmlSerializerProvider26.mappingException("", objArray32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription22, beanPropertyDefinition23, "", objArray32);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(jsonGenerator28);
        org.junit.Assert.assertNull(serializationConfig29);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException33);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider7.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        int int15 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig17 = xmlSerializerProvider13.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator22 = xmlSerializerProvider20.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider25.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator27 = xmlSerializerProvider25.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        int int32 = xmlSerializerProvider31.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider31.findNullValueSerializer(beanProperty33);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider36.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = xmlSerializerProvider31.handlePrimaryContextualization(objJsonSerializer37, beanProperty38);
        java.lang.Object[] objArray40 = new java.lang.Object[] { objJsonSerializer29, objJsonSerializer37 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException41 = xmlSerializerProvider25.mappingException("", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException42 = xmlSerializerProvider20.mappingException("", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException43 = xmlSerializerProvider13.mappingException("hi!", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException44 = xmlSerializerProvider7.mappingException("hi!", objArray40);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup46 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider47 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup46);
        int int48 = xmlSerializerProvider47.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider47.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass50 = xmlSerializerProvider47.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup52 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider53 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup52);
        int int54 = xmlSerializerProvider53.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = xmlSerializerProvider53.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass56 = xmlSerializerProvider53.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup58 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider59 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup58);
        int int60 = xmlSerializerProvider59.cachedSerializersCount();
        int int61 = xmlSerializerProvider59.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = xmlSerializerProvider59.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig63 = xmlSerializerProvider59.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup65 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider66 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup65);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = xmlSerializerProvider66.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator68 = xmlSerializerProvider66.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup70 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider71 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup70);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = xmlSerializerProvider71.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator73 = xmlSerializerProvider71.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer75 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup76 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider77 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup76);
        int int78 = xmlSerializerProvider77.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = xmlSerializerProvider77.findNullValueSerializer(beanProperty79);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup81 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider82 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup81);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer83 = xmlSerializerProvider82.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty84 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = xmlSerializerProvider77.handlePrimaryContextualization(objJsonSerializer83, beanProperty84);
        java.lang.Object[] objArray86 = new java.lang.Object[] { objJsonSerializer75, objJsonSerializer83 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException87 = xmlSerializerProvider71.mappingException("", objArray86);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException88 = xmlSerializerProvider66.mappingException("", objArray86);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException89 = xmlSerializerProvider59.mappingException("hi!", objArray86);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException90 = xmlSerializerProvider53.mappingException("hi!", objArray86);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException91 = xmlSerializerProvider47.mappingException("hi!", objArray86);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException44, "hi!", objArray86);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNull(serializationConfig17);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNull(jsonGenerator22);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNull(jsonGenerator27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(jsonMappingException41);
        org.junit.Assert.assertNotNull(jsonMappingException42);
        org.junit.Assert.assertNotNull(jsonMappingException43);
        org.junit.Assert.assertNotNull(jsonMappingException44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNull(serializationConfig63);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNull(jsonGenerator68);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNull(jsonGenerator73);
        org.junit.Assert.assertNotNull(objJsonSerializer75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(objJsonSerializer83);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertNotNull(jsonMappingException87);
        org.junit.Assert.assertNotNull(jsonMappingException88);
        org.junit.Assert.assertNotNull(jsonMappingException89);
        org.junit.Assert.assertNotNull(jsonMappingException90);
        org.junit.Assert.assertNotNull(jsonMappingException91);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass4 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider7.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        int int14 = xmlSerializerProvider13.cachedSerializersCount();
        int int15 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig17 = xmlSerializerProvider13.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator22 = xmlSerializerProvider20.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider25.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator27 = xmlSerializerProvider25.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider31 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup30);
        int int32 = xmlSerializerProvider31.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider31.findNullValueSerializer(beanProperty33);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider36.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = xmlSerializerProvider31.handlePrimaryContextualization(objJsonSerializer37, beanProperty38);
        java.lang.Object[] objArray40 = new java.lang.Object[] { objJsonSerializer29, objJsonSerializer37 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException41 = xmlSerializerProvider25.mappingException("", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException42 = xmlSerializerProvider20.mappingException("", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException43 = xmlSerializerProvider13.mappingException("hi!", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException44 = xmlSerializerProvider7.mappingException("hi!", objArray40);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException45 = xmlSerializerProvider1.mappingException("hi!", objArray40);
        com.fasterxml.jackson.databind.introspect.Annotated annotated46 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup47 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider48 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup47);
        int int49 = xmlSerializerProvider48.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator50 = xmlSerializerProvider48.getGenerator();
        int int51 = xmlSerializerProvider48.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = xmlSerializerProvider48.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = xmlSerializerProvider1.serializerInstance(annotated46, (java.lang.Object) objJsonSerializer52);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator54 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNull(serializationConfig17);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNull(jsonGenerator22);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNull(jsonGenerator27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(jsonMappingException41);
        org.junit.Assert.assertNotNull(jsonMappingException42);
        org.junit.Assert.assertNotNull(jsonMappingException43);
        org.junit.Assert.assertNotNull(jsonMappingException44);
        org.junit.Assert.assertNotNull(jsonMappingException45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(jsonGenerator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider5 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = xmlSerializerProvider8.handlePrimaryContextualization(objJsonSerializer16, beanProperty17);
        xmlSerializerProvider1.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer18);
        com.fasterxml.jackson.databind.BeanDescription beanDescription20 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup22 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup22);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider23.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider23.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider23.getDefaultNullKeySerializer();
        int int27 = xmlSerializerProvider23.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        int int30 = xmlSerializerProvider29.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider29.findNullValueSerializer(beanProperty31);
        xmlSerializerProvider23.setDefaultKeySerializer(objJsonSerializer32);
        java.lang.Class<?> wildcardClass34 = xmlSerializerProvider23.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig35 = xmlSerializerProvider23.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup37 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider38 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup37);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider38.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = xmlSerializerProvider38.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider38.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup43 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider44 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup43);
        int int45 = xmlSerializerProvider44.cachedSerializersCount();
        int int46 = xmlSerializerProvider44.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = xmlSerializerProvider44.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig48 = xmlSerializerProvider44.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup50 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider51 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup50);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = xmlSerializerProvider51.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator53 = xmlSerializerProvider51.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup55 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider56 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup55);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = xmlSerializerProvider56.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator58 = xmlSerializerProvider56.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup61 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider62 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup61);
        int int63 = xmlSerializerProvider62.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty64 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = xmlSerializerProvider62.findNullValueSerializer(beanProperty64);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup66 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider67 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup66);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = xmlSerializerProvider67.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty69 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = xmlSerializerProvider62.handlePrimaryContextualization(objJsonSerializer68, beanProperty69);
        java.lang.Object[] objArray71 = new java.lang.Object[] { objJsonSerializer60, objJsonSerializer68 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException72 = xmlSerializerProvider56.mappingException("", objArray71);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException73 = xmlSerializerProvider51.mappingException("", objArray71);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException74 = xmlSerializerProvider44.mappingException("hi!", objArray71);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException75 = xmlSerializerProvider38.mappingException("", objArray71);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException76 = xmlSerializerProvider23.mappingException("", objArray71);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription20, "", objArray71);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNull(wildcardClass34);
        org.junit.Assert.assertNull(serializationConfig35);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNull(serializationConfig48);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertNull(jsonGenerator53);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNull(jsonGenerator58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(jsonMappingException72);
        org.junit.Assert.assertNotNull(jsonMappingException73);
        org.junit.Assert.assertNotNull(jsonMappingException74);
        org.junit.Assert.assertNotNull(jsonMappingException75);
        org.junit.Assert.assertNotNull(jsonMappingException76);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        int int7 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector9 = xmlSerializerProvider1.getAnnotationIntrospector();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator2 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = xmlSerializerProvider5.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider5.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        int int12 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.findNullValueSerializer(beanProperty13);
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer14);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = null;
        com.fasterxml.jackson.databind.JavaType javaType18 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        int int21 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider20.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider20.findNullValueSerializer(beanProperty23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider20.setNullKeySerializer(objJsonSerializer25);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer27 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator16, (java.lang.Object) '4', javaType18, objJsonSerializer25, typeSerializer27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(jsonGenerator7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        int int14 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig16 = xmlSerializerProvider12.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = xmlSerializerProvider24.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        int int31 = xmlSerializerProvider30.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider30.findNullValueSerializer(beanProperty32);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider35.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = xmlSerializerProvider30.handlePrimaryContextualization(objJsonSerializer36, beanProperty37);
        java.lang.Object[] objArray39 = new java.lang.Object[] { objJsonSerializer28, objJsonSerializer36 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException40 = xmlSerializerProvider24.mappingException("", objArray39);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException41 = xmlSerializerProvider19.mappingException("", objArray39);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException42 = xmlSerializerProvider12.mappingException("hi!", objArray39);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException43 = xmlSerializerProvider6.mappingException("", objArray39);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        int int47 = xmlSerializerProvider46.cachedSerializersCount();
        int int48 = xmlSerializerProvider46.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider46.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig50 = xmlSerializerProvider46.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup52 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider53 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup52);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = xmlSerializerProvider53.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator55 = xmlSerializerProvider53.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup57 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider58 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup57);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = xmlSerializerProvider58.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator60 = xmlSerializerProvider58.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup63 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider64 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup63);
        int int65 = xmlSerializerProvider64.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = xmlSerializerProvider64.findNullValueSerializer(beanProperty66);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup68 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider69 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup68);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = xmlSerializerProvider69.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = xmlSerializerProvider64.handlePrimaryContextualization(objJsonSerializer70, beanProperty71);
        java.lang.Object[] objArray73 = new java.lang.Object[] { objJsonSerializer62, objJsonSerializer70 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException74 = xmlSerializerProvider58.mappingException("", objArray73);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException75 = xmlSerializerProvider53.mappingException("", objArray73);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException76 = xmlSerializerProvider46.mappingException("hi!", objArray73);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem((java.lang.Throwable) jsonMappingException43, "hi!", objArray73);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(serializationConfig16);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(jsonGenerator26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(jsonMappingException40);
        org.junit.Assert.assertNotNull(jsonMappingException41);
        org.junit.Assert.assertNotNull(jsonMappingException42);
        org.junit.Assert.assertNotNull(jsonMappingException43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNull(serializationConfig50);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNull(jsonGenerator55);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNull(jsonGenerator60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(jsonMappingException74);
        org.junit.Assert.assertNotNull(jsonMappingException75);
        org.junit.Assert.assertNotNull(jsonMappingException76);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        int int7 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.findNullKeySerializer(javaType8, beanProperty9);
        java.lang.Class<?> wildcardClass11 = xmlSerializerProvider1.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        int int15 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        xmlSerializerProvider11.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer22, beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        int int29 = xmlSerializerProvider28.cachedSerializersCount();
        int int30 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = xmlSerializerProvider28.getConfig();
        xmlSerializerProvider28.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        int int36 = xmlSerializerProvider35.cachedSerializersCount();
        int int37 = xmlSerializerProvider35.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = xmlSerializerProvider35.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        int int44 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        int int47 = xmlSerializerProvider46.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider46.findNullValueSerializer(beanProperty48);
        xmlSerializerProvider40.setDefaultKeySerializer(objJsonSerializer49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = xmlSerializerProvider35.handlePrimaryContextualization(objJsonSerializer51, beanProperty52);
        xmlSerializerProvider28.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53);
        com.fasterxml.jackson.databind.BeanProperty beanProperty55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53, beanProperty55);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup58 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider59 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup58);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = xmlSerializerProvider59.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator61 = xmlSerializerProvider59.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup63 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider64 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup63);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = xmlSerializerProvider64.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator66 = xmlSerializerProvider64.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup69 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider70 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup69);
        int int71 = xmlSerializerProvider70.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = xmlSerializerProvider70.findNullValueSerializer(beanProperty72);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup74 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider75 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup74);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = xmlSerializerProvider75.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = xmlSerializerProvider70.handlePrimaryContextualization(objJsonSerializer76, beanProperty77);
        java.lang.Object[] objArray79 = new java.lang.Object[] { objJsonSerializer68, objJsonSerializer76 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException80 = xmlSerializerProvider64.mappingException("", objArray79);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException81 = xmlSerializerProvider59.mappingException("", objArray79);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException82 = xmlSerializerProvider1.mappingException("", objArray79);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig83 = xmlSerializerProvider1.getConfig();
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(serializationConfig32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(serializationConfig38);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNull(jsonGenerator61);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertNull(jsonGenerator66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(jsonMappingException80);
        org.junit.Assert.assertNotNull(jsonMappingException81);
        org.junit.Assert.assertNotNull(jsonMappingException82);
        org.junit.Assert.assertNull(serializationConfig83);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.findTypedValueSerializer(javaType4, false, beanProperty6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.BeanDescription beanDescription4 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition5 = null;
        java.lang.Object[] objArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription4, beanPropertyDefinition5, "", objArray7);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        int int21 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory23 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig22, serializerFactory23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass14 = xmlSerializerProvider1.getSerializationView();
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone15 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNull(wildcardClass14);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        int int7 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator9, (java.lang.Object) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider9 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = xmlSerializerProvider15.handlePrimaryContextualization(objJsonSerializer21, beanProperty22);
        com.fasterxml.jackson.databind.JavaType javaType24 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider15.findNullKeySerializer(javaType24, beanProperty25);
        com.fasterxml.jackson.databind.BeanProperty beanProperty27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer26, beanProperty27);
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone29 = xmlSerializerProvider1.getTimeZone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer28);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig13, serializerFactory14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator22 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) (byte) 0, jsonGenerator22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertNull(serializationConfig20);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanDescription beanDescription11 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        int int16 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig18 = xmlSerializerProvider14.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        int int22 = xmlSerializerProvider21.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = xmlSerializerProvider21.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig24 = xmlSerializerProvider21.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider21.getDefaultNullValueSerializer();
        java.lang.Object[] objArray27 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException28 = xmlSerializerProvider21.mappingException("", objArray27);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException29 = xmlSerializerProvider14.mappingException("", objArray27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.GenericDeclaration genericDeclaration30 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription11, "hi!", objArray27);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(serializationConfig18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(jsonGenerator23);
        org.junit.Assert.assertNull(serializationConfig24);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException28);
        org.junit.Assert.assertNotNull(jsonMappingException29);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = xmlSerializerProvider5.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider5.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer8);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator10, (java.lang.Object) objJsonSerializer15, typeSerializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(jsonGenerator7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.introspect.Annotated annotated13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter15 = xmlSerializerProvider1.converterInstance(annotated13, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type java.lang.String; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        int int24 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = xmlSerializerProvider22.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = xmlSerializerProvider29.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = xmlSerializerProvider34.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.findNullValueSerializer(beanProperty42);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider45 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup44);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = xmlSerializerProvider45.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = xmlSerializerProvider40.handlePrimaryContextualization(objJsonSerializer46, beanProperty47);
        java.lang.Object[] objArray49 = new java.lang.Object[] { objJsonSerializer38, objJsonSerializer46 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException50 = xmlSerializerProvider34.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException51 = xmlSerializerProvider29.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException52 = xmlSerializerProvider22.mappingException("hi!", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider16.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException54 = xmlSerializerProvider1.mappingException("", objArray49);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = xmlSerializerProvider1.hasSerializationFeatures(10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(serializationConfig26);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNull(jsonGenerator31);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNull(jsonGenerator36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(jsonMappingException50);
        org.junit.Assert.assertNotNull(jsonMappingException51);
        org.junit.Assert.assertNotNull(jsonMappingException52);
        org.junit.Assert.assertNotNull(jsonMappingException53);
        org.junit.Assert.assertNotNull(jsonMappingException54);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        com.fasterxml.jackson.databind.JavaType javaType14 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider1.findKeySerializer(javaType14, beanProperty15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        int int21 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JavaType javaType23 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer24 = xmlSerializerProvider1.findTypeSerializer(javaType23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = null;
        java.lang.Object obj8 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator7, obj8, typeSerializer9);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: [no message for java.lang.NullPointerException]");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertNull(jsonGenerator6);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        int int24 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = xmlSerializerProvider22.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = xmlSerializerProvider29.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = xmlSerializerProvider34.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.findNullValueSerializer(beanProperty42);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider45 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup44);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = xmlSerializerProvider45.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = xmlSerializerProvider40.handlePrimaryContextualization(objJsonSerializer46, beanProperty47);
        java.lang.Object[] objArray49 = new java.lang.Object[] { objJsonSerializer38, objJsonSerializer46 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException50 = xmlSerializerProvider34.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException51 = xmlSerializerProvider29.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException52 = xmlSerializerProvider22.mappingException("hi!", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider16.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException54 = xmlSerializerProvider1.mappingException("", objArray49);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig55 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory56 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider57 = xmlSerializerProvider1.createInstance(serializationConfig55, serializerFactory56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(serializationConfig26);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNull(jsonGenerator31);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNull(jsonGenerator36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(jsonMappingException50);
        org.junit.Assert.assertNotNull(jsonMappingException51);
        org.junit.Assert.assertNotNull(jsonMappingException52);
        org.junit.Assert.assertNotNull(jsonMappingException53);
        org.junit.Assert.assertNotNull(jsonMappingException54);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig9 = xmlSerializerProvider6.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        int int15 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        xmlSerializerProvider11.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer22, beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        int int29 = xmlSerializerProvider28.cachedSerializersCount();
        int int30 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = xmlSerializerProvider28.getConfig();
        xmlSerializerProvider28.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        int int36 = xmlSerializerProvider35.cachedSerializersCount();
        int int37 = xmlSerializerProvider35.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = xmlSerializerProvider35.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        int int44 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        int int47 = xmlSerializerProvider46.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider46.findNullValueSerializer(beanProperty48);
        xmlSerializerProvider40.setDefaultKeySerializer(objJsonSerializer49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = xmlSerializerProvider35.handlePrimaryContextualization(objJsonSerializer51, beanProperty52);
        xmlSerializerProvider28.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53);
        com.fasterxml.jackson.databind.BeanProperty beanProperty55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer53, beanProperty55);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup58 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider59 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup58);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = xmlSerializerProvider59.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator61 = xmlSerializerProvider59.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup63 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider64 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup63);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = xmlSerializerProvider64.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator66 = xmlSerializerProvider64.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup69 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider70 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup69);
        int int71 = xmlSerializerProvider70.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = xmlSerializerProvider70.findNullValueSerializer(beanProperty72);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup74 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider75 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup74);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = xmlSerializerProvider75.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = xmlSerializerProvider70.handlePrimaryContextualization(objJsonSerializer76, beanProperty77);
        java.lang.Object[] objArray79 = new java.lang.Object[] { objJsonSerializer68, objJsonSerializer76 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException80 = xmlSerializerProvider64.mappingException("", objArray79);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException81 = xmlSerializerProvider59.mappingException("", objArray79);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException82 = xmlSerializerProvider1.mappingException("", objArray79);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup83 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider84 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup83);
        int int85 = xmlSerializerProvider84.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator86 = xmlSerializerProvider84.getGenerator();
        int int87 = xmlSerializerProvider84.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty88 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer89 = xmlSerializerProvider84.findNullValueSerializer(beanProperty88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = xmlSerializerProvider1.getAttribute((java.lang.Object) beanProperty88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializationConfig9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(serializationConfig32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(serializationConfig38);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNull(jsonGenerator61);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertNull(jsonGenerator66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(jsonMappingException80);
        org.junit.Assert.assertNotNull(jsonMappingException81);
        org.junit.Assert.assertNotNull(jsonMappingException82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(jsonGenerator86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer89);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        int int10 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider13.getDefaultNullKeySerializer();
        int int17 = xmlSerializerProvider13.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider19.findNullValueSerializer(beanProperty21);
        xmlSerializerProvider13.setDefaultKeySerializer(objJsonSerializer22);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider13.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider8.handlePrimaryContextualization(objJsonSerializer24, beanProperty25);
        xmlSerializerProvider1.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer26);
        int int28 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        int int31 = xmlSerializerProvider30.cachedSerializersCount();
        int int32 = xmlSerializerProvider30.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig33 = xmlSerializerProvider30.getConfig();
        java.lang.Class<?> wildcardClass34 = xmlSerializerProvider30.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator35 = xmlSerializerProvider30.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = xmlSerializerProvider1.getAttribute((java.lang.Object) jsonGenerator35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(serializationConfig33);
        org.junit.Assert.assertNull(wildcardClass34);
        org.junit.Assert.assertNull(jsonGenerator35);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.findKeySerializer(javaType5, beanProperty6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = xmlSerializerProvider1.getConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = serializationConfig20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertNull(serializationConfig20);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator7 = xmlSerializerProvider1.objectIdGeneratorInstance(annotated5, objectIdInfo6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass9 = objJsonSerializer8.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType10 = xmlSerializerProvider1.constructType((java.lang.reflect.Type) wildcardClass9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = xmlSerializerProvider1.isEnabled(mapperFeature6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNull(serializationConfig5);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        xmlSerializerProvider6.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider6.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer13, beanProperty14);
        java.util.Date date16 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator17 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date16, jsonGenerator17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer11 = xmlSerializerProvider1.findTypeSerializer(javaType10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.findNullValueSerializer(beanProperty11);
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider1.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        int int19 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer20);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator22 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator22, (java.lang.Object) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        int int7 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.findNullKeySerializer(javaType8, beanProperty9);
        com.fasterxml.jackson.databind.introspect.Annotated annotated11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider1.serializerInstance(annotated11, (java.lang.Object) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned serializer definition of type java.lang.Float; expected type JsonSerializer or Class<JsonSerializer> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.introspect.Annotated annotated6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter8 = xmlSerializerProvider1.converterInstance(annotated6, (java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type java.lang.Byte; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardClass5);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer6 = xmlSerializerProvider1.findTypeSerializer(javaType5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        int int7 = xmlSerializerProvider1.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector8 = xmlSerializerProvider1.getAnnotationIntrospector();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass14 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider1.findNullValueSerializer(beanProperty15);
        java.util.Date date17 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date17, jsonGenerator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(wildcardClass14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator28 = xmlSerializerProvider26.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig29 = xmlSerializerProvider26.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider26.getDefaultNullValueSerializer();
        java.lang.Object[] objArray32 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException33 = xmlSerializerProvider26.mappingException("", objArray32);
        int int34 = xmlSerializerProvider26.cachedSerializersCount();
        java.lang.Class<?> wildcardClass35 = xmlSerializerProvider26.getSerializationView();
        com.fasterxml.jackson.databind.JavaType javaType36 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator24, (java.lang.Object) wildcardClass35, javaType36);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: [no message for java.lang.NullPointerException]");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(jsonGenerator28);
        org.junit.Assert.assertNull(serializationConfig29);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(wildcardClass35);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.findNullValueSerializer(beanProperty21);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        int int26 = xmlSerializerProvider25.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider25.findNullValueSerializer(beanProperty27);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider30 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup29);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider30.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = xmlSerializerProvider25.handlePrimaryContextualization(objJsonSerializer31, beanProperty32);
        java.lang.Class<?> wildcardClass34 = xmlSerializerProvider25.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = xmlSerializerProvider25.handleSecondaryContextualization(objJsonSerializer35, beanProperty36);
        java.lang.Object[] objArray39 = null;
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException40 = xmlSerializerProvider25.mappingException("hi!", objArray39);
        com.fasterxml.jackson.databind.JavaType javaType41 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator23, (java.lang.Object) objArray39, javaType41);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: [no message for java.lang.NullPointerException]");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardClass34);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(jsonMappingException40);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider13 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup12);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider13.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = xmlSerializerProvider13.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider19.findNullValueSerializer(beanProperty21);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = xmlSerializerProvider19.handlePrimaryContextualization(objJsonSerializer25, beanProperty26);
        java.lang.Object[] objArray28 = new java.lang.Object[] { objJsonSerializer17, objJsonSerializer25 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException29 = xmlSerializerProvider13.mappingException("", objArray28);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException30 = xmlSerializerProvider8.mappingException("", objArray28);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException31 = xmlSerializerProvider1.mappingException("hi!", objArray28);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup32 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider33 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup32);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider33.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider33.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider33.getDefaultNullKeySerializer();
        int int37 = xmlSerializerProvider33.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup38 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider39 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup38);
        int int40 = xmlSerializerProvider39.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider39.findNullValueSerializer(beanProperty41);
        xmlSerializerProvider33.setDefaultKeySerializer(objJsonSerializer42);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = xmlSerializerProvider33.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNull(jsonGenerator15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(jsonMappingException29);
        org.junit.Assert.assertNotNull(jsonMappingException30);
        org.junit.Assert.assertNotNull(jsonMappingException31);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider12.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider12.findNullValueSerializer(beanProperty15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider12.setNullKeySerializer(objJsonSerializer17);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider20.getDefaultNullKeySerializer();
        int int24 = xmlSerializerProvider20.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider26.findNullValueSerializer(beanProperty28);
        xmlSerializerProvider20.setDefaultKeySerializer(objJsonSerializer29);
        xmlSerializerProvider12.setDefaultKeySerializer(objJsonSerializer29);
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider12.findNullValueSerializer(beanProperty32);
        xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer33);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = xmlSerializerProvider1.isEnabled(serializationFeature35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer8);
        java.util.Date date10 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date10, jsonGenerator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findValueSerializer(javaType5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        int int7 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can not pass null JsonSerializer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = xmlSerializerProvider1.getGenerator();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider17 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNull(serializationConfig14);
        org.junit.Assert.assertNull(jsonGenerator16);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        java.lang.Object[] objArray15 = null;
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("hi!", objArray15);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) (short) -1, jsonGenerator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(jsonMappingException16);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        int int24 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = xmlSerializerProvider22.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = xmlSerializerProvider29.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = xmlSerializerProvider34.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.findNullValueSerializer(beanProperty42);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider45 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup44);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = xmlSerializerProvider45.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = xmlSerializerProvider40.handlePrimaryContextualization(objJsonSerializer46, beanProperty47);
        java.lang.Object[] objArray49 = new java.lang.Object[] { objJsonSerializer38, objJsonSerializer46 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException50 = xmlSerializerProvider34.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException51 = xmlSerializerProvider29.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException52 = xmlSerializerProvider22.mappingException("hi!", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider16.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException54 = xmlSerializerProvider1.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(serializationConfig26);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNull(jsonGenerator31);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNull(jsonGenerator36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(jsonMappingException50);
        org.junit.Assert.assertNotNull(jsonMappingException51);
        org.junit.Assert.assertNotNull(jsonMappingException52);
        org.junit.Assert.assertNotNull(jsonMappingException53);
        org.junit.Assert.assertNotNull(jsonMappingException54);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = xmlSerializerProvider8.handlePrimaryContextualization(objJsonSerializer16, beanProperty17);
        xmlSerializerProvider1.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer18);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider20 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer18);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass6 = xmlSerializerProvider1.getSerializationView();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertNull(wildcardClass6);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider1.serializerInstance(annotated5, (java.lang.Object) objJsonSerializer10);
        com.fasterxml.jackson.databind.JavaType javaType12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider1.findValueSerializer(javaType12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider1.findNullValueSerializer(beanProperty13);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) 0, jsonGenerator16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanDescription beanDescription8 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        int int19 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig21 = xmlSerializerProvider17.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = xmlSerializerProvider24.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = xmlSerializerProvider29.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        int int36 = xmlSerializerProvider35.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = xmlSerializerProvider35.findNullValueSerializer(beanProperty37);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider40.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = xmlSerializerProvider35.handlePrimaryContextualization(objJsonSerializer41, beanProperty42);
        java.lang.Object[] objArray44 = new java.lang.Object[] { objJsonSerializer33, objJsonSerializer41 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException45 = xmlSerializerProvider29.mappingException("", objArray44);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException46 = xmlSerializerProvider24.mappingException("", objArray44);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException47 = xmlSerializerProvider17.mappingException("hi!", objArray44);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException48 = xmlSerializerProvider11.mappingException("", objArray44);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.DatabindContext databindContext49 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription8, "hi!", objArray44);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertNull(jsonGenerator6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(serializationConfig21);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(jsonGenerator26);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNull(jsonGenerator31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(jsonMappingException45);
        org.junit.Assert.assertNotNull(jsonMappingException46);
        org.junit.Assert.assertNotNull(jsonMappingException47);
        org.junit.Assert.assertNotNull(jsonMappingException48);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException8 = xmlSerializerProvider1.mappingException("", objArray7);
        int int9 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer12 = xmlSerializerProvider1.findTypeSerializer(javaType11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = xmlSerializerProvider1.isEnabled(serializationFeature8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer8);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        int int14 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig16 = xmlSerializerProvider12.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlSerializerProvider19.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = xmlSerializerProvider19.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider19.getDefaultNullValueSerializer();
        java.lang.Object[] objArray25 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException26 = xmlSerializerProvider19.mappingException("", objArray25);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException27 = xmlSerializerProvider12.mappingException("", objArray25);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException28 = xmlSerializerProvider1.mappingException("", objArray25);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(serializationConfig16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(jsonGenerator21);
        org.junit.Assert.assertNull(serializationConfig22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException26);
        org.junit.Assert.assertNotNull(jsonMappingException27);
        org.junit.Assert.assertNotNull(jsonMappingException28);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider8 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        int int24 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = xmlSerializerProvider22.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = xmlSerializerProvider29.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = xmlSerializerProvider34.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.findNullValueSerializer(beanProperty42);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider45 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup44);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = xmlSerializerProvider45.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = xmlSerializerProvider40.handlePrimaryContextualization(objJsonSerializer46, beanProperty47);
        java.lang.Object[] objArray49 = new java.lang.Object[] { objJsonSerializer38, objJsonSerializer46 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException50 = xmlSerializerProvider34.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException51 = xmlSerializerProvider29.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException52 = xmlSerializerProvider22.mappingException("hi!", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider16.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException54 = xmlSerializerProvider1.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory56 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(serializationConfig26);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNull(jsonGenerator31);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNull(jsonGenerator36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(jsonMappingException50);
        org.junit.Assert.assertNotNull(jsonMappingException51);
        org.junit.Assert.assertNotNull(jsonMappingException52);
        org.junit.Assert.assertNotNull(jsonMappingException53);
        org.junit.Assert.assertNotNull(jsonMappingException54);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = xmlSerializerProvider1.getConfig();
        java.lang.Class<?> wildcardClass5 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = xmlSerializerProvider9.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup19 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider20 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup19);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider20.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = xmlSerializerProvider15.handlePrimaryContextualization(objJsonSerializer21, beanProperty22);
        java.lang.Object[] objArray24 = new java.lang.Object[] { objJsonSerializer13, objJsonSerializer21 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException25 = xmlSerializerProvider9.mappingException("", objArray24);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = xmlSerializerProvider9.getGenerator();
        java.lang.Class<?> wildcardClass27 = xmlSerializerProvider9.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        int int30 = xmlSerializerProvider29.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider29.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider29.findNullValueSerializer(beanProperty32);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider29.setNullKeySerializer(objJsonSerializer34);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup36 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider37 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup36);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = xmlSerializerProvider37.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider37.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = xmlSerializerProvider37.getDefaultNullKeySerializer();
        int int41 = xmlSerializerProvider37.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup42 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider43 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup42);
        int int44 = xmlSerializerProvider43.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = xmlSerializerProvider43.findNullValueSerializer(beanProperty45);
        xmlSerializerProvider37.setDefaultKeySerializer(objJsonSerializer46);
        xmlSerializerProvider29.setDefaultKeySerializer(objJsonSerializer46);
        int int49 = xmlSerializerProvider29.cachedSerializersCount();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = xmlSerializerProvider1.setAttribute((java.lang.Object) xmlSerializerProvider9, (java.lang.Object) int49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializationConfig4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertNull(jsonGenerator6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(jsonMappingException25);
        org.junit.Assert.assertNull(jsonGenerator26);
        org.junit.Assert.assertNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider15.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator17 = xmlSerializerProvider15.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup20 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider21 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup20);
        int int22 = xmlSerializerProvider21.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = xmlSerializerProvider21.findNullValueSerializer(beanProperty23);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider26.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = xmlSerializerProvider21.handlePrimaryContextualization(objJsonSerializer27, beanProperty28);
        java.lang.Object[] objArray30 = new java.lang.Object[] { objJsonSerializer19, objJsonSerializer27 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException31 = xmlSerializerProvider15.mappingException("", objArray30);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator32 = xmlSerializerProvider15.getGenerator();
        java.lang.Class<?> wildcardClass33 = xmlSerializerProvider15.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider35.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider35.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = xmlSerializerProvider35.getDefaultNullKeySerializer();
        int int39 = xmlSerializerProvider35.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup40 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider41 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup40);
        int int42 = xmlSerializerProvider41.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = xmlSerializerProvider41.findNullValueSerializer(beanProperty43);
        xmlSerializerProvider35.setDefaultKeySerializer(objJsonSerializer44);
        xmlSerializerProvider15.setNullValueSerializer(objJsonSerializer44);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup47 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider48 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup47);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider48.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = xmlSerializerProvider48.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = xmlSerializerProvider48.getDefaultNullKeySerializer();
        int int52 = xmlSerializerProvider48.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup53 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider54 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup53);
        int int55 = xmlSerializerProvider54.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = xmlSerializerProvider54.findNullValueSerializer(beanProperty56);
        xmlSerializerProvider48.setDefaultKeySerializer(objJsonSerializer57);
        xmlSerializerProvider15.setNullValueSerializer(objJsonSerializer57);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNull(jsonGenerator17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(jsonMappingException31);
        org.junit.Assert.assertNull(jsonGenerator32);
        org.junit.Assert.assertNull(wildcardClass33);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        int int15 = xmlSerializerProvider11.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        xmlSerializerProvider11.setDefaultKeySerializer(objJsonSerializer20);
        java.lang.Class<?> wildcardClass22 = xmlSerializerProvider11.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig23 = xmlSerializerProvider11.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider26.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider26.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider26.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup31 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider32 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup31);
        int int33 = xmlSerializerProvider32.cachedSerializersCount();
        int int34 = xmlSerializerProvider32.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider32.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = xmlSerializerProvider32.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup38 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider39 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup38);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = xmlSerializerProvider39.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator41 = xmlSerializerProvider39.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup43 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider44 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup43);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = xmlSerializerProvider44.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator46 = xmlSerializerProvider44.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup49 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider50 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup49);
        int int51 = xmlSerializerProvider50.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = xmlSerializerProvider50.findNullValueSerializer(beanProperty52);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup54 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider55 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup54);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = xmlSerializerProvider55.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = xmlSerializerProvider50.handlePrimaryContextualization(objJsonSerializer56, beanProperty57);
        java.lang.Object[] objArray59 = new java.lang.Object[] { objJsonSerializer48, objJsonSerializer56 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException60 = xmlSerializerProvider44.mappingException("", objArray59);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException61 = xmlSerializerProvider39.mappingException("", objArray59);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException62 = xmlSerializerProvider32.mappingException("hi!", objArray59);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException63 = xmlSerializerProvider26.mappingException("", objArray59);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException64 = xmlSerializerProvider11.mappingException("", objArray59);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNull(wildcardClass22);
        org.junit.Assert.assertNull(serializationConfig23);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNull(serializationConfig36);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNull(jsonGenerator41);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNull(jsonGenerator46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(jsonMappingException60);
        org.junit.Assert.assertNotNull(jsonMappingException61);
        org.junit.Assert.assertNotNull(jsonMappingException62);
        org.junit.Assert.assertNotNull(jsonMappingException63);
        org.junit.Assert.assertNotNull(jsonMappingException64);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass16 = xmlSerializerProvider11.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider18.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider18.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider11.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer24, beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        int int29 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = xmlSerializerProvider28.getGenerator();
        int int31 = xmlSerializerProvider28.cachedSerializersCount();
        java.lang.Class<?> wildcardClass32 = xmlSerializerProvider28.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        int int35 = xmlSerializerProvider34.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        xmlSerializerProvider28.setNullValueSerializer(objJsonSerializer36);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup38 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider39 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup38);
        int int40 = xmlSerializerProvider39.cachedSerializersCount();
        int int41 = xmlSerializerProvider39.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider39.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig43 = xmlSerializerProvider39.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        int int47 = xmlSerializerProvider46.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator48 = xmlSerializerProvider46.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig49 = xmlSerializerProvider46.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = xmlSerializerProvider46.getDefaultNullValueSerializer();
        java.lang.Object[] objArray52 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider46.mappingException("", objArray52);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException54 = xmlSerializerProvider39.mappingException("", objArray52);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = xmlSerializerProvider1.setAttribute((java.lang.Object) objJsonSerializer36, (java.lang.Object) jsonMappingException54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(wildcardClass16);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(jsonGenerator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNull(serializationConfig43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(jsonGenerator48);
        org.junit.Assert.assertNull(serializationConfig49);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException53);
        org.junit.Assert.assertNotNull(jsonMappingException54);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        java.lang.Class<?> wildcardClass7 = xmlSerializerProvider1.getActiveView();
        xmlSerializerProvider1.flushCachedSerializers();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardClass7);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        java.lang.Object[] objArray15 = null;
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("hi!", objArray15);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = xmlSerializerProvider1.isEnabled(mapperFeature17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(jsonMappingException16);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = xmlSerializerProvider6.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider12.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer18, beanProperty19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { objJsonSerializer10, objJsonSerializer18 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException22 = xmlSerializerProvider6.mappingException("", objArray21);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException23 = xmlSerializerProvider1.mappingException("", objArray21);
        java.lang.Class<?> wildcardClass24 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.getDefaultNullKeySerializer();
        int int31 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup32 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider33 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup32);
        int int34 = xmlSerializerProvider33.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = xmlSerializerProvider33.findNullValueSerializer(beanProperty35);
        xmlSerializerProvider27.setDefaultKeySerializer(objJsonSerializer36);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter38 = xmlSerializerProvider1.converterInstance(annotated25, (java.lang.Object) objJsonSerializer36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.databind.ser.std.NullSerializer; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(jsonMappingException22);
        org.junit.Assert.assertNotNull(jsonMappingException23);
        org.junit.Assert.assertNull(wildcardClass24);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        int int8 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        xmlSerializerProvider6.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider6.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer13, beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        int int18 = xmlSerializerProvider17.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider17.findNullValueSerializer(beanProperty19);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = xmlSerializerProvider17.handlePrimaryContextualization(objJsonSerializer23, beanProperty24);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider17.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        int int29 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider28.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider28.findNullValueSerializer(beanProperty31);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider28.setNullKeySerializer(objJsonSerializer33);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = xmlSerializerProvider36.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = xmlSerializerProvider36.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider36.getDefaultNullKeySerializer();
        int int40 = xmlSerializerProvider36.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup41 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider42 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup41);
        int int43 = xmlSerializerProvider42.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty44 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = xmlSerializerProvider42.findNullValueSerializer(beanProperty44);
        xmlSerializerProvider36.setDefaultKeySerializer(objJsonSerializer45);
        xmlSerializerProvider28.setDefaultKeySerializer(objJsonSerializer45);
        xmlSerializerProvider17.setNullKeySerializer(objJsonSerializer45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = xmlSerializerProvider1.getAttribute((java.lang.Object) objJsonSerializer45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.findNullValueSerializer(beanProperty11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider8.setNullKeySerializer(objJsonSerializer13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = xmlSerializerProvider1.getAttribute((java.lang.Object) xmlSerializerProvider8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.introspect.Annotated annotated4 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider6.findNullValueSerializer(beanProperty8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = xmlSerializerProvider6.handlePrimaryContextualization(objJsonSerializer12, beanProperty13);
        java.lang.Class<?> wildcardClass15 = xmlSerializerProvider6.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = xmlSerializerProvider6.handleSecondaryContextualization(objJsonSerializer16, beanProperty17);
        java.lang.Object[] objArray20 = null;
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException21 = xmlSerializerProvider6.mappingException("hi!", objArray20);
        java.lang.Class<?> wildcardClass22 = jsonMappingException21.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter23 = xmlSerializerProvider1.converterInstance(annotated4, (java.lang.Object) jsonMappingException21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.databind.JsonMappingException; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardClass15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(jsonMappingException21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = xmlSerializerProvider1.hasSerializationFeatures((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        int int21 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((-1L), jsonGenerator25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale5 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JavaType javaType3 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findKeySerializer(javaType3, beanProperty4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass14 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider1.findNullValueSerializer(beanProperty15);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator17 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(wildcardClass14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.findValueSerializer(javaType5, beanProperty6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        java.lang.Class<?> wildcardClass10 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JavaType javaType15 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider1.findKeySerializer(javaType15, beanProperty16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(jsonGenerator14);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException16 = xmlSerializerProvider1.mappingException("", objArray14);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider19 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup18);
        int int20 = xmlSerializerProvider19.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider19.findNullValueSerializer(beanProperty21);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider24.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = xmlSerializerProvider19.handlePrimaryContextualization(objJsonSerializer25, beanProperty26);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider19.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider19.findNullValueSerializer(beanProperty29);
        com.fasterxml.jackson.databind.BeanProperty beanProperty31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider19.findNullValueSerializer(beanProperty31);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider1.serializerInstance(annotated17, (java.lang.Object) beanProperty31);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory34 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(jsonMappingException16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNull(objJsonSerializer33);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JavaType javaType13 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider1.findValueSerializer(javaType13, beanProperty14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer10);
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider16.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        int int24 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = xmlSerializerProvider22.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = xmlSerializerProvider29.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = xmlSerializerProvider34.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.findNullValueSerializer(beanProperty42);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider45 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup44);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = xmlSerializerProvider45.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = xmlSerializerProvider40.handlePrimaryContextualization(objJsonSerializer46, beanProperty47);
        java.lang.Object[] objArray49 = new java.lang.Object[] { objJsonSerializer38, objJsonSerializer46 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException50 = xmlSerializerProvider34.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException51 = xmlSerializerProvider29.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException52 = xmlSerializerProvider22.mappingException("hi!", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider16.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException54 = xmlSerializerProvider1.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider56 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(serializationConfig13);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(serializationConfig26);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNull(jsonGenerator31);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNull(jsonGenerator36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(jsonMappingException50);
        org.junit.Assert.assertNotNull(jsonMappingException51);
        org.junit.Assert.assertNotNull(jsonMappingException52);
        org.junit.Assert.assertNotNull(jsonMappingException53);
        org.junit.Assert.assertNotNull(jsonMappingException54);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass4 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        int int9 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        xmlSerializerProvider7.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = xmlSerializerProvider7.handleSecondaryContextualization(objJsonSerializer12, beanProperty13);
        java.lang.Class<?> wildcardClass15 = xmlSerializerProvider7.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        int int19 = xmlSerializerProvider18.cachedSerializersCount();
        int int20 = xmlSerializerProvider18.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = xmlSerializerProvider18.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        int int26 = xmlSerializerProvider25.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator27 = xmlSerializerProvider25.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig28 = xmlSerializerProvider25.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider25.getDefaultNullValueSerializer();
        java.lang.Object[] objArray31 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException32 = xmlSerializerProvider25.mappingException("", objArray31);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException33 = xmlSerializerProvider18.mappingException("", objArray31);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException34 = xmlSerializerProvider7.mappingException("", objArray31);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException35 = xmlSerializerProvider1.mappingException("", objArray31);
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JavaType javaType37 = null;
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper38 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.acceptJsonFormatVisitor(javaType37, jsonFormatVisitorWrapper38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: A class must be provided");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNull(serializationConfig22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(jsonGenerator27);
        org.junit.Assert.assertNull(serializationConfig28);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException32);
        org.junit.Assert.assertNotNull(jsonMappingException33);
        org.junit.Assert.assertNotNull(jsonMappingException34);
        org.junit.Assert.assertNotNull(jsonMappingException35);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.BeanProperty beanProperty10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider1.findNullValueSerializer(beanProperty10);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeNull(jsonGenerator12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer6, beanProperty7);
        com.fasterxml.jackson.databind.introspect.Annotated annotated9 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver11 = xmlSerializerProvider1.objectIdResolverInstance(annotated9, objectIdInfo10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNull(serializationConfig5);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test483");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        int int13 = xmlSerializerProvider9.cachedSerializersCount();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        int int16 = xmlSerializerProvider15.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider15.findNullValueSerializer(beanProperty17);
        xmlSerializerProvider9.setDefaultKeySerializer(objJsonSerializer18);
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer18);
        int int21 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.introspect.Annotated annotated23 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo24 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver25 = xmlSerializerProvider1.objectIdResolverInstance(annotated23, objectIdInfo24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test484");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig5 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider7 = xmlSerializerProvider1.createInstance(serializationConfig5, serializerFactory6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test485");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        int int11 = xmlSerializerProvider8.cachedSerializersCount();
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider8.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        xmlSerializerProvider8.setNullValueSerializer(objJsonSerializer16);
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer16);
        com.fasterxml.jackson.databind.JavaType javaType19 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider1.findNullKeySerializer(javaType19, beanProperty20);
        com.fasterxml.jackson.databind.BeanDescription beanDescription22 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition23 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup25);
        int int27 = xmlSerializerProvider26.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider26.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass29 = xmlSerializerProvider26.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup31 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider32 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup31);
        int int33 = xmlSerializerProvider32.cachedSerializersCount();
        int int34 = xmlSerializerProvider32.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider32.getDefaultNullValueSerializer();
        xmlSerializerProvider32.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = xmlSerializerProvider32.handleSecondaryContextualization(objJsonSerializer37, beanProperty38);
        java.lang.Class<?> wildcardClass40 = xmlSerializerProvider32.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup42 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider43 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup42);
        int int44 = xmlSerializerProvider43.cachedSerializersCount();
        int int45 = xmlSerializerProvider43.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = xmlSerializerProvider43.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig47 = xmlSerializerProvider43.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup49 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider50 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup49);
        int int51 = xmlSerializerProvider50.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator52 = xmlSerializerProvider50.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig53 = xmlSerializerProvider50.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = xmlSerializerProvider50.getDefaultNullValueSerializer();
        java.lang.Object[] objArray56 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException57 = xmlSerializerProvider50.mappingException("", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException58 = xmlSerializerProvider43.mappingException("", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException59 = xmlSerializerProvider32.mappingException("", objArray56);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException60 = xmlSerializerProvider26.mappingException("", objArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable61 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription22, beanPropertyDefinition23, "hi!", objArray56);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNull(serializationConfig47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(jsonGenerator52);
        org.junit.Assert.assertNull(serializationConfig53);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException57);
        org.junit.Assert.assertNotNull(jsonMappingException58);
        org.junit.Assert.assertNotNull(jsonMappingException59);
        org.junit.Assert.assertNotNull(jsonMappingException60);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test486");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        int int7 = xmlSerializerProvider6.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider6.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer8);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = xmlSerializerProvider1.hasSerializationFeatures((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test487");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        xmlSerializerProvider1.flushCachedSerializers();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        int int17 = xmlSerializerProvider16.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider16.getDefaultNullValueSerializer();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider16.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        int int23 = xmlSerializerProvider22.cachedSerializersCount();
        int int24 = xmlSerializerProvider22.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider22.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = xmlSerializerProvider22.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = xmlSerializerProvider29.getGenerator();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider34.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = xmlSerializerProvider34.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        int int41 = xmlSerializerProvider40.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = xmlSerializerProvider40.findNullValueSerializer(beanProperty42);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider45 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup44);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = xmlSerializerProvider45.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = xmlSerializerProvider40.handlePrimaryContextualization(objJsonSerializer46, beanProperty47);
        java.lang.Object[] objArray49 = new java.lang.Object[] { objJsonSerializer38, objJsonSerializer46 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException50 = xmlSerializerProvider34.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException51 = xmlSerializerProvider29.mappingException("", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException52 = xmlSerializerProvider22.mappingException("hi!", objArray49);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider16.mappingException("hi!", objArray49);
        com.fasterxml.jackson.databind.JavaType javaType54 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator14, (java.lang.Object) "hi!", javaType54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNull(serializationConfig26);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNull(jsonGenerator31);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNull(jsonGenerator36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(jsonMappingException50);
        org.junit.Assert.assertNotNull(jsonMappingException51);
        org.junit.Assert.assertNotNull(jsonMappingException52);
        org.junit.Assert.assertNotNull(jsonMappingException53);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test488");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        int int5 = xmlSerializerProvider1.cachedSerializersCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test489");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        int int8 = xmlSerializerProvider7.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider7.findNullValueSerializer(beanProperty9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlSerializerProvider7.handlePrimaryContextualization(objJsonSerializer13, beanProperty14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { objJsonSerializer5, objJsonSerializer13 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("", objArray16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = xmlSerializerProvider1.getGenerator();
        java.lang.Class<?> wildcardClass19 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = xmlSerializerProvider1.isEnabled(serializationFeature21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(jsonMappingException17);
        org.junit.Assert.assertNull(jsonGenerator18);
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertNull(serializationConfig20);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test490");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = xmlSerializerProvider1.isEnabled(serializationFeature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test491");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        int int7 = xmlSerializerProvider1.cachedSerializersCount();
        xmlSerializerProvider1.flushCachedSerializers();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Locale locale9 = xmlSerializerProvider1.getLocale();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test492");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JavaType javaType6 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider1.findNullKeySerializer(javaType6, beanProperty7);
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test493");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findNullValueSerializer(beanProperty3);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider6.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer7, beanProperty8);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        xmlSerializerProvider1.flushCachedSerializers();
        xmlSerializerProvider1.flushCachedSerializers();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JavaType javaType14 = null;
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper15 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.acceptJsonFormatVisitor(javaType14, jsonFormatVisitorWrapper15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: A class must be provided");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(serializationConfig10);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test494");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass6 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = xmlSerializerProvider1.handlePrimaryContextualization(objJsonSerializer12, beanProperty13);
        com.fasterxml.jackson.databind.BeanDescription beanDescription15 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        int int19 = xmlSerializerProvider18.cachedSerializersCount();
        int int20 = xmlSerializerProvider18.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        xmlSerializerProvider18.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = xmlSerializerProvider18.handleSecondaryContextualization(objJsonSerializer23, beanProperty24);
        java.lang.Class<?> wildcardClass26 = xmlSerializerProvider18.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        int int30 = xmlSerializerProvider29.cachedSerializersCount();
        int int31 = xmlSerializerProvider29.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig33 = xmlSerializerProvider29.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        int int37 = xmlSerializerProvider36.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator38 = xmlSerializerProvider36.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig39 = xmlSerializerProvider36.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = xmlSerializerProvider36.getDefaultNullValueSerializer();
        java.lang.Object[] objArray42 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException43 = xmlSerializerProvider36.mappingException("", objArray42);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException44 = xmlSerializerProvider29.mappingException("", objArray42);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException45 = xmlSerializerProvider18.mappingException("", objArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription15, "hi!", objArray42);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNull(serializationConfig33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(jsonGenerator38);
        org.junit.Assert.assertNull(serializationConfig39);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException43);
        org.junit.Assert.assertNotNull(jsonMappingException44);
        org.junit.Assert.assertNotNull(jsonMappingException45);
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test495");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        int int4 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findNullValueSerializer(beanProperty5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        int int11 = xmlSerializerProvider8.cachedSerializersCount();
        java.lang.Class<?> wildcardClass12 = xmlSerializerProvider8.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        int int15 = xmlSerializerProvider14.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullValueSerializer();
        xmlSerializerProvider8.setNullValueSerializer(objJsonSerializer16);
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer16);
        com.fasterxml.jackson.databind.JavaType javaType19 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider1.findNullKeySerializer(javaType19, beanProperty20);
        com.fasterxml.jackson.databind.BeanProperty beanProperty22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = xmlSerializerProvider1.findNullValueSerializer(beanProperty22);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig24 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory25 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider26 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1, serializationConfig24, serializerFactory25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test496");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup10);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = xmlSerializerProvider11.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider11.getDefaultNullKeySerializer();
        java.lang.Class<?> wildcardClass16 = xmlSerializerProvider11.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = xmlSerializerProvider18.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider18.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider18.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = xmlSerializerProvider11.handlePrimaryContextualization(objJsonSerializer22, beanProperty23);
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = xmlSerializerProvider1.handleSecondaryContextualization((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer24, beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        int int29 = xmlSerializerProvider28.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider28.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer30);
        com.fasterxml.jackson.databind.JavaType javaType32 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = xmlSerializerProvider1.findValueSerializer(javaType32, beanProperty33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(wildcardClass16);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test497");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = xmlSerializerProvider7.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider7.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider7.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer11);
        java.lang.Class<?> wildcardClass13 = xmlSerializerProvider1.getActiveView();
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider1.findNullValueSerializer(beanProperty14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = xmlSerializerProvider17.getDefaultNullValueSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = xmlSerializerProvider17.getGenerator();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup22 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup22);
        int int24 = xmlSerializerProvider23.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider23.findNullValueSerializer(beanProperty25);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = xmlSerializerProvider23.handlePrimaryContextualization(objJsonSerializer29, beanProperty30);
        java.lang.Object[] objArray32 = new java.lang.Object[] { objJsonSerializer21, objJsonSerializer29 };
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException33 = xmlSerializerProvider17.mappingException("", objArray32);
        java.lang.Class<?> wildcardClass34 = xmlSerializerProvider17.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType35 = xmlSerializerProvider1.constructType((java.lang.reflect.Type) wildcardClass34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objJsonSerializer2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(jsonGenerator4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNull(jsonGenerator19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(jsonMappingException33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test498");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        int int4 = xmlSerializerProvider3.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        xmlSerializerProvider1.setDefaultKeySerializer(objJsonSerializer5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        int int9 = xmlSerializerProvider8.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlSerializerProvider8.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = xmlSerializerProvider8.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider8.getDefaultNullValueSerializer();
        java.lang.Object[] objArray14 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException15 = xmlSerializerProvider8.mappingException("", objArray14);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = xmlSerializerProvider8.handlePrimaryContextualization(objJsonSerializer16, beanProperty17);
        xmlSerializerProvider1.setNullValueSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer18);
        com.fasterxml.jackson.databind.JavaType javaType20 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.findPrimaryPropertySerializer(javaType20, beanProperty21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(jsonGenerator10);
        org.junit.Assert.assertNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer18);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test499");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        int int3 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer6, beanProperty7);
        java.lang.Class<?> wildcardClass9 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig10 = xmlSerializerProvider1.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        int int13 = xmlSerializerProvider12.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider12.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider12.findNullValueSerializer(beanProperty15);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup17);
        int int19 = xmlSerializerProvider18.cachedSerializersCount();
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider18.findNullValueSerializer(beanProperty20);
        com.fasterxml.jackson.databind.BeanProperty beanProperty22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = xmlSerializerProvider12.handlePrimaryContextualization(objJsonSerializer21, beanProperty22);
        xmlSerializerProvider1.setDefaultKeySerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer23);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator25 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        int int28 = xmlSerializerProvider27.cachedSerializersCount();
        int int29 = xmlSerializerProvider27.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider27.getDefaultNullValueSerializer();
        xmlSerializerProvider27.flushCachedSerializers();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = xmlSerializerProvider27.handleSecondaryContextualization(objJsonSerializer32, beanProperty33);
        java.lang.Class<?> wildcardClass35 = xmlSerializerProvider27.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup37 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider38 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup37);
        int int39 = xmlSerializerProvider38.cachedSerializersCount();
        int int40 = xmlSerializerProvider38.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = xmlSerializerProvider38.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig42 = xmlSerializerProvider38.getConfig();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider45 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup44);
        int int46 = xmlSerializerProvider45.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator47 = xmlSerializerProvider45.getGenerator();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig48 = xmlSerializerProvider45.getConfig();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider45.getDefaultNullValueSerializer();
        java.lang.Object[] objArray51 = new java.lang.Object[] {};
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException52 = xmlSerializerProvider45.mappingException("", objArray51);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = xmlSerializerProvider38.mappingException("", objArray51);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException54 = xmlSerializerProvider27.mappingException("", objArray51);
        com.fasterxml.jackson.databind.JavaType javaType55 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup56 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider57 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup56);
        int int58 = xmlSerializerProvider57.cachedSerializersCount();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator59 = xmlSerializerProvider57.getGenerator();
        int int60 = xmlSerializerProvider57.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = xmlSerializerProvider57.getDefaultNullValueSerializer();
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator25, (java.lang.Object) objArray51, javaType55, objJsonSerializer61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertNull(serializationConfig10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNull(serializationConfig42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(jsonGenerator47);
        org.junit.Assert.assertNull(serializationConfig48);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(jsonMappingException52);
        org.junit.Assert.assertNotNull(jsonMappingException53);
        org.junit.Assert.assertNotNull(jsonMappingException54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(jsonGenerator59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test500");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findNullValueSerializer(beanProperty4);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer6);
        java.lang.Class<?> wildcardClass8 = xmlSerializerProvider1.getActiveView();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = xmlSerializerProvider1.canOverrideAccessModifiers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardClass8);
    }
}

