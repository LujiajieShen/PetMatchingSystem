import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test501");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = objJsonSerializer6.unwrappingSerializer(nameTransformer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = objJsonSerializer6.isEmpty(serializerProvider9, (java.lang.Object) ' ');
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        boolean boolean61 = stdKeySerializer56.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        boolean boolean68 = stdKeySerializer63.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass69 = stdKeySerializer63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer56.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass69, false);
        boolean boolean72 = stdKeySerializer12.isEmpty(serializerProvider55, (java.lang.Object) stdKeySerializer56);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = stdKeySerializer56.unwrappingSerializer(nameTransformer73);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator76 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer78 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer6.serializeWithType((java.lang.Object) stdKeySerializer56, jsonGenerator76, serializerProvider77, typeSerializer78);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
    }

    @Test
    public void test502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test502");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        boolean boolean8 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = stdKeySerializer9.unwrappingSerializer(nameTransformer14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass18 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer9.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer21.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer9.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer9.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = stdKeySerializer9.usesObjectId();
        boolean boolean38 = stdKeySerializer9.usesObjectId();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator39 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer41 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer6.serializeWithType((java.lang.Object) boolean38, jsonGenerator39, serializerProvider40, typeSerializer41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test503");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        java.lang.Class<java.lang.Object> objClass10 = stdKeySerializer0.handledType();
        boolean boolean11 = stdKeySerializer0.isUnwrappingSerializer();
        java.lang.Class<?> wildcardClass12 = stdKeySerializer0.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test504");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        boolean boolean46 = stdKeySerializer0.usesObjectId();
        boolean boolean47 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test505");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        boolean boolean26 = stdKeySerializer21.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer21.unwrappingSerializer(nameTransformer27);
        java.lang.Class<java.lang.Object> objClass29 = stdKeySerializer21.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        boolean boolean36 = stdKeySerializer31.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        boolean boolean43 = stdKeySerializer38.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass44 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer31.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass44, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer21.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass44, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer0.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass44, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        boolean boolean58 = objJsonSerializer57.usesObjectId();
        boolean boolean59 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer57);
        java.lang.Class<java.lang.Object> objClass60 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer0.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        java.lang.Throwable throwable64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        boolean boolean70 = stdKeySerializer65.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer65.unwrappingSerializer(nameTransformer71);
        java.lang.Class<java.lang.Object> objClass73 = stdKeySerializer65.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider63, throwable64, (java.lang.Object) objClass73, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objClass29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objClass60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNotNull(objClass73);
    }

    @Test
    public void test506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test506");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer18.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer36.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer36.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer36.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = stdKeySerializer18.isEmpty((java.lang.Object) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        boolean boolean67 = stdKeySerializer62.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer62.unwrappingSerializer(nameTransformer68);
        java.lang.Class<java.lang.Object> objClass70 = stdKeySerializer62.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        boolean boolean75 = stdKeySerializer72.isEmpty(serializerProvider73, (java.lang.Object) (short) 1);
        boolean boolean77 = stdKeySerializer72.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer72.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer62.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass85, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer18.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer0.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass85, true);
        boolean boolean93 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer94 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNotNull(objClass70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer94);
    }

    @Test
    public void test507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test507");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        boolean boolean14 = stdKeySerializer9.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        boolean boolean21 = stdKeySerializer16.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass22 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer9.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass22, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer9.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider8, (java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer0.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        boolean boolean39 = stdKeySerializer37.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        boolean boolean41 = objJsonSerializer35.isEmpty(serializerProvider36, (java.lang.Object) stdKeySerializer37);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test508");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = stdKeySerializer0.unwrappingSerializer(nameTransformer3);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = stdKeySerializer5.isEmpty((java.lang.Object) jsonNode20);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        java.lang.Class<java.lang.Object> objClass27 = stdKeySerializer22.handledType();
        boolean boolean29 = stdKeySerializer22.isEmpty((java.lang.Object) 0);
        boolean boolean30 = stdKeySerializer5.isEmpty((java.lang.Object) boolean29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass65);
        boolean boolean69 = stdKeySerializer32.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        java.lang.Class<?> wildcardClass70 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer5.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass70, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator73 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer75 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer4.serializeWithType((java.lang.Object) stdKeySerializer5, jsonGenerator73, serializerProvider74, typeSerializer75);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode72);
    }

    @Test
    public void test509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test509");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.isUnwrappingSerializer();
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objClass46);
    }

    @Test
    public void test510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test510");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        boolean boolean17 = stdKeySerializer12.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer18.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer18.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46, false);
        boolean boolean51 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean53 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass54 = stdKeySerializer0.handledType();
        java.lang.Class<?> wildcardClass55 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test511");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39, true);
        boolean boolean44 = stdKeySerializer0.isEmpty(serializerProvider24, (java.lang.Object) stdKeySerializer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        boolean boolean50 = stdKeySerializer46.usesObjectId();
        boolean boolean51 = stdKeySerializer46.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer46.getDelegatee();
        java.lang.Class<java.lang.Object> objClass53 = stdKeySerializer46.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer25.getSchema(serializerProvider45, (java.lang.reflect.Type) objClass53, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        java.lang.Throwable throwable57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        boolean boolean61 = stdKeySerializer58.isEmpty(serializerProvider59, (java.lang.Object) (short) 1);
        boolean boolean62 = stdKeySerializer58.usesObjectId();
        boolean boolean63 = stdKeySerializer58.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer58.getDelegatee();
        java.lang.Class<java.lang.Object> objClass65 = stdKeySerializer58.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer25.wrapAndThrow(serializerProvider56, throwable57, (java.lang.Object) stdKeySerializer58, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objClass53);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objClass65);
    }

    @Test
    public void test512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test512");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = objJsonSerializer17.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = objJsonSerializer19.unwrappingSerializer(nameTransformer20);
        boolean boolean22 = objJsonSerializer19.usesObjectId();
        java.lang.Class<?> wildcardClass23 = objJsonSerializer19.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test513");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer0.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        boolean boolean27 = stdKeySerializer22.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer22.unwrappingSerializer(nameTransformer28);
        java.lang.Class<java.lang.Object> objClass30 = stdKeySerializer22.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        boolean boolean37 = stdKeySerializer32.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        boolean boolean42 = stdKeySerializer39.isEmpty(serializerProvider40, (java.lang.Object) (short) 1);
        boolean boolean44 = stdKeySerializer39.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass45 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer32.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass45, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer22.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass45, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer50.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = objJsonSerializer53.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = objJsonSerializer53.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer22.isEmpty((java.lang.Object) nameTransformer55);
        boolean boolean58 = stdKeySerializer22.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        java.lang.Class<?> wildcardClass81 = stdKeySerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer72.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer60.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer22.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass81, true);
        boolean boolean86 = objJsonSerializer20.isEmpty(serializerProvider21, (java.lang.Object) serializerProvider59);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objClass30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test514");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = stdKeySerializer0.unwrappingSerializer(nameTransformer3);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = stdKeySerializer5.unwrappingSerializer(nameTransformer7);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = objJsonSerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = objJsonSerializer8.unwrappingSerializer(nameTransformer10);
        boolean boolean13 = objJsonSerializer11.isEmpty((java.lang.Object) (short) -1);
        boolean boolean14 = objJsonSerializer4.isEmpty((java.lang.Object) boolean13);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test515");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        java.lang.Class<java.lang.Object> objClass10 = stdKeySerializer5.handledType();
        boolean boolean12 = stdKeySerializer5.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer5.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = objJsonSerializer14.getDelegatee();
        boolean boolean16 = objJsonSerializer14.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = objJsonSerializer14.unwrappingSerializer(nameTransformer17);
        boolean boolean19 = stdKeySerializer0.isEmpty((java.lang.Object) nameTransformer17);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objClass10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test516");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = stdKeySerializer0.usesObjectId();
        boolean boolean29 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper30 = null;
        com.fasterxml.jackson.databind.JavaType javaType31 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper30, javaType31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test517");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        boolean boolean25 = stdKeySerializer20.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass26 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer13.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass26, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer30.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        boolean boolean51 = stdKeySerializer48.isEmpty(serializerProvider49, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer48.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer65.getDelegatee();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer48.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass69);
        boolean boolean72 = stdKeySerializer30.isEmpty((java.lang.Object) wildcardClass69);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer13.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass69);
        boolean boolean74 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) serializerProvider29);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = stdKeySerializer0.unwrappingSerializer(nameTransformer75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
    }

    @Test
    public void test518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test518");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer0.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        boolean boolean40 = stdKeySerializer35.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass41 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = stdKeySerializer23.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer44 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = stdKeySerializer23.unwrappingSerializer(nameTransformer44);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator46 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objJsonSerializer45, jsonGenerator46, serializerProvider47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
    }

    @Test
    public void test519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test519");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = stdKeySerializer8.usesObjectId();
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer8.handledType();
        boolean boolean21 = stdKeySerializer8.isUnwrappingSerializer();
        boolean boolean23 = stdKeySerializer8.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer8.unwrappingSerializer(nameTransformer24);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = objJsonSerializer6.replaceDelegatee(objJsonSerializer25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
    }

    @Test
    public void test520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test520");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer11.getDelegatee();
        boolean boolean14 = stdKeySerializer11.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = objJsonSerializer22.isEmpty((java.lang.Object) stdKeySerializer23);
        java.lang.Class<?> wildcardClass48 = objJsonSerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass48, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        java.lang.Class<java.lang.Object> objClass57 = stdKeySerializer52.handledType();
        boolean boolean59 = stdKeySerializer52.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer52.unwrappingSerializer(nameTransformer60);
        boolean boolean62 = stdKeySerializer11.isEmpty(serializerProvider51, (java.lang.Object) stdKeySerializer52);
        java.lang.Class<java.lang.Object> objClass63 = stdKeySerializer11.handledType();
        boolean boolean64 = stdKeySerializer0.isEmpty(serializerProvider10, (java.lang.Object) stdKeySerializer11);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer70.getDelegatee();
        java.lang.Class<?> wildcardClass74 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer65.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer78.getDelegatee();
        java.lang.Class<java.lang.Object> objClass83 = stdKeySerializer78.handledType();
        boolean boolean84 = stdKeySerializer65.isEmpty(serializerProvider77, (java.lang.Object) stdKeySerializer78);
        java.lang.Class<java.lang.Object> objClass85 = stdKeySerializer78.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator86 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider87 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer11.serialize((java.lang.Object) objClass85, jsonGenerator86, serializerProvider87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objClass57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(objClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objClass85);
    }

    @Test
    public void test521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test521");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = stdKeySerializer0.unwrappingSerializer(nameTransformer3);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = stdKeySerializer5.unwrappingSerializer(nameTransformer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer10.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        boolean boolean31 = stdKeySerializer28.isEmpty(serializerProvider29, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer28.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer28.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = stdKeySerializer10.isEmpty((java.lang.Object) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean54 = stdKeySerializer5.usesObjectId();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator56 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer58 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) wildcardJsonSerializer55, jsonGenerator56, serializerProvider57, typeSerializer58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
    }

    @Test
    public void test522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test522");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Throwable throwable30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        boolean boolean33 = stdKeySerializer31.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer31.isEmpty(serializerProvider34, (java.lang.Object) 1L);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider29, throwable30, (java.lang.Object) boolean36, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test523");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        boolean boolean24 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer0.unwrappingSerializer(nameTransformer25);
        java.lang.Class<java.lang.Object> objClass27 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objClass27);
    }

    @Test
    public void test524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test524");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer8.getDelegatee();
        boolean boolean11 = stdKeySerializer8.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = objJsonSerializer19.isEmpty((java.lang.Object) stdKeySerializer20);
        java.lang.Class<?> wildcardClass45 = objJsonSerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer8.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass45, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer49.getDelegatee();
        java.lang.Class<java.lang.Object> objClass54 = stdKeySerializer49.handledType();
        boolean boolean56 = stdKeySerializer49.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer49.unwrappingSerializer(nameTransformer57);
        boolean boolean59 = stdKeySerializer8.isEmpty(serializerProvider48, (java.lang.Object) stdKeySerializer49);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer49.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = objJsonSerializer61.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer64 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = objJsonSerializer61.unwrappingSerializer(nameTransformer64);
        boolean boolean66 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(objClass54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test525");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        boolean boolean51 = stdKeySerializer46.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass52 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer0.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer54.unwrappingSerializer(nameTransformer59);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer61.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass70 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer61.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        java.lang.Class<?> wildcardClass82 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer73.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass82);
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer61.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = objJsonSerializer60.isEmpty((java.lang.Object) stdKeySerializer61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer86 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer87 = objJsonSerializer60.unwrappingSerializer(nameTransformer86);
        boolean boolean88 = objJsonSerializer87.isUnwrappingSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator89 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider90 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) boolean88, jsonGenerator89, serializerProvider90, typeSerializer91);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test526");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer54.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass63, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer49.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass63, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        boolean boolean74 = stdKeySerializer69.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass75 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer49.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass75);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer0.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass75, true);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper79 = null;
        com.fasterxml.jackson.databind.JavaType javaType80 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper79, javaType80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
    }

    @Test
    public void test527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test527");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        java.lang.Throwable throwable27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        boolean boolean30 = stdKeySerializer28.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer28.isEmpty(serializerProvider31, (java.lang.Object) 1L);
        boolean boolean34 = stdKeySerializer28.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider26, throwable27, (java.lang.Object) boolean34, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test528");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer0.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer31.getDelegatee();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = stdKeySerializer14.isEmpty(serializerProvider25, (java.lang.Object) jsonNode36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer44.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass53, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer39.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass53, true);
        boolean boolean58 = stdKeySerializer14.isEmpty(serializerProvider38, (java.lang.Object) stdKeySerializer39);
        boolean boolean59 = stdKeySerializer39.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test529");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        java.lang.Object obj6 = null;
        boolean boolean7 = stdKeySerializer0.isEmpty(serializerProvider5, obj6);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer8.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = objJsonSerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = objJsonSerializer11.unwrappingSerializer(nameTransformer13);
        boolean boolean16 = objJsonSerializer11.isEmpty((java.lang.Object) true);
        boolean boolean17 = objJsonSerializer11.isUnwrappingSerializer();
        boolean boolean18 = objJsonSerializer11.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.replaceDelegatee(objJsonSerializer11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test530");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        boolean boolean11 = stdKeySerializer6.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isEmpty((java.lang.Object) boolean11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer14.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer33.unwrappingSerializer(nameTransformer76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer33.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer14.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer0.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer90 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer91 = stdKeySerializer0.unwrappingSerializer(nameTransformer90);
        java.lang.Class<java.lang.Object> objClass92 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(objJsonSerializer91);
        org.junit.Assert.assertNotNull(objClass92);
    }

    @Test
    public void test531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test531");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean6 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer8.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass22 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer13.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer13.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer13.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass40 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer31.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer31.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = stdKeySerializer13.isEmpty((java.lang.Object) wildcardClass52);
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer8.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        boolean boolean61 = stdKeySerializer58.isEmpty(serializerProvider59, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = stdKeySerializer58.unwrappingSerializer(nameTransformer63);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass67 = stdKeySerializer66.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer58.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer75.getDelegatee();
        java.lang.Class<?> wildcardClass79 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer70.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer58.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass79);
        boolean boolean82 = stdKeySerializer8.isEmpty(serializerProvider57, (java.lang.Object) stdKeySerializer58);
        java.lang.Class<java.lang.Object> objClass83 = stdKeySerializer8.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) objClass83);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        java.lang.Throwable throwable86 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer87 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider88 = null;
        boolean boolean90 = stdKeySerializer87.isEmpty(serializerProvider88, (java.lang.Object) (short) 1);
        boolean boolean91 = stdKeySerializer87.usesObjectId();
        java.lang.Class<java.lang.Object> objClass92 = stdKeySerializer87.handledType();
        java.lang.Class<java.lang.Object> objClass93 = stdKeySerializer87.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider85, throwable86, (java.lang.Object) stdKeySerializer87, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objClass92);
        org.junit.Assert.assertNotNull(objClass93);
    }

    @Test
    public void test532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test532");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper21 = null;
        com.fasterxml.jackson.databind.JavaType javaType22 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper21, javaType22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNotNull(objClass20);
    }

    @Test
    public void test533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test533");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objClass43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
    }

    @Test
    public void test534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test534");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer0.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer16.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer16.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer16.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer16.unwrappingSerializer(nameTransformer34);
        java.lang.Class<java.lang.Object> objClass36 = stdKeySerializer16.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer0.getSchema(serializerProvider15, (java.lang.reflect.Type) objClass36, true);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(objClass36);
        org.junit.Assert.assertNotNull(jsonNode38);
    }

    @Test
    public void test535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test535");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer13.handledType();
        boolean boolean19 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) stdKeySerializer13);
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer13.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer21.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer41.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass50 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer41.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer41.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = stdKeySerializer21.isEmpty(serializerProvider32, (java.lang.Object) stdKeySerializer33);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer21.handledType();
        java.lang.Class<java.lang.Object> objClass60 = stdKeySerializer21.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator61 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer63 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer13.serializeWithType((java.lang.Object) stdKeySerializer21, jsonGenerator61, serializerProvider62, typeSerializer63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertNotNull(objClass60);
    }

    @Test
    public void test536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test536");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = objJsonSerializer47.unwrappingSerializer(nameTransformer48);
        boolean boolean50 = objJsonSerializer47.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = objJsonSerializer47.isEmpty((java.lang.Object) stdKeySerializer51);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test537");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass57 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass57, false);
        boolean boolean60 = stdKeySerializer0.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer44.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        boolean boolean65 = stdKeySerializer63.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer63.isEmpty(serializerProvider66, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer70.getDelegatee();
        java.lang.Class<java.lang.Object> objClass75 = stdKeySerializer70.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer63.getSchema(serializerProvider69, (java.lang.reflect.Type) objClass75, true);
        boolean boolean78 = stdKeySerializer44.isEmpty((java.lang.Object) true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNotNull(objClass75);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test538");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer33.getDelegatee();
        boolean boolean35 = stdKeySerializer33.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer33.isEmpty(serializerProvider36, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer33.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = stdKeySerializer0.isEmpty((java.lang.Object) serializerProvider39);
        boolean boolean53 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test539");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer8.getDelegatee();
        boolean boolean11 = stdKeySerializer8.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = objJsonSerializer19.isEmpty((java.lang.Object) stdKeySerializer20);
        java.lang.Class<?> wildcardClass45 = objJsonSerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer8.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass45, true);
        boolean boolean48 = objJsonSerializer6.isEmpty((java.lang.Object) jsonNode47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer50.getDelegatee();
        boolean boolean62 = objJsonSerializer6.isEmpty(serializerProvider49, (java.lang.Object) wildcardJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test540");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        boolean boolean14 = stdKeySerializer7.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer7.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        boolean boolean25 = objJsonSerializer24.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        boolean boolean29 = stdKeySerializer26.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = objJsonSerializer37.isEmpty((java.lang.Object) stdKeySerializer38);
        java.lang.Class<?> wildcardClass63 = objJsonSerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass63, true);
        boolean boolean66 = objJsonSerializer24.isEmpty((java.lang.Object) jsonNode65);
        boolean boolean67 = objJsonSerializer16.isEmpty(serializerProvider17, (java.lang.Object) boolean66);
        boolean boolean68 = objJsonSerializer6.isEmpty((java.lang.Object) objJsonSerializer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer69.unwrappingSerializer(nameTransformer71);
        boolean boolean73 = objJsonSerializer6.isEmpty((java.lang.Object) nameTransformer71);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = objJsonSerializer6.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
    }

    @Test
    public void test541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test541");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = objJsonSerializer6.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer34.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer34.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        java.lang.Class<java.lang.Object> objClass57 = stdKeySerializer52.handledType();
        boolean boolean59 = stdKeySerializer52.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer52.getDelegatee();
        boolean boolean61 = stdKeySerializer34.isEmpty((java.lang.Object) stdKeySerializer52);
        boolean boolean62 = objJsonSerializer33.isEmpty((java.lang.Object) stdKeySerializer34);
        java.lang.Class<java.lang.Object> objClass63 = stdKeySerializer34.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer34.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objClass57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objClass63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
    }

    @Test
    public void test542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test542");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = objJsonSerializer51.isEmpty((java.lang.Object) stdKeySerializer52);
        java.lang.Class<?> wildcardClass77 = objJsonSerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer0.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = stdKeySerializer0.unwrappingSerializer(nameTransformer79);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objClass43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
    }

    @Test
    public void test543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test543");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer5.unwrappingSerializer(nameTransformer48);
        boolean boolean50 = stdKeySerializer5.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer5.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass61);
        boolean boolean65 = stdKeySerializer0.isEmpty(serializerProvider4, (java.lang.Object) stdKeySerializer5);
        java.lang.Class<java.lang.Object> objClass66 = stdKeySerializer5.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objClass66);
    }

    @Test
    public void test544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test544");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39, true);
        boolean boolean44 = stdKeySerializer0.isEmpty(serializerProvider24, (java.lang.Object) stdKeySerializer25);
        boolean boolean45 = stdKeySerializer25.isUnwrappingSerializer();
        boolean boolean46 = stdKeySerializer25.usesObjectId();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test545");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        java.lang.Throwable throwable21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer22.unwrappingSerializer(nameTransformer27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer22.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer22.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer40.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass61);
        boolean boolean64 = stdKeySerializer22.isEmpty((java.lang.Object) wildcardClass61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer22.unwrappingSerializer(nameTransformer65);
        boolean boolean67 = stdKeySerializer22.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer80 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        boolean boolean83 = stdKeySerializer80.isEmpty(serializerProvider81, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer85 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer85.getDelegatee();
        java.lang.Class<?> wildcardClass89 = stdKeySerializer85.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode91 = stdKeySerializer80.getSchema(serializerProvider84, (java.lang.reflect.Type) wildcardClass89, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer75.getSchema(serializerProvider79, (java.lang.reflect.Type) wildcardClass89, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer69.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass89);
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer22.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass89);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider20, throwable21, (java.lang.Object) stdKeySerializer22, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(jsonNode91);
        org.junit.Assert.assertNotNull(jsonNode93);
        org.junit.Assert.assertNotNull(jsonNode94);
        org.junit.Assert.assertNotNull(jsonNode95);
    }

    @Test
    public void test546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test546");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass34, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer6.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass34, false);
        boolean boolean39 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass34);
        java.lang.Class<java.lang.Object> objClass40 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objClass40);
    }

    @Test
    public void test547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test547");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer27.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = stdKeySerializer27.isEmpty((java.lang.Object) wildcardClass66);
        java.lang.Class<java.lang.Object> objClass70 = stdKeySerializer27.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer0.getSchema(serializerProvider26, (java.lang.reflect.Type) objClass70, false);
        java.lang.Class<java.lang.Object> objClass73 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass74 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objClass70);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(objClass73);
        org.junit.Assert.assertNotNull(objClass74);
    }

    @Test
    public void test548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test548");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<?> wildcardClass8 = objJsonSerializer7.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test549");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        java.lang.Throwable throwable13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer14.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer14.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        boolean boolean40 = stdKeySerializer35.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer35.unwrappingSerializer(nameTransformer41);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer35.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        boolean boolean50 = stdKeySerializer45.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        boolean boolean57 = stdKeySerializer52.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass58 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer45.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass58, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer35.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass58, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer14.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass58, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer65.unwrappingSerializer(nameTransformer70);
        boolean boolean72 = objJsonSerializer71.usesObjectId();
        boolean boolean73 = stdKeySerializer14.isEmpty((java.lang.Object) objJsonSerializer71);
        java.lang.Class<java.lang.Object> objClass74 = stdKeySerializer14.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider12, throwable13, (java.lang.Object) stdKeySerializer14, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objClass43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objClass74);
    }

    @Test
    public void test550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test550");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        java.lang.reflect.Type type10 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode12 = stdKeySerializer0.getSchema(serializerProvider9, type10, false);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer0.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer15.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer15.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        boolean boolean24 = stdKeySerializer19.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer19.unwrappingSerializer(nameTransformer25);
        java.lang.Class<java.lang.Object> objClass27 = stdKeySerializer19.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        boolean boolean32 = stdKeySerializer29.isEmpty(serializerProvider30, (java.lang.Object) (short) 1);
        boolean boolean34 = stdKeySerializer29.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        boolean boolean41 = stdKeySerializer36.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass42 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer29.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass42, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer19.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass42, true);
        boolean boolean47 = objJsonSerializer18.isEmpty((java.lang.Object) serializerProvider28);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer0.replaceDelegatee(objJsonSerializer18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(jsonNode12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objClass27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test551");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        java.lang.Class<java.lang.Object> objClass31 = stdKeySerializer26.handledType();
        boolean boolean33 = stdKeySerializer26.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer26.unwrappingSerializer(nameTransformer34);
        java.lang.Class<?> wildcardClass36 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer0.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass36, false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objClass31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode38);
    }

    @Test
    public void test552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test552");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer27.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = stdKeySerializer27.isEmpty((java.lang.Object) wildcardClass66);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer27.unwrappingSerializer(nameTransformer70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        boolean boolean76 = stdKeySerializer73.isEmpty(serializerProvider74, (java.lang.Object) (short) 1);
        boolean boolean78 = stdKeySerializer73.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass79 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer27.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer0.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass79, true);
        boolean boolean83 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper84 = null;
        com.fasterxml.jackson.databind.JavaType javaType85 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper84, javaType85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test553");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = stdKeySerializer7.usesObjectId();
        java.lang.Class<java.lang.Object> objClass19 = stdKeySerializer7.handledType();
        boolean boolean20 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test554");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer25.unwrappingSerializer(nameTransformer27);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = objJsonSerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = objJsonSerializer28.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = objJsonSerializer31.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = objJsonSerializer41.unwrappingSerializer(nameTransformer42);
        boolean boolean44 = objJsonSerializer31.isEmpty(serializerProvider34, (java.lang.Object) objJsonSerializer41);
        boolean boolean45 = stdKeySerializer0.isEmpty(serializerProvider24, (java.lang.Object) objJsonSerializer41);
        boolean boolean46 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        boolean boolean51 = stdKeySerializer48.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        java.lang.Class<?> wildcardClass62 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer53.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        boolean boolean70 = stdKeySerializer65.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass71 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer53.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<java.lang.Object> objClass73 = stdKeySerializer53.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer75.getDelegatee();
        java.lang.Class<java.lang.Object> objClass80 = stdKeySerializer75.handledType();
        boolean boolean82 = stdKeySerializer75.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer83 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer84 = stdKeySerializer75.unwrappingSerializer(nameTransformer83);
        java.lang.Class<?> wildcardClass85 = objJsonSerializer84.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer53.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer48.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer0.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(objClass73);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNotNull(objClass80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
    }

    @Test
    public void test555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test555");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<java.lang.Object> objClass49 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        java.lang.Class<java.lang.Object> objClass58 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer0.getSchema(serializerProvider50, (java.lang.reflect.Type) objClass58, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        java.lang.Throwable throwable62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider61, throwable62, (java.lang.Object) stdKeySerializer63, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objClass49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(objClass58);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode74);
    }

    @Test
    public void test556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test556");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = objJsonSerializer51.isEmpty((java.lang.Object) stdKeySerializer52);
        java.lang.Class<?> wildcardClass77 = objJsonSerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer0.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass77);
        java.lang.Class<java.lang.Object> objClass79 = stdKeySerializer0.handledType();
        boolean boolean80 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objClass43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(objClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test557");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean26 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass27 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper29 = null;
        com.fasterxml.jackson.databind.JavaType javaType30 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper29, javaType30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objClass27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
    }

    @Test
    public void test558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test558");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean15 = stdKeySerializer0.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer17.unwrappingSerializer(nameTransformer19);
        java.lang.Class<java.lang.Object> objClass21 = stdKeySerializer17.handledType();
        boolean boolean22 = stdKeySerializer0.isEmpty(serializerProvider16, (java.lang.Object) objClass21);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer0.unwrappingSerializer(nameTransformer23);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
    }

    @Test
    public void test559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test559");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass22 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer13.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer13.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer13.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass40 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer31.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer31.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = stdKeySerializer13.isEmpty((java.lang.Object) wildcardClass52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        boolean boolean60 = stdKeySerializer57.isEmpty(serializerProvider58, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer57.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = stdKeySerializer57.usesObjectId();
        java.lang.Class<java.lang.Object> objClass69 = stdKeySerializer57.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        boolean boolean73 = stdKeySerializer70.isEmpty(serializerProvider71, (java.lang.Object) (short) 1);
        boolean boolean75 = stdKeySerializer70.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer70.unwrappingSerializer(nameTransformer76);
        boolean boolean78 = stdKeySerializer57.isEmpty((java.lang.Object) objJsonSerializer77);
        java.lang.Class<?> wildcardClass79 = objJsonSerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer13.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass79, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer13.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer0.getSchema(serializerProvider12, (java.lang.reflect.Type) objClass82);
        java.lang.Class<java.lang.Object> objClass84 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objClass69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertNotNull(objClass84);
    }

    @Test
    public void test560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test560");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer8.getDelegatee();
        boolean boolean11 = stdKeySerializer8.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = objJsonSerializer19.isEmpty((java.lang.Object) stdKeySerializer20);
        java.lang.Class<?> wildcardClass45 = objJsonSerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer8.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass45, true);
        boolean boolean48 = objJsonSerializer6.isEmpty((java.lang.Object) jsonNode47);
        boolean boolean49 = objJsonSerializer6.usesObjectId();
        boolean boolean50 = objJsonSerializer6.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test561");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer0.unwrappingSerializer(nameTransformer92);
        java.lang.Object obj94 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator95 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize(obj94, jsonGenerator95, serializerProvider96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
    }

    @Test
    public void test562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test562");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        boolean boolean65 = stdKeySerializer60.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer66.getDelegatee();
        boolean boolean71 = stdKeySerializer66.isUnwrappingSerializer();
        boolean boolean72 = stdKeySerializer60.isEmpty((java.lang.Object) boolean71);
        java.lang.Class<?> wildcardClass73 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer0.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<java.lang.Object> objClass75 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        java.lang.Throwable throwable77 = null;
        java.lang.Object obj78 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider76, throwable77, obj78, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(objClass75);
    }

    @Test
    public void test563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test563");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<java.lang.Object> objClass49 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer50.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass63, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        boolean boolean71 = stdKeySerializer50.isEmpty(serializerProvider66, (java.lang.Object) stdKeySerializer67);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator72 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer74 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) stdKeySerializer67, jsonGenerator72, serializerProvider73, typeSerializer74);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objClass49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test564");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        boolean boolean26 = stdKeySerializer21.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer21.unwrappingSerializer(nameTransformer27);
        java.lang.Class<java.lang.Object> objClass29 = stdKeySerializer21.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        boolean boolean36 = stdKeySerializer31.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        boolean boolean43 = stdKeySerializer38.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass44 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer31.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass44, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer21.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass44, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer0.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass44, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        boolean boolean58 = objJsonSerializer57.usesObjectId();
        boolean boolean59 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer57);
        boolean boolean60 = objJsonSerializer57.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objClass29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test565");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass33, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean37 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer43.getDelegatee();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        boolean boolean55 = stdKeySerializer50.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass56 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        java.lang.reflect.Type type60 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider59, type60);
        boolean boolean62 = stdKeySerializer12.isEmpty((java.lang.Object) type60);
        java.lang.Object obj63 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator64 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer66 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer12.serializeWithType(obj63, jsonGenerator64, serializerProvider65, typeSerializer66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test566");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean15 = stdKeySerializer0.isEmpty((java.lang.Object) 1.0d);
        boolean boolean16 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer17.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass26 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer17.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer17.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer17.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = stdKeySerializer17.isEmpty((java.lang.Object) wildcardClass56);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer17.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer17.unwrappingSerializer(nameTransformer62);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = stdKeySerializer0.replaceDelegatee(objJsonSerializer63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
    }

    @Test
    public void test567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test567");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<java.lang.Object> objClass1 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider2 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer3 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        boolean boolean6 = stdKeySerializer3.isEmpty(serializerProvider4, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer3.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass12 = stdKeySerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode13 = stdKeySerializer3.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer3.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer3.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer21.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer21.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer38.getDelegatee();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer21.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = stdKeySerializer3.isEmpty((java.lang.Object) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        boolean boolean52 = stdKeySerializer47.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer47.unwrappingSerializer(nameTransformer53);
        java.lang.Class<java.lang.Object> objClass55 = stdKeySerializer47.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        boolean boolean60 = stdKeySerializer57.isEmpty(serializerProvider58, (java.lang.Object) (short) 1);
        boolean boolean62 = stdKeySerializer57.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        boolean boolean67 = stdKeySerializer64.isEmpty(serializerProvider65, (java.lang.Object) (short) 1);
        boolean boolean69 = stdKeySerializer64.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass70 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer57.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass70, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer47.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass70, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer3.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass70);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer0.getSchema(serializerProvider2, (java.lang.reflect.Type) wildcardClass70, false);
        java.lang.Class<?> wildcardClass78 = jsonNode77.getClass();
        org.junit.Assert.assertNotNull(objClass1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(jsonNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(objClass55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test568");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        boolean boolean65 = stdKeySerializer60.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer66.getDelegatee();
        boolean boolean71 = stdKeySerializer66.isUnwrappingSerializer();
        boolean boolean72 = stdKeySerializer60.isEmpty((java.lang.Object) boolean71);
        java.lang.Class<?> wildcardClass73 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer0.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<java.lang.Object> objClass75 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass76 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer81 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer81.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer81.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer81.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer81.getDelegatee();
        java.lang.Class<java.lang.Object> objClass86 = stdKeySerializer81.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer77.getSchema(serializerProvider80, (java.lang.reflect.Type) objClass86, true);
        boolean boolean89 = stdKeySerializer77.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer90 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider91 = null;
        boolean boolean93 = stdKeySerializer90.isEmpty(serializerProvider91, (java.lang.Object) (short) 1);
        boolean boolean94 = stdKeySerializer90.usesObjectId();
        boolean boolean95 = stdKeySerializer90.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer96 = stdKeySerializer90.getDelegatee();
        boolean boolean97 = stdKeySerializer77.isEmpty((java.lang.Object) wildcardJsonSerializer96);
        boolean boolean98 = stdKeySerializer77.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer99 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer77);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(objClass75);
        org.junit.Assert.assertNotNull(objClass76);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNotNull(objClass86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test569");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer0.unwrappingSerializer(nameTransformer92);
        java.lang.Class<java.lang.Object> objClass94 = stdKeySerializer0.handledType();
        java.lang.Object obj95 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator96 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider97 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer98 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType(obj95, jsonGenerator96, serializerProvider97, typeSerializer98);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertNotNull(objClass94);
    }

    @Test
    public void test570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test570");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer17.handledType();
        boolean boolean24 = stdKeySerializer17.isEmpty((java.lang.Object) 0);
        boolean boolean25 = stdKeySerializer0.isEmpty((java.lang.Object) boolean24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        boolean boolean42 = stdKeySerializer39.isEmpty(serializerProvider40, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer44 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = stdKeySerializer39.unwrappingSerializer(nameTransformer44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer47.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer47.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer39.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass60);
        boolean boolean64 = stdKeySerializer27.isEmpty(serializerProvider38, (java.lang.Object) stdKeySerializer39);
        java.lang.Class<?> wildcardClass65 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer0.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass65, true);
        boolean boolean68 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        java.lang.Throwable throwable70 = null;
        java.lang.Object obj71 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider69, throwable70, obj71, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test571");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer0.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.reflect.Type type24 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer0.getSchema(serializerProvider23, type24, false);
        java.lang.Class<java.lang.Object> objClass27 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(objClass27);
    }

    @Test
    public void test572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test572");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean6 = stdKeySerializer0.usesObjectId();
        java.lang.Object obj7 = null;
        boolean boolean8 = stdKeySerializer0.isEmpty(obj7);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test573");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer21.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        boolean boolean31 = stdKeySerializer28.isEmpty(serializerProvider29, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer28.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer28.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = objJsonSerializer27.isEmpty((java.lang.Object) stdKeySerializer28);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = objJsonSerializer27.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        boolean boolean58 = stdKeySerializer55.isEmpty(serializerProvider56, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer55.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass64 = stdKeySerializer63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer55.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer55.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass68, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer55.unwrappingSerializer(nameTransformer71);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer73.getDelegatee();
        java.lang.Class<java.lang.Object> objClass78 = stdKeySerializer73.handledType();
        boolean boolean80 = stdKeySerializer73.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer73.getDelegatee();
        boolean boolean82 = stdKeySerializer55.isEmpty((java.lang.Object) stdKeySerializer73);
        boolean boolean83 = objJsonSerializer54.isEmpty((java.lang.Object) stdKeySerializer55);
        java.lang.Class<java.lang.Object> objClass84 = stdKeySerializer55.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer0.getSchema(serializerProvider20, (java.lang.reflect.Type) objClass84, true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNotNull(objClass78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objClass84);
        org.junit.Assert.assertNotNull(jsonNode86);
    }

    @Test
    public void test574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test574");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39, true);
        boolean boolean44 = stdKeySerializer0.isEmpty(serializerProvider24, (java.lang.Object) stdKeySerializer25);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass58, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer45.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = stdKeySerializer45.unwrappingSerializer(nameTransformer63);
        boolean boolean65 = stdKeySerializer25.isEmpty((java.lang.Object) stdKeySerializer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        java.lang.Throwable throwable67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        boolean boolean76 = stdKeySerializer73.isEmpty(serializerProvider74, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        java.lang.Class<?> wildcardClass82 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer73.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass82, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer68.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass82, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider87 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer88 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider89 = null;
        boolean boolean91 = stdKeySerializer88.isEmpty(serializerProvider89, (java.lang.Object) (short) 1);
        boolean boolean93 = stdKeySerializer88.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass94 = stdKeySerializer88.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer68.getSchema(serializerProvider87, (java.lang.reflect.Type) wildcardClass94);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer25.wrapAndThrow(serializerProvider66, throwable67, (java.lang.Object) stdKeySerializer68, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(jsonNode95);
    }

    @Test
    public void test575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test575");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass6 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objClass6);
    }

    @Test
    public void test576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test576");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        java.lang.Class<java.lang.Object> objClass23 = stdKeySerializer18.handledType();
        boolean boolean25 = stdKeySerializer18.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer18.getDelegatee();
        boolean boolean27 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer18);
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objClass23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objClass28);
    }

    @Test
    public void test577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test577");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = objJsonSerializer6.unwrappingSerializer(nameTransformer7);
        boolean boolean9 = objJsonSerializer8.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test578");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer50.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = stdKeySerializer0.isEmpty(serializerProvider49, (java.lang.Object) stdKeySerializer50);
        java.lang.Class<java.lang.Object> objClass75 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper77 = null;
        com.fasterxml.jackson.databind.JavaType javaType78 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper77, javaType78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objClass75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
    }

    @Test
    public void test579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test579");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        java.lang.Class<java.lang.Object> objClass25 = stdKeySerializer7.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) objClass25);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(objClass25);
        org.junit.Assert.assertNotNull(jsonNode26);
    }

    @Test
    public void test580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test580");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        boolean boolean14 = stdKeySerializer7.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer7.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        boolean boolean25 = objJsonSerializer24.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        boolean boolean29 = stdKeySerializer26.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = objJsonSerializer37.isEmpty((java.lang.Object) stdKeySerializer38);
        java.lang.Class<?> wildcardClass63 = objJsonSerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass63, true);
        boolean boolean66 = objJsonSerializer24.isEmpty((java.lang.Object) jsonNode65);
        boolean boolean67 = objJsonSerializer16.isEmpty(serializerProvider17, (java.lang.Object) boolean66);
        boolean boolean68 = objJsonSerializer6.isEmpty((java.lang.Object) objJsonSerializer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        boolean boolean72 = stdKeySerializer69.isUnwrappingSerializer();
        boolean boolean73 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer69);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper74 = null;
        com.fasterxml.jackson.databind.JavaType javaType75 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer69.acceptJsonFormatVisitor(jsonFormatVisitorWrapper74, javaType75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test581");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer13.unwrappingSerializer(nameTransformer19);
        boolean boolean21 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass23 = stdKeySerializer0.handledType();
        java.lang.Class<?> wildcardClass24 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test582");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        java.lang.Class<java.lang.Object> objClass7 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objClass7);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
    }

    @Test
    public void test583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test583");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer17.handledType();
        boolean boolean24 = stdKeySerializer17.isEmpty((java.lang.Object) 0);
        boolean boolean25 = stdKeySerializer0.isEmpty((java.lang.Object) boolean24);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer31.getDelegatee();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass35, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer38.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        java.lang.Class<?> wildcardClass77 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer68.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer56.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = stdKeySerializer38.isEmpty((java.lang.Object) wildcardClass77);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer81 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer82 = stdKeySerializer38.unwrappingSerializer(nameTransformer81);
        boolean boolean83 = stdKeySerializer26.isEmpty((java.lang.Object) stdKeySerializer38);
        boolean boolean84 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer38);
        java.lang.Class<?> wildcardClass85 = stdKeySerializer38.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test584");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass13 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer15.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer15.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer19.getDelegatee();
        java.lang.Class<java.lang.Object> objClass24 = stdKeySerializer19.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer15.getSchema(serializerProvider18, (java.lang.reflect.Type) objClass24, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer15.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer29.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer15.getSchema(serializerProvider28, (java.lang.reflect.Type) objClass33, false);
        boolean boolean36 = stdKeySerializer0.isEmpty(serializerProvider14, (java.lang.Object) objClass33);
        java.lang.Class<java.lang.Object> objClass37 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass38 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer44.getDelegatee();
        java.lang.Class<?> wildcardClass48 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer39.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass57 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer39.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = stdKeySerializer39.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer39.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        java.lang.reflect.Type type63 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer39.getSchema(serializerProvider62, type63, false);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator66 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer68 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) type63, jsonGenerator66, serializerProvider67, typeSerializer68);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objClass13);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(objClass24);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objClass37);
        org.junit.Assert.assertNotNull(objClass38);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(jsonNode65);
    }

    @Test
    public void test585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test585");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        boolean boolean58 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        boolean boolean65 = stdKeySerializer60.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        boolean boolean70 = stdKeySerializer67.isEmpty(serializerProvider68, (java.lang.Object) (short) 1);
        boolean boolean72 = stdKeySerializer67.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass73 = stdKeySerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer60.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass73, false);
        boolean boolean76 = stdKeySerializer0.isEmpty(serializerProvider59, (java.lang.Object) stdKeySerializer60);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer0.getDelegatee();
        boolean boolean78 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test586");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer13.usesObjectId();
        boolean boolean18 = stdKeySerializer13.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer13.getDelegatee();
        boolean boolean20 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardJsonSerializer19);
        boolean boolean21 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper23 = null;
        com.fasterxml.jackson.databind.JavaType javaType24 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper23, javaType24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objClass22);
    }

    @Test
    public void test587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test587");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39, true);
        boolean boolean44 = stdKeySerializer0.isEmpty(serializerProvider24, (java.lang.Object) stdKeySerializer25);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass58, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer45.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = stdKeySerializer45.unwrappingSerializer(nameTransformer63);
        boolean boolean65 = stdKeySerializer25.isEmpty((java.lang.Object) stdKeySerializer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        boolean boolean70 = stdKeySerializer67.isEmpty(serializerProvider68, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer67.unwrappingSerializer(nameTransformer72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass76 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer67.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer67.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass80, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer25.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass80);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode83);
    }

    @Test
    public void test588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test588");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer0.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.reflect.Type type24 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer0.getSchema(serializerProvider23, type24, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        java.lang.Class<java.lang.Object> objClass32 = stdKeySerializer27.handledType();
        boolean boolean34 = stdKeySerializer27.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer27.unwrappingSerializer(nameTransformer35);
        java.lang.Class<java.lang.Object> objClass37 = stdKeySerializer27.handledType();
        boolean boolean38 = stdKeySerializer27.isUnwrappingSerializer();
        boolean boolean39 = stdKeySerializer27.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(objClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test589");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        boolean boolean21 = stdKeySerializer0.isEmpty(serializerProvider16, (java.lang.Object) stdKeySerializer17);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        boolean boolean27 = stdKeySerializer22.isEmpty((java.lang.Object) (-1L));
        boolean boolean28 = stdKeySerializer0.isEmpty((java.lang.Object) boolean27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        boolean boolean33 = stdKeySerializer30.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer42.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer54.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass63);
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer42.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass63);
        boolean boolean66 = objJsonSerializer41.isEmpty((java.lang.Object) stdKeySerializer42);
        java.lang.Class<?> wildcardClass67 = objJsonSerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer0.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass67);
        boolean boolean72 = stdKeySerializer0.isEmpty((java.lang.Object) (short) 10);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper73 = null;
        com.fasterxml.jackson.databind.JavaType javaType74 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper73, javaType74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test590");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = objJsonSerializer6.unwrappingSerializer(nameTransformer7);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = objJsonSerializer8.unwrappingSerializer(nameTransformer9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
    }

    @Test
    public void test591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test591");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        boolean boolean8 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = objJsonSerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = objJsonSerializer6.unwrappingSerializer(nameTransformer10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
    }

    @Test
    public void test592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test592");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        boolean boolean26 = stdKeySerializer21.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer21.unwrappingSerializer(nameTransformer27);
        java.lang.Class<java.lang.Object> objClass29 = stdKeySerializer21.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        boolean boolean36 = stdKeySerializer31.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        boolean boolean43 = stdKeySerializer38.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass44 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer31.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass44, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer21.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass44, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer0.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass44, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        boolean boolean58 = objJsonSerializer57.usesObjectId();
        boolean boolean59 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer57);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer0.unwrappingSerializer(nameTransformer60);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objClass29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
    }

    @Test
    public void test593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test593");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer26.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = stdKeySerializer21.isEmpty((java.lang.Object) jsonNode36);
        boolean boolean38 = stdKeySerializer0.isEmpty(serializerProvider20, (java.lang.Object) boolean37);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer0.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer0.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
    }

    @Test
    public void test594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test594");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer41.handledType();
        boolean boolean48 = stdKeySerializer41.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer41.unwrappingSerializer(nameTransformer49);
        boolean boolean51 = stdKeySerializer0.isEmpty(serializerProvider40, (java.lang.Object) stdKeySerializer41);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer0.unwrappingSerializer(nameTransformer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
    }

    @Test
    public void test595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test595");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer31.getDelegatee();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass35);
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = objJsonSerializer13.isEmpty((java.lang.Object) stdKeySerializer14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer40.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer40.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        boolean boolean61 = stdKeySerializer58.isEmpty(serializerProvider59, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = stdKeySerializer58.unwrappingSerializer(nameTransformer63);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass67 = stdKeySerializer66.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer58.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer75.getDelegatee();
        java.lang.Class<?> wildcardClass79 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer70.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer58.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass79);
        boolean boolean82 = stdKeySerializer40.isEmpty((java.lang.Object) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer14.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass79, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass79, false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode86);
    }

    @Test
    public void test596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test596");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        boolean boolean19 = stdKeySerializer14.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        boolean boolean26 = stdKeySerializer21.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass27 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass27, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer31.getDelegatee();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer14.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass35);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer14.unwrappingSerializer(nameTransformer37);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
    }

    @Test
    public void test597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test597");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer0.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = objJsonSerializer46.unwrappingSerializer(nameTransformer47);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
    }

    @Test
    public void test598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test598");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider92 = null;
        java.lang.reflect.Type type93 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer44.getSchema(serializerProvider92, type93);
        java.lang.Class<java.lang.Object> objClass95 = stdKeySerializer44.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(jsonNode94);
        org.junit.Assert.assertNotNull(objClass95);
    }

    @Test
    public void test599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test599");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        boolean boolean25 = stdKeySerializer20.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass26 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        boolean boolean32 = stdKeySerializer29.isEmpty(serializerProvider30, (java.lang.Object) (short) 1);
        boolean boolean33 = stdKeySerializer29.usesObjectId();
        java.lang.Class<java.lang.Object> objClass34 = stdKeySerializer29.handledType();
        java.lang.Class<java.lang.Object> objClass35 = stdKeySerializer29.handledType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objClass34);
        org.junit.Assert.assertNotNull(objClass35);
    }

    @Test
    public void test600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test600");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass13 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass14 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objClass13);
        org.junit.Assert.assertNotNull(objClass14);
    }

    @Test
    public void test601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test601");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer7.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = stdKeySerializer35.usesObjectId();
        java.lang.Class<java.lang.Object> objClass47 = stdKeySerializer35.handledType();
        boolean boolean48 = stdKeySerializer35.isUnwrappingSerializer();
        boolean boolean50 = stdKeySerializer35.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer52.unwrappingSerializer(nameTransformer54);
        java.lang.Class<java.lang.Object> objClass56 = stdKeySerializer52.handledType();
        boolean boolean57 = stdKeySerializer35.isEmpty(serializerProvider51, (java.lang.Object) objClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer7.getSchema(serializerProvider34, (java.lang.reflect.Type) objClass56, false);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper60 = null;
        com.fasterxml.jackson.databind.JavaType javaType61 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer7.acceptJsonFormatVisitor(jsonFormatVisitorWrapper60, javaType61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(objClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jsonNode59);
    }

    @Test
    public void test602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test602");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        boolean boolean14 = stdKeySerializer9.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        boolean boolean21 = stdKeySerializer16.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass22 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer9.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass22, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer9.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider8, (java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer0.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = objJsonSerializer35.unwrappingSerializer(nameTransformer36);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
    }

    @Test
    public void test603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test603");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = stdKeySerializer56.usesObjectId();
        java.lang.Class<java.lang.Object> objClass68 = stdKeySerializer56.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        boolean boolean74 = stdKeySerializer69.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = stdKeySerializer69.unwrappingSerializer(nameTransformer75);
        boolean boolean77 = stdKeySerializer56.isEmpty((java.lang.Object) objJsonSerializer76);
        java.lang.Class<?> wildcardClass78 = objJsonSerializer76.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer12.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass78, false);
        boolean boolean81 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) wildcardClass78);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider82 = null;
        java.lang.Object obj83 = null;
        boolean boolean84 = stdKeySerializer0.isEmpty(serializerProvider82, obj83);
        boolean boolean85 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objClass68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test604");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass33, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean37 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) stdKeySerializer12);
        java.lang.Class<java.lang.Object> objClass38 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = stdKeySerializer40.usesObjectId();
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer40.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        boolean boolean56 = stdKeySerializer53.isEmpty(serializerProvider54, (java.lang.Object) (short) 1);
        boolean boolean58 = stdKeySerializer53.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer53.unwrappingSerializer(nameTransformer59);
        boolean boolean61 = stdKeySerializer40.isEmpty((java.lang.Object) objJsonSerializer60);
        java.lang.Class<?> wildcardClass62 = objJsonSerializer60.getClass();
        boolean boolean63 = stdKeySerializer0.isEmpty(serializerProvider39, (java.lang.Object) wildcardClass62);
        java.lang.Class<java.lang.Object> objClass64 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objClass38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objClass64);
    }

    @Test
    public void test605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test605");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer34.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer34.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = stdKeySerializer34.isEmpty((java.lang.Object) wildcardClass73);
        java.lang.Class<java.lang.Object> objClass77 = stdKeySerializer34.handledType();
        boolean boolean78 = stdKeySerializer0.isEmpty(serializerProvider33, (java.lang.Object) objClass77);
        boolean boolean79 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        java.lang.Throwable throwable81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        boolean boolean85 = stdKeySerializer82.isEmpty(serializerProvider83, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer82.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider80, throwable81, (java.lang.Object) stdKeySerializer82, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
    }

    @Test
    public void test606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test606");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer3 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        boolean boolean6 = stdKeySerializer3.isEmpty(serializerProvider4, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer3.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass12 = stdKeySerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode13 = stdKeySerializer3.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer3.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer3.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer3.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer24.isEmpty(serializerProvider25, (java.lang.Object) (short) 1);
        boolean boolean29 = stdKeySerializer24.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer24.unwrappingSerializer(nameTransformer30);
        java.lang.Class<java.lang.Object> objClass32 = stdKeySerializer24.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        boolean boolean39 = stdKeySerializer34.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        boolean boolean46 = stdKeySerializer41.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass47 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer34.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass47, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer24.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass47, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer3.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass47, false);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator54 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer56 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) wildcardClass47, jsonGenerator54, serializerProvider55, typeSerializer56);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(jsonNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(objClass32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNotNull(jsonNode53);
    }

    @Test
    public void test607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test607");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        java.lang.Object obj6 = null;
        boolean boolean7 = stdKeySerializer0.isEmpty(serializerProvider5, obj6);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = stdKeySerializer9.unwrappingSerializer(nameTransformer14);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer16.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer33.getDelegatee();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer16.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = objJsonSerializer15.isEmpty((java.lang.Object) stdKeySerializer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer42.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer42.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass55, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer42.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        java.lang.Class<?> wildcardClass81 = stdKeySerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer72.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer60.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = stdKeySerializer42.isEmpty((java.lang.Object) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer16.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass81, false);
        boolean boolean87 = stdKeySerializer0.isEmpty(serializerProvider8, (java.lang.Object) stdKeySerializer16);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
    }

    @Test
    public void test608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test608");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        java.lang.Class<java.lang.Object> objClass4 = stdKeySerializer0.handledType();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer6.unwrappingSerializer(nameTransformer24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        boolean boolean32 = stdKeySerializer27.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer27.unwrappingSerializer(nameTransformer33);
        java.lang.Class<java.lang.Object> objClass35 = stdKeySerializer27.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        boolean boolean42 = stdKeySerializer37.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass50 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer37.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass50, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer27.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass50, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer6.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass50, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        boolean boolean60 = stdKeySerializer57.isEmpty(serializerProvider58, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer57.unwrappingSerializer(nameTransformer62);
        boolean boolean64 = objJsonSerializer63.usesObjectId();
        boolean boolean65 = stdKeySerializer6.isEmpty((java.lang.Object) objJsonSerializer63);
        java.lang.Class<java.lang.Object> objClass66 = stdKeySerializer6.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer6.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator69 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objJsonSerializer68, jsonGenerator69, serializerProvider70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(objClass35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objClass66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
    }

    @Test
    public void test609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test609");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<java.lang.Object> objClass11 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean16 = stdKeySerializer12.usesObjectId();
        boolean boolean17 = stdKeySerializer12.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(objClass11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test610");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39, true);
        boolean boolean44 = stdKeySerializer0.isEmpty(serializerProvider24, (java.lang.Object) stdKeySerializer25);
        boolean boolean45 = stdKeySerializer25.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        java.lang.Throwable throwable47 = null;
        java.lang.Object obj48 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer25.wrapAndThrow(serializerProvider46, throwable47, obj48, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test611");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer0.unwrappingSerializer(nameTransformer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
    }

    @Test
    public void test612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test612");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        boolean boolean14 = stdKeySerializer7.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer7.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        boolean boolean25 = objJsonSerializer24.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        boolean boolean29 = stdKeySerializer26.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = objJsonSerializer37.isEmpty((java.lang.Object) stdKeySerializer38);
        java.lang.Class<?> wildcardClass63 = objJsonSerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass63, true);
        boolean boolean66 = objJsonSerializer24.isEmpty((java.lang.Object) jsonNode65);
        boolean boolean67 = objJsonSerializer16.isEmpty(serializerProvider17, (java.lang.Object) boolean66);
        boolean boolean68 = objJsonSerializer6.isEmpty((java.lang.Object) objJsonSerializer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer69 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = objJsonSerializer6.unwrappingSerializer(nameTransformer69);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer75.getDelegatee();
        java.lang.Class<java.lang.Object> objClass80 = stdKeySerializer75.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer71.getSchema(serializerProvider74, (java.lang.reflect.Type) objClass80, true);
        boolean boolean83 = objJsonSerializer6.isEmpty((java.lang.Object) true);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNotNull(objClass80);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test613");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider2 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer3 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer3.getDelegatee();
        java.lang.Class<java.lang.Object> objClass7 = stdKeySerializer3.handledType();
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer3.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode9 = stdKeySerializer0.getSchema(serializerProvider2, (java.lang.reflect.Type) objClass8);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper10 = null;
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper10, javaType11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNotNull(objClass7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(jsonNode9);
    }

    @Test
    public void test614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test614");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer17.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass26 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer17.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer17.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer17.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = stdKeySerializer17.isEmpty((java.lang.Object) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer0.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean61 = stdKeySerializer0.usesObjectId();
        boolean boolean62 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass63 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer64 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = stdKeySerializer0.unwrappingSerializer(nameTransformer64);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objClass63);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
    }

    @Test
    public void test615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test615");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        boolean boolean46 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        java.lang.Class<java.lang.Object> objClass57 = stdKeySerializer52.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer48.getSchema(serializerProvider51, (java.lang.reflect.Type) objClass57, true);
        java.lang.Class<?> wildcardClass60 = jsonNode59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer0.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
    }

    @Test
    public void test616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test616");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer0.unwrappingSerializer(nameTransformer92);
        boolean boolean94 = stdKeySerializer0.usesObjectId();
        boolean boolean95 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test617");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        boolean boolean14 = stdKeySerializer7.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer7.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        boolean boolean25 = objJsonSerializer24.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        boolean boolean29 = stdKeySerializer26.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = objJsonSerializer37.isEmpty((java.lang.Object) stdKeySerializer38);
        java.lang.Class<?> wildcardClass63 = objJsonSerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass63, true);
        boolean boolean66 = objJsonSerializer24.isEmpty((java.lang.Object) jsonNode65);
        boolean boolean67 = objJsonSerializer16.isEmpty(serializerProvider17, (java.lang.Object) boolean66);
        boolean boolean68 = objJsonSerializer6.isEmpty((java.lang.Object) objJsonSerializer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        boolean boolean72 = stdKeySerializer69.isUnwrappingSerializer();
        boolean boolean73 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer69);
        java.lang.Class<java.lang.Object> objClass74 = stdKeySerializer69.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objClass74);
    }

    @Test
    public void test618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test618");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<java.lang.Object> objClass25 = stdKeySerializer5.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        java.lang.Class<java.lang.Object> objClass32 = stdKeySerializer27.handledType();
        boolean boolean34 = stdKeySerializer27.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer27.unwrappingSerializer(nameTransformer35);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer5.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, false);
        java.lang.Class<java.lang.Object> objClass41 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(objClass25);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(objClass41);
    }

    @Test
    public void test619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test619");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer7.unwrappingSerializer(nameTransformer32);
        java.lang.Class<?> wildcardClass34 = stdKeySerializer7.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test620");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = objJsonSerializer17.unwrappingSerializer(nameTransformer18);
        boolean boolean20 = objJsonSerializer19.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test621");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer21.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        boolean boolean31 = stdKeySerializer28.isEmpty(serializerProvider29, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer28.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer28.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = objJsonSerializer27.isEmpty((java.lang.Object) stdKeySerializer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer54.unwrappingSerializer(nameTransformer59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer54.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass63);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer54.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass67, true);
        boolean boolean70 = stdKeySerializer28.isEmpty(serializerProvider53, (java.lang.Object) serializerProvider65);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        boolean boolean74 = stdKeySerializer71.isEmpty(serializerProvider72, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer71.unwrappingSerializer(nameTransformer76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass80 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer71.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = stdKeySerializer71.usesObjectId();
        java.lang.Class<java.lang.Object> objClass83 = stdKeySerializer71.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        boolean boolean87 = stdKeySerializer84.isEmpty(serializerProvider85, (java.lang.Object) (short) 1);
        boolean boolean89 = stdKeySerializer84.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer90 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer91 = stdKeySerializer84.unwrappingSerializer(nameTransformer90);
        boolean boolean92 = stdKeySerializer71.isEmpty((java.lang.Object) objJsonSerializer91);
        boolean boolean93 = stdKeySerializer28.isEmpty((java.lang.Object) objJsonSerializer91);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator94 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider95 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) objJsonSerializer91, jsonGenerator94, serializerProvider95, typeSerializer96);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objClass83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test622");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer0.unwrappingSerializer(nameTransformer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
    }

    @Test
    public void test623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test623");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        java.lang.Throwable throwable5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass22 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer13.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer13.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = objJsonSerializer12.isEmpty((java.lang.Object) stdKeySerializer13);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = objJsonSerializer12.unwrappingSerializer(nameTransformer38);
        boolean boolean40 = objJsonSerializer12.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = objJsonSerializer12.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        boolean boolean46 = stdKeySerializer43.isEmpty(serializerProvider44, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer43.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer43.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass56, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer43.unwrappingSerializer(nameTransformer59);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer43.unwrappingSerializer(nameTransformer61);
        boolean boolean63 = objJsonSerializer12.isEmpty((java.lang.Object) objJsonSerializer62);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider4, throwable5, (java.lang.Object) objJsonSerializer62, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test624");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass38, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer25.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        boolean boolean46 = stdKeySerializer43.isEmpty(serializerProvider44, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer43.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        java.lang.Class<?> wildcardClass64 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer55.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer43.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = stdKeySerializer25.isEmpty((java.lang.Object) wildcardClass64);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator68 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer70 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) boolean67, jsonGenerator68, serializerProvider69, typeSerializer70);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test625");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        boolean boolean17 = stdKeySerializer12.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer18.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer18.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46, false);
        boolean boolean51 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean53 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        boolean boolean58 = stdKeySerializer55.isEmpty(serializerProvider56, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer55.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass64 = stdKeySerializer63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer55.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        java.lang.Class<?> wildcardClass76 = stdKeySerializer72.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer67.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass76);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer55.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer55.getSchema(serializerProvider79, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer83 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer83.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer83.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer83.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer83.getDelegatee();
        java.lang.Class<java.lang.Object> objClass88 = stdKeySerializer83.handledType();
        boolean boolean90 = stdKeySerializer83.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer91 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer92 = stdKeySerializer83.unwrappingSerializer(nameTransformer91);
        java.lang.Class<java.lang.Object> objClass93 = stdKeySerializer83.handledType();
        boolean boolean94 = stdKeySerializer55.isEmpty((java.lang.Object) stdKeySerializer83);
        java.lang.Class<?> wildcardClass95 = stdKeySerializer83.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode96 = stdKeySerializer0.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNotNull(objClass88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer92);
        org.junit.Assert.assertNotNull(objClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(jsonNode96);
    }

    @Test
    public void test626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test626");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        boolean boolean25 = stdKeySerializer20.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass26 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer13.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass26, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer30.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        boolean boolean51 = stdKeySerializer48.isEmpty(serializerProvider49, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer48.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer65.getDelegatee();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer48.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass69);
        boolean boolean72 = stdKeySerializer30.isEmpty((java.lang.Object) wildcardClass69);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer13.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass69);
        boolean boolean74 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) serializerProvider29);
        boolean boolean75 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        boolean boolean85 = stdKeySerializer82.isEmpty(serializerProvider83, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer87 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer87.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer89 = stdKeySerializer87.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = stdKeySerializer87.getDelegatee();
        java.lang.Class<?> wildcardClass91 = stdKeySerializer87.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer82.getSchema(serializerProvider86, (java.lang.reflect.Type) wildcardClass91, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer77.getSchema(serializerProvider81, (java.lang.reflect.Type) wildcardClass91, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode97 = stdKeySerializer0.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass91, false);
        boolean boolean98 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean99 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNull(wildcardJsonSerializer89);
        org.junit.Assert.assertNull(wildcardJsonSerializer90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(jsonNode93);
        org.junit.Assert.assertNotNull(jsonNode95);
        org.junit.Assert.assertNotNull(jsonNode97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test627");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer41.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass50 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer41.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        java.lang.Class<?> wildcardClass62 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer53.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass62);
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer41.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = objJsonSerializer40.isEmpty((java.lang.Object) stdKeySerializer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        boolean boolean70 = stdKeySerializer67.isEmpty(serializerProvider68, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer67.unwrappingSerializer(nameTransformer72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        boolean boolean78 = stdKeySerializer75.isEmpty(serializerProvider76, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer80 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer81 = stdKeySerializer75.unwrappingSerializer(nameTransformer80);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider82 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer83 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass84 = stdKeySerializer83.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer75.getSchema(serializerProvider82, (java.lang.reflect.Type) wildcardClass84);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer75.getSchema(serializerProvider86, (java.lang.reflect.Type) wildcardClass88, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode91 = stdKeySerializer67.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass88);
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer41.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass88, true);
        boolean boolean94 = stdKeySerializer0.isEmpty(serializerProvider33, (java.lang.Object) serializerProvider66);
        boolean boolean95 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNotNull(objJsonSerializer81);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode91);
        org.junit.Assert.assertNotNull(jsonNode93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test628");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass7 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        java.lang.Throwable throwable9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        boolean boolean24 = stdKeySerializer19.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        boolean boolean31 = stdKeySerializer26.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass32 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer19.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass32, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer36.getDelegatee();
        java.lang.Class<?> wildcardClass40 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer19.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass40);
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer10.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass40);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider8, throwable9, (java.lang.Object) wildcardClass40, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNotNull(objClass7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(jsonNode42);
    }

    @Test
    public void test629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test629");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer1 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer2 = stdKeySerializer0.unwrappingSerializer(nameTransformer1);
        org.junit.Assert.assertNotNull(objJsonSerializer2);
    }

    @Test
    public void test630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test630");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer27.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = stdKeySerializer27.isEmpty((java.lang.Object) wildcardClass66);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer27.unwrappingSerializer(nameTransformer70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        boolean boolean76 = stdKeySerializer73.isEmpty(serializerProvider74, (java.lang.Object) (short) 1);
        boolean boolean78 = stdKeySerializer73.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass79 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer27.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer0.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass79, true);
        boolean boolean83 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test631");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        java.lang.Class<java.lang.Object> objClass4 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objClass4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
    }

    @Test
    public void test632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test632");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        boolean boolean14 = stdKeySerializer7.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer7.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        boolean boolean25 = objJsonSerializer24.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        boolean boolean29 = stdKeySerializer26.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = objJsonSerializer37.isEmpty((java.lang.Object) stdKeySerializer38);
        java.lang.Class<?> wildcardClass63 = objJsonSerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass63, true);
        boolean boolean66 = objJsonSerializer24.isEmpty((java.lang.Object) jsonNode65);
        boolean boolean67 = objJsonSerializer16.isEmpty(serializerProvider17, (java.lang.Object) boolean66);
        boolean boolean68 = objJsonSerializer6.isEmpty((java.lang.Object) objJsonSerializer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        boolean boolean72 = stdKeySerializer69.isUnwrappingSerializer();
        boolean boolean73 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer69);
        boolean boolean74 = objJsonSerializer6.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer76 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        boolean boolean79 = stdKeySerializer76.isEmpty(serializerProvider77, (java.lang.Object) (short) 1);
        boolean boolean81 = stdKeySerializer76.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer82 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer83 = stdKeySerializer76.unwrappingSerializer(nameTransformer82);
        boolean boolean84 = objJsonSerializer6.isEmpty(serializerProvider75, (java.lang.Object) stdKeySerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test633");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.reflect.Type type45 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer0.getSchema(serializerProvider44, type45, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer0.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
    }

    @Test
    public void test634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test634");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer26.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = stdKeySerializer21.isEmpty((java.lang.Object) jsonNode36);
        boolean boolean38 = stdKeySerializer0.isEmpty(serializerProvider20, (java.lang.Object) boolean37);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer0.unwrappingSerializer(nameTransformer39);
        boolean boolean41 = objJsonSerializer40.usesObjectId();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test635");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass33, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean37 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) stdKeySerializer12);
        java.lang.Class<java.lang.Object> objClass38 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass39 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass40 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objClass38);
        org.junit.Assert.assertNotNull(objClass39);
        org.junit.Assert.assertNotNull(objClass40);
    }

    @Test
    public void test636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test636");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass34, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer6.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass34, false);
        boolean boolean39 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass34);
        boolean boolean40 = stdKeySerializer0.isUnwrappingSerializer();
        java.lang.Class<java.lang.Object> objClass41 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass42 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        java.lang.Throwable throwable44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        boolean boolean48 = stdKeySerializer45.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        boolean boolean60 = stdKeySerializer57.isEmpty(serializerProvider58, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer57.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        java.lang.Class<?> wildcardClass78 = stdKeySerializer74.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer69.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass78);
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer57.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass78);
        boolean boolean81 = objJsonSerializer56.isEmpty((java.lang.Object) stdKeySerializer57);
        java.lang.Class<?> wildcardClass82 = objJsonSerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer45.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass82, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer86 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer86.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer86.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer89 = stdKeySerializer86.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = stdKeySerializer86.getDelegatee();
        java.lang.Class<java.lang.Object> objClass91 = stdKeySerializer86.handledType();
        boolean boolean93 = stdKeySerializer86.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer94 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer95 = stdKeySerializer86.unwrappingSerializer(nameTransformer94);
        boolean boolean96 = stdKeySerializer45.isEmpty(serializerProvider85, (java.lang.Object) stdKeySerializer86);
        java.lang.Class<java.lang.Object> objClass97 = stdKeySerializer45.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider43, throwable44, (java.lang.Object) objClass97, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objClass41);
        org.junit.Assert.assertNotNull(objClass42);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNull(wildcardJsonSerializer89);
        org.junit.Assert.assertNull(wildcardJsonSerializer90);
        org.junit.Assert.assertNotNull(objClass91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(objClass97);
    }

    @Test
    public void test637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test637");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.unwrappingSerializer(nameTransformer18);
        boolean boolean20 = objJsonSerializer19.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test638");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper58 = null;
        com.fasterxml.jackson.databind.JavaType javaType59 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer12.acceptJsonFormatVisitor(jsonFormatVisitorWrapper58, javaType59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test639");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer7.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass72, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer85 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer86 = stdKeySerializer79.unwrappingSerializer(nameTransformer85);
        java.lang.Class<?> wildcardClass87 = stdKeySerializer79.getClass();
        boolean boolean88 = stdKeySerializer7.isEmpty(serializerProvider78, (java.lang.Object) wildcardClass87);
        boolean boolean89 = stdKeySerializer7.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }
}

